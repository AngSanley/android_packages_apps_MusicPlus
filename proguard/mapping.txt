android.support.v13.app.FragmentCompat -> android.support.v13.app.FragmentCompat:
    android.support.v13.app.FragmentCompat$FragmentCompatImpl IMPL -> a
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl -> android.support.v13.app.a:
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v13.app.FragmentCompat$FragmentCompatImpl -> android.support.v13.app.b:
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl -> android.support.v13.app.c:
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl -> android.support.v13.app.d:
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v13.app.FragmentCompatICS -> android.support.v13.app.e:
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
android.support.v13.app.FragmentCompatICSMR1 -> android.support.v13.app.f:
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v13.app.FragmentPagerAdapter -> android.support.v13.app.FragmentPagerAdapter:
    android.app.FragmentManager mFragmentManager -> a
    android.app.FragmentTransaction mCurTransaction -> b
    android.app.Fragment mCurrentPrimaryItem -> c
    android.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> a
android.support.v13.app.FragmentStatePagerAdapter -> android.support.v13.app.FragmentStatePagerAdapter:
    android.app.FragmentManager mFragmentManager -> a
    android.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.app.Fragment mCurrentPrimaryItem -> e
    android.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v13.app.FragmentTabHost -> android.support.v13.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v13.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setup(android.content.Context,android.app.FragmentManager) -> setup
    void setup(android.content.Context,android.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.app.FragmentTransaction doTabChanged(java.lang.String,android.app.FragmentTransaction) -> a
android.support.v13.app.FragmentTabHost$DummyTabFactory -> android.support.v13.app.g:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v13.app.FragmentTabHost$SavedState -> android.support.v13.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v13.app.FragmentTabHost$SavedState$1 -> android.support.v13.app.h:
    android.support.v13.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v13.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v13.app.FragmentTabHost$TabInfo -> android.support.v13.app.i:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.app.Fragment fragment -> d
    android.app.Fragment access$102(android.support.v13.app.FragmentTabHost$TabInfo,android.app.Fragment) -> a
    android.app.Fragment access$100(android.support.v13.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v13.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v13.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v13.app.FragmentTabHost$TabInfo) -> d
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> a
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.a:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.b:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.c:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.d:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
android.support.v4.app.BackStackRecord -> android.support.v4.app.a:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> a
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.c:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> a
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> b
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void instantiateChildFragmentManager() -> k
    void performCreate(android.os.Bundle) -> b
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void performActivityCreated(android.os.Bundle) -> c
    void performStart() -> c
    void performResume() -> d
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> e
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> d
    void performPause() -> f
    void performStop() -> g
    void performReallyStop() -> h
    void performDestroyView() -> i
    void performDestroy() -> j
android.support.v4.app.Fragment$1 -> android.support.v4.app.d:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.f:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.g:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.h:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.i:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.j:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.k:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState$2563266(int) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> a
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void checkStateLoss() -> d
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> e
    void addBackStackState(android.support.v4.app.BackStackRecord) -> a
    boolean popBackStackState$68507953(java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> b
    void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> c
    android.os.Parcelable saveAllState() -> c
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.l:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.m:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.n:
    java.lang.String val$name -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.o:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.s:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> Y
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> Z
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> a
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> k
android.support.v4.app.ListFragment$1 -> android.support.v4.app.v:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.w:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.x:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> a
    void doStop() -> b
    void doRetain() -> c
    void finishRetain() -> d
    void doReportNextStart() -> e
    void doReportStart() -> f
    void doDestroy() -> g
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.y:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.z:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.aa:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.ab:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.ac:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ad:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> a
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> a
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> a
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.ae:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.af:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.ag:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.ah:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.ai:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> b
    java.lang.CharSequence mBigContentTitle -> c
    java.lang.CharSequence mSummaryText -> d
    boolean mSummaryTextSet -> e
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.aj:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> a
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> a
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> a
    android.content.Intent mIntent -> b
    java.lang.CharSequence mChooserTitle -> c
    java.util.ArrayList mToAddresses -> d
    java.util.ArrayList mCcAddresses -> e
    java.util.ArrayList mBccAddresses -> f
    java.util.ArrayList mStreams -> g
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> a
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> a
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> a
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    android.app.Activity mActivity -> a
    android.content.Intent mIntent -> b
    java.lang.String mCallingPackage -> c
    android.content.ComponentName mCallingActivity -> d
    java.util.ArrayList mStreams -> e
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ak:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.al:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle$115f5926(java.lang.StringBuilder,java.lang.CharSequence,int) -> a
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.am:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.an:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ao:
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ap:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.aq:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> a
    java.util.ArrayList mIntents -> b
    android.content.Context mSourceContext -> c
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.ar:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.as:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.at:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> a
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.a:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.b:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.c:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.d:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.e:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.f:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.g:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.h:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.i:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.j:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.k:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    java.lang.Object postResult(java.lang.Object) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.l:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.m:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.n:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.o:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.p:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.q:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> a
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.r:
    java.lang.Object[] mParams -> b
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> a
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.a:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.b:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.c:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.d:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.e:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.f:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.g:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.h:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> a
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.i:
    java.lang.ThreadLocal mThreadSocketTags -> a
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.j:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> a
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.k:
    int statsTag -> a
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.l:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.m:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.a:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> a
    java.io.File mBackupName -> b
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> a
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> a
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch$748c512d(long[],int,long) -> a
    int idealByteArraySize(int) -> idealByteArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> a
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch$76412d8d(int[],int,int) -> a
    int idealIntArraySize(int) -> a
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.a:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.b:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.c:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.e:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.f:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.g:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.h:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.i:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.j:
    int mTouchSlopSquare -> a
    int mDoubleTapSlopSquare -> b
    int mMinimumFlingVelocity -> c
    int mMaximumFlingVelocity -> d
    int LONGPRESS_TIMEOUT -> e
    int TAP_TIMEOUT -> f
    int DOUBLE_TAP_TIMEOUT -> g
    android.os.Handler mHandler -> h
    android.view.GestureDetector$OnGestureListener mListener -> i
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> j
    boolean mStillDown -> k
    boolean mInLongPress -> l
    boolean mAlwaysInTapRegion -> m
    boolean mAlwaysInBiggerTapRegion -> n
    android.view.MotionEvent mCurrentDownEvent -> o
    android.view.MotionEvent mPreviousUpEvent -> p
    boolean mIsDoubleTapping -> q
    float mLastFocusX -> r
    float mLastFocusY -> s
    float mDownFocusX -> t
    float mDownFocusY -> u
    boolean mIsLongpressEnabled -> v
    android.view.VelocityTracker mVelocityTracker -> w
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> a
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> b
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> c
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> d
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> e
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.k:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1 -> android.support.v4.view.l:
    android.view.GestureDetector mDetector -> a
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.m:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.n:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.o:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.p:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> a
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.q:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.r:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.s:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.t:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.u:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.v:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.w:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.x:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.y:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.z:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> a
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.ab:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.ac:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.ad:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.ae:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.af:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.ag:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.ah:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ai:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ak:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.al:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.am:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.an:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ao:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ap:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.aq:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ar:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.as:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.au:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.av:
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aw:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ax:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ay:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.az:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ba:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bb:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.bc:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bd:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.be:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    long mFakeDragBeginTime -> Q
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> R
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> S
    boolean mFirstLayout -> T
    boolean mNeedCalculatePageOffsets -> U
    boolean mCalledSuper -> V
    int mDecorChildCount -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    void initViewPager() -> d
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> a
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> b
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> e
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> f
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> g
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000$b020504(android.support.v4.view.ViewPager) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> b
    int access$300(android.support.v4.view.ViewPager) -> c
    int[] access$400() -> c
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bf:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bg:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bh:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bi:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bj:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> a
    boolean needsMeasure -> b
    int position -> c
    int childIndex -> d
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bk:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bl:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bm:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bn:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bo:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> a
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.a:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.b:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.c:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.d:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.e:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.f:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> a
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> b
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.g:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.h:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.i:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.j:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.k:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.l:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.m:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.n:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.o:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.p:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.q:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.r:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.s:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.t:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.u:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.v:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.w:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.x:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.y:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.z:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.aa:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.ab:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.ac:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.ad:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.ae:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.af:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.a:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.b:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.c:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.d:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.e:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.f:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.g:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> a
    int mDropDownLayout -> b
    android.view.LayoutInflater mInflater -> c
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> a
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> a
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.i:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.j:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.k:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.l:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.m:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.n:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.o:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> b
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> c
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> d
    java.lang.String[] mOriginalFrom -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
com.andrew.apolloMod.Constants -> com.andrew.apolloMod.Constants:
    java.lang.String LASTFM_API_KEY -> LASTFM_API_KEY
    java.lang.String APOLLO -> APOLLO
    java.lang.String APOLLO_PREFERENCES -> APOLLO_PREFERENCES
    java.lang.String ARTIST_KEY -> ARTIST_KEY
    java.lang.String ALBUM_KEY -> ALBUM_KEY
    java.lang.String ALBUM_ID_KEY -> ALBUM_ID_KEY
    java.lang.String NUMALBUMS -> NUMALBUMS
    java.lang.String GENRE_KEY -> GENRE_KEY
    java.lang.String ARTIST_ID -> ARTIST_ID
    java.lang.String NUMWEEKS -> NUMWEEKS
    java.lang.String PLAYLIST_NAME_FAVORITES -> PLAYLIST_NAME_FAVORITES
    java.lang.String PLAYLIST_NAME -> PLAYLIST_NAME
    java.lang.String WIDGET_STYLE -> WIDGET_STYLE
    java.lang.String THEME_PACKAGE_NAME -> THEME_PACKAGE_NAME
    java.lang.String THEME_DESCRIPTION -> THEME_DESCRIPTION
    java.lang.String THEME_PREVIEW -> THEME_PREVIEW
    java.lang.String THEME_TITLE -> THEME_TITLE
    java.lang.String VISUALIZATION_TYPE -> VISUALIZATION_TYPE
    java.lang.String UP_STARTS_ALBUM_ACTIVITY -> UP_STARTS_ALBUM_ACTIVITY
    java.lang.String TABS_ENABLED -> TABS_ENABLED
    java.lang.String TYPE_ARTIST -> TYPE_ARTIST
    java.lang.String TYPE_ALBUM -> TYPE_ALBUM
    java.lang.String TYPE_GENRE -> TYPE_GENRE
    java.lang.String TYPE_PLAYLIST -> TYPE_PLAYLIST
    java.lang.String ALBUM_SUFFIX -> ALBUM_SUFFIX
    java.lang.String ARTIST_SUFFIX -> ARTIST_SUFFIX
    java.lang.String PLAYLIST_SUFFIX -> PLAYLIST_SUFFIX
    java.lang.String GENRE_SUFFIX -> GENRE_SUFFIX
    java.lang.String SRC_FIRST_AVAILABLE -> SRC_FIRST_AVAILABLE
    java.lang.String SRC_LASTFM -> SRC_LASTFM
    java.lang.String SRC_FILE -> SRC_FILE
    java.lang.String SRC_GALLERY -> SRC_GALLERY
    java.lang.String SIZE_NORMAL -> SIZE_NORMAL
    java.lang.String SIZE_THUMB -> SIZE_THUMB
    java.lang.String MIME_TYPE -> MIME_TYPE
    java.lang.String INTENT_ACTION -> INTENT_ACTION
    java.lang.String DATA_SCHEME -> DATA_SCHEME
    java.lang.String EXTERNAL -> EXTERNAL
    long PLAYLIST_UNKNOWN -> PLAYLIST_UNKNOWN
    long PLAYLIST_ALL_SONGS -> PLAYLIST_ALL_SONGS
    long PLAYLIST_QUEUE -> PLAYLIST_QUEUE
    long PLAYLIST_NEW -> PLAYLIST_NEW
    long PLAYLIST_FAVORITES -> PLAYLIST_FAVORITES
    long PLAYLIST_RECENTLY_ADDED -> PLAYLIST_RECENTLY_ADDED
    java.lang.String[] GENRES_DB -> GENRES_DB
    int THEME_ITEM_BACKGROUND -> THEME_ITEM_BACKGROUND
    int THEME_ITEM_FOREGROUND -> THEME_ITEM_FOREGROUND
    java.lang.String INTENT_ADD_TO_PLAYLIST -> INTENT_ADD_TO_PLAYLIST
    java.lang.String INTENT_PLAYLIST_LIST -> INTENT_PLAYLIST_LIST
    java.lang.String INTENT_CREATE_PLAYLIST -> INTENT_CREATE_PLAYLIST
    java.lang.String INTENT_RENAME_PLAYLIST -> INTENT_RENAME_PLAYLIST
    java.lang.String INTENT_KEY_RENAME -> INTENT_KEY_RENAME
    java.lang.String INTENT_KEY_DEFAULT_NAME -> INTENT_KEY_DEFAULT_NAME
com.andrew.apolloMod.IApolloService -> com.andrew.apolloMod.IApolloService:
    void openFile(java.lang.String) -> openFile
    void open(long[],int) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    int getQueuePosition() -> getQueuePosition
    boolean isPlaying() -> isPlaying
    void stop() -> stop
    void pause() -> pause
    void play() -> play
    void prev() -> prev
    void next() -> next
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    java.lang.String getTrackName() -> getTrackName
    java.lang.String getAlbumName() -> getAlbumName
    long getAlbumId() -> getAlbumId
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    void enqueue(long[],int) -> enqueue
    long[] getQueue() -> getQueue
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    void setShuffleMode(int) -> setShuffleMode
    void notifyChange(java.lang.String) -> notifyChange
    int getShuffleMode() -> getShuffleMode
    int removeTracks(int,int) -> removeTracks
    int removeTrack(long) -> removeTrack
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    int getAudioSessionId() -> getAudioSessionId
    void addToFavorites(long) -> addToFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    boolean isFavorite(long) -> isFavorite
    void toggleFavorite() -> toggleFavorite
com.andrew.apolloMod.IApolloService$Stub -> com.andrew.apolloMod.IApolloService$Stub:
    com.andrew.apolloMod.IApolloService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.andrew.apolloMod.IApolloService$Stub$Proxy -> com.andrew.apolloMod.a:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void openFile(java.lang.String) -> openFile
    void open(long[],int) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    int getQueuePosition() -> getQueuePosition
    boolean isPlaying() -> isPlaying
    void stop() -> stop
    void pause() -> pause
    void play() -> play
    void prev() -> prev
    void next() -> next
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    java.lang.String getTrackName() -> getTrackName
    java.lang.String getAlbumName() -> getAlbumName
    long getAlbumId() -> getAlbumId
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    void enqueue(long[],int) -> enqueue
    long[] getQueue() -> getQueue
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    void setShuffleMode(int) -> setShuffleMode
    void notifyChange(java.lang.String) -> notifyChange
    int getShuffleMode() -> getShuffleMode
    int removeTracks(int,int) -> removeTracks
    int removeTrack(long) -> removeTrack
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    int getAudioSessionId() -> getAudioSessionId
    void addToFavorites(long) -> addToFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    boolean isFavorite(long) -> isFavorite
    void toggleFavorite() -> toggleFavorite
com.andrew.apolloMod.NowPlayingCursor -> com.andrew.apolloMod.NowPlayingCursor:
    java.lang.String[] mProjection -> a
    android.database.Cursor mCurrentPlaylistCursor -> b
    int mSize -> c
    long[] mNowPlaying -> d
    long[] mCursorIdxs -> e
    android.content.Context context -> f
    com.andrew.apolloMod.IApolloService mService -> g
    void makeNowPlayingCursor() -> a
    int getCount() -> getCount
    boolean onMove(int,int) -> onMove
    java.lang.String getString(int) -> getString
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    int getType(int) -> getType
    boolean isNull(int) -> isNull
    java.lang.String[] getColumnNames() -> getColumnNames
    void deactivate() -> deactivate
    boolean requery() -> requery
com.andrew.apolloMod.activities.AudioPlayerHolder -> com.andrew.apolloMod.activities.AudioPlayerHolder:
    com.andrew.apolloMod.service.ServiceToken mToken -> a
    com.andrew.apolloMod.ui.adapters.PagerAdapter mPagerAdapter -> b
    android.content.BroadcastReceiver mMediaStatusReceiver -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void initPager() -> initPager
com.andrew.apolloMod.activities.AudioPlayerHolder$1 -> com.andrew.apolloMod.activities.a:
    com.andrew.apolloMod.activities.AudioPlayerHolder this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.andrew.apolloMod.activities.MusicLibrary -> com.andrew.apolloMod.activities.MusicLibrary:
    com.andrew.apolloMod.service.ServiceToken mToken -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    void initPager() -> initPager
    void initScrollableTabs(android.support.v4.view.ViewPager) -> initScrollableTabs
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void shuffleAll() -> shuffleAll
com.andrew.apolloMod.activities.PlayExternal -> com.andrew.apolloMod.activities.PlayExternal:
    com.andrew.apolloMod.service.ServiceToken mToken -> a
    android.net.Uri mUri -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    void onCancel(android.content.DialogInterface) -> onCancel
    void access$0$2a84d693(com.andrew.apolloMod.activities.PlayExternal,long,boolean) -> a
com.andrew.apolloMod.activities.PlayExternal$1 -> com.andrew.apolloMod.activities.b:
    com.andrew.apolloMod.activities.PlayExternal this$0 -> a
    java.lang.String val$file -> b
    long val$id -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.andrew.apolloMod.activities.QueryBrowserActivity -> com.andrew.apolloMod.activities.QueryBrowserActivity:
    com.andrew.apolloMod.activities.QueryBrowserActivity$QueryListAdapter mAdapter -> a
    boolean mAdapterSent -> b
    java.lang.String mFilterString -> c
    com.andrew.apolloMod.service.ServiceToken mToken -> d
    android.widget.ListView mTrackList -> e
    android.database.Cursor mQueryCursor -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onDestroy() -> onDestroy
    void init(android.database.Cursor) -> init
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    android.database.Cursor getQueryCursor(android.content.AsyncQueryHandler,java.lang.String) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.database.Cursor access$0(com.andrew.apolloMod.activities.QueryBrowserActivity) -> a
    void access$1(com.andrew.apolloMod.activities.QueryBrowserActivity,android.database.Cursor) -> a
    android.database.Cursor access$2$15507b79(com.andrew.apolloMod.activities.QueryBrowserActivity,java.lang.String) -> a
com.andrew.apolloMod.activities.QueryBrowserActivity$QueryListAdapter -> com.andrew.apolloMod.activities.c:
    com.andrew.apolloMod.activities.QueryBrowserActivity mActivity -> a
    android.content.AsyncQueryHandler mQueryHandler -> b
    java.lang.String mConstraint -> c
    boolean mConstraintIsValid -> d
    void setActivity(com.andrew.apolloMod.activities.QueryBrowserActivity) -> setActivity
    android.content.AsyncQueryHandler getQueryHandler() -> getQueryHandler
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    com.andrew.apolloMod.activities.QueryBrowserActivity access$0(com.andrew.apolloMod.activities.QueryBrowserActivity$QueryListAdapter) -> a
com.andrew.apolloMod.activities.QueryBrowserActivity$QueryListAdapter$QueryHandler -> com.andrew.apolloMod.activities.d:
    com.andrew.apolloMod.activities.QueryBrowserActivity$QueryListAdapter this$1 -> a
    void onQueryComplete(int,java.lang.Object,android.database.Cursor) -> onQueryComplete
com.andrew.apolloMod.activities.QuickQueue -> com.andrew.apolloMod.activities.QuickQueue:
    void onCreate(android.os.Bundle) -> onCreate
com.andrew.apolloMod.activities.TracksBrowser -> com.andrew.apolloMod.activities.TracksBrowser:
    android.os.Bundle bundle -> a
    android.content.Intent intent -> b
    java.lang.String mimeType -> c
    com.andrew.apolloMod.service.ServiceToken mToken -> d
    int RESULT_LOAD_IMAGE -> e
    com.andrew.apolloMod.cache.ImageProvider mImageProvider -> f
    android.content.BroadcastReceiver mMediaStatusReceiver -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onSearchWeb() -> onSearchWeb
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void whatBundle(android.os.Bundle) -> whatBundle
    java.lang.String getArtist() -> getArtist
    java.lang.String getAlbum() -> getAlbum
    java.lang.String getAlbumId() -> getAlbumId
    java.lang.String getNumAlbums() -> getNumAlbums
    java.lang.String getGenre() -> getGenre
    java.lang.String getPlaylist() -> getPlaylist
com.andrew.apolloMod.activities.TracksBrowser$1 -> com.andrew.apolloMod.activities.e:
    com.andrew.apolloMod.activities.TracksBrowser this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.andrew.apolloMod.app.widgets.AppWidget11 -> com.andrew.apolloMod.app.widgets.AppWidget11:
    java.lang.String CMDAPPWIDGETUPDATE -> CMDAPPWIDGETUPDATE
    com.andrew.apolloMod.app.widgets.AppWidget11 sInstance -> a
    com.andrew.apolloMod.app.widgets.AppWidget11 getInstance() -> getInstance
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    void notifyChange(com.andrew.apolloMod.service.ApolloService,java.lang.String) -> notifyChange
    void performUpdate(com.andrew.apolloMod.service.ApolloService,int[]) -> performUpdate
    void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews) -> a
com.andrew.apolloMod.app.widgets.AppWidget41 -> com.andrew.apolloMod.app.widgets.AppWidget41:
    java.lang.String CMDAPPWIDGETUPDATE -> CMDAPPWIDGETUPDATE
    com.andrew.apolloMod.app.widgets.AppWidget41 sInstance -> a
    com.andrew.apolloMod.app.widgets.AppWidget41 getInstance() -> getInstance
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    void notifyChange(com.andrew.apolloMod.service.ApolloService,java.lang.String) -> notifyChange
    void performUpdate(com.andrew.apolloMod.service.ApolloService,int[]) -> performUpdate
    void linkButtons(android.content.Context,android.widget.RemoteViews,boolean) -> a
com.andrew.apolloMod.app.widgets.AppWidget42 -> com.andrew.apolloMod.app.widgets.AppWidget42:
    java.lang.String CMDAPPWIDGETUPDATE -> CMDAPPWIDGETUPDATE
    com.andrew.apolloMod.app.widgets.AppWidget42 sInstance -> a
    com.andrew.apolloMod.app.widgets.AppWidget42 getInstance() -> getInstance
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    void notifyChange(com.andrew.apolloMod.service.ApolloService,java.lang.String) -> notifyChange
    void performUpdate(com.andrew.apolloMod.service.ApolloService,int[]) -> performUpdate
    void linkButtons(android.content.Context,android.widget.RemoteViews,boolean) -> a
com.andrew.apolloMod.cache.ImageCache -> com.andrew.apolloMod.cache.ImageCache:
    java.lang.String TAG -> a
    android.util.LruCache mLruCache -> b
    com.andrew.apolloMod.cache.ImageCache sInstance -> c
    com.andrew.apolloMod.cache.ImageCache getInstance(android.content.Context) -> getInstance
    void init(android.content.Context) -> init
    com.andrew.apolloMod.cache.ImageCache findOrCreateCache(android.app.Activity) -> findOrCreateCache
    void add(java.lang.String,android.graphics.Bitmap) -> add
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clearMemCache() -> clearMemCache
com.andrew.apolloMod.cache.ImageCache$1 -> com.andrew.apolloMod.cache.a:
    com.andrew.apolloMod.cache.ImageCache this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.andrew.apolloMod.cache.ImageCache$RetainFragment -> com.andrew.apolloMod.cache.ImageCache$RetainFragment:
    java.lang.Object mObject -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setObject(java.lang.Object) -> setObject
    java.lang.Object getObject() -> getObject
com.andrew.apolloMod.cache.ImageInfo -> com.andrew.apolloMod.cache.ImageInfo:
    java.lang.String type -> type
    java.lang.String source -> source
    java.lang.String size -> size
    java.lang.String[] data -> data
com.andrew.apolloMod.cache.ImageProvider -> com.andrew.apolloMod.cache.ImageProvider:
    com.andrew.apolloMod.cache.ImageCache memCache -> a
    java.util.Map pendingImagesMap -> b
    java.util.Set unavailable -> c
    android.content.Context mContext -> d
    int thumbSize -> e
    com.andrew.apolloMod.cache.ImageProvider mInstance -> f
    com.andrew.apolloMod.cache.ImageProvider getInstance(android.app.Activity) -> getInstance
    void setImageCache(com.andrew.apolloMod.cache.ImageCache) -> setImageCache
    void loadImage(android.widget.ImageView,com.andrew.apolloMod.cache.ImageInfo) -> loadImage
    void asyncLoad(java.lang.String,android.widget.ImageView,android.os.AsyncTask) -> a
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> bitmapReady
    void clearFromMemoryCache(java.lang.String) -> clearFromMemoryCache
    void clearAllCaches() -> clearAllCaches
com.andrew.apolloMod.helpers.AddIdCursorLoader -> com.andrew.apolloMod.helpers.AddIdCursorLoader:
    android.content.Loader$ForceLoadContentObserver mObserver -> a
    android.net.Uri mUri -> b
    java.lang.String[] mProjection -> c
    java.lang.String mSelection -> d
    java.lang.String[] mSelectionArgs -> e
    java.lang.String mSortOrder -> f
    android.database.Cursor mCursor -> g
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
    java.lang.Object loadInBackground() -> loadInBackground
com.andrew.apolloMod.helpers.DomElement -> com.andrew.apolloMod.helpers.DomElement:
    org.w3c.dom.Element e -> a
    org.w3c.dom.Element getElement() -> getElement
    boolean hasAttribute(java.lang.String) -> hasAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getText() -> getText
    boolean hasChild(java.lang.String) -> hasChild
    com.andrew.apolloMod.helpers.DomElement getChild(java.lang.String) -> getChild
    java.lang.String getChildText(java.lang.String) -> getChildText
    java.util.List getChildren() -> getChildren
    java.util.List getChildren(java.lang.String) -> getChildren
    java.lang.String getTagName() -> getTagName
com.andrew.apolloMod.helpers.GetBitmapTask -> com.andrew.apolloMod.helpers.GetBitmapTask:
    java.lang.ref.WeakReference mListenerReference -> a
    java.lang.ref.WeakReference mContextReference -> b
    com.andrew.apolloMod.cache.ImageInfo mImageInfo -> c
    int mThumbSize -> d
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.andrew.apolloMod.helpers.GetBitmapTask$OnBitmapReadyListener -> com.andrew.apolloMod.helpers.GetBitmapTask$OnBitmapReadyListener:
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> bitmapReady
com.andrew.apolloMod.helpers.RefreshableFragment -> com.andrew.apolloMod.helpers.RefreshableFragment:
    void refresh() -> refresh
com.andrew.apolloMod.helpers.lastfm.Album -> com.andrew.apolloMod.helpers.lastfm.Album:
    com.andrew.apolloMod.helpers.lastfm.ItemFactory FACTORY -> a
    java.lang.String artist -> b
    java.lang.String getArtist() -> getArtist
    com.andrew.apolloMod.helpers.lastfm.Album getInfo(java.lang.String,java.lang.String,java.lang.String) -> getInfo
    com.andrew.apolloMod.helpers.lastfm.Album getInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getInfo
    void access$1(com.andrew.apolloMod.helpers.lastfm.Album,java.lang.String) -> a
    java.lang.String access$2(com.andrew.apolloMod.helpers.lastfm.Album) -> a
com.andrew.apolloMod.helpers.lastfm.Album$AlbumFactory -> com.andrew.apolloMod.helpers.lastfm.a:
    com.andrew.apolloMod.helpers.lastfm.Album createItemFromElement(com.andrew.apolloMod.helpers.DomElement) -> createItemFromElement
    java.lang.Object createItemFromElement(com.andrew.apolloMod.helpers.DomElement) -> createItemFromElement
com.andrew.apolloMod.helpers.lastfm.Artist -> com.andrew.apolloMod.helpers.lastfm.Artist:
    com.andrew.apolloMod.helpers.lastfm.ItemFactory FACTORY -> a
    com.andrew.apolloMod.helpers.lastfm.PaginatedResult getImages(java.lang.String,java.lang.String) -> getImages
    com.andrew.apolloMod.helpers.lastfm.PaginatedResult getImages(java.lang.String,int,int,java.lang.String) -> getImages
com.andrew.apolloMod.helpers.lastfm.Artist$ArtistFactory -> com.andrew.apolloMod.helpers.lastfm.b:
    com.andrew.apolloMod.helpers.lastfm.Artist createItemFromElement(com.andrew.apolloMod.helpers.DomElement) -> createItemFromElement
    java.lang.Object createItemFromElement(com.andrew.apolloMod.helpers.DomElement) -> createItemFromElement
com.andrew.apolloMod.helpers.lastfm.Caller -> com.andrew.apolloMod.helpers.lastfm.Caller:
    com.andrew.apolloMod.helpers.lastfm.Caller instance -> a
    java.lang.String apiRootUrl -> b
    java.lang.String userAgent -> c
    com.andrew.apolloMod.helpers.lastfm.Result lastResult -> d
    com.andrew.apolloMod.helpers.lastfm.Caller getInstance() -> getInstance
    com.andrew.apolloMod.helpers.lastfm.Result call(java.lang.String,java.lang.String,java.lang.String[]) -> call
    com.andrew.apolloMod.helpers.lastfm.Result call(java.lang.String,java.lang.String,java.util.Map) -> call
    com.andrew.apolloMod.helpers.lastfm.Result call(java.lang.String,com.andrew.apolloMod.helpers.lastfm.Session,java.lang.String[]) -> call
    com.andrew.apolloMod.helpers.lastfm.Result call(java.lang.String,com.andrew.apolloMod.helpers.lastfm.Session,java.util.Map) -> call
    com.andrew.apolloMod.helpers.lastfm.Result call(java.lang.String,java.lang.String,java.util.Map,com.andrew.apolloMod.helpers.lastfm.Session) -> a
    java.net.HttpURLConnection openConnection(java.lang.String) -> openConnection
    javax.xml.parsers.DocumentBuilder newDocumentBuilder() -> a
    java.lang.String buildPostBody(java.lang.String,java.util.Map,java.lang.String[]) -> a
com.andrew.apolloMod.helpers.lastfm.Image -> com.andrew.apolloMod.helpers.lastfm.Image:
    com.andrew.apolloMod.helpers.lastfm.ItemFactory FACTORY -> a
    java.lang.String url -> b
    java.lang.String getUrl() -> getUrl
    void access$1(com.andrew.apolloMod.helpers.lastfm.Image,java.lang.String) -> a
com.andrew.apolloMod.helpers.lastfm.Image$ImageFactory -> com.andrew.apolloMod.helpers.lastfm.c:
    com.andrew.apolloMod.helpers.lastfm.Image createItemFromElement(com.andrew.apolloMod.helpers.DomElement) -> createItemFromElement
    java.lang.Object createItemFromElement(com.andrew.apolloMod.helpers.DomElement) -> createItemFromElement
com.andrew.apolloMod.helpers.lastfm.ImageHolder -> com.andrew.apolloMod.helpers.lastfm.ImageHolder:
    java.util.Map imageUrls -> imageUrls
    java.util.Set availableSizes() -> availableSizes
    java.lang.String getImageURL(com.andrew.apolloMod.helpers.lastfm.ImageSize) -> getImageURL
    void loadImages(com.andrew.apolloMod.helpers.lastfm.ImageHolder,com.andrew.apolloMod.helpers.DomElement) -> loadImages
    java.lang.String getLargestImage() -> getLargestImage
com.andrew.apolloMod.helpers.lastfm.ImageSize -> com.andrew.apolloMod.helpers.lastfm.ImageSize:
    com.andrew.apolloMod.helpers.lastfm.ImageSize SMALL -> SMALL
    com.andrew.apolloMod.helpers.lastfm.ImageSize MEDIUM -> MEDIUM
    com.andrew.apolloMod.helpers.lastfm.ImageSize LARGE -> LARGE
    com.andrew.apolloMod.helpers.lastfm.ImageSize EXTRALARGE -> EXTRALARGE
    com.andrew.apolloMod.helpers.lastfm.ImageSize MEGA -> MEGA
    com.andrew.apolloMod.helpers.lastfm.ImageSize[] ENUM$VALUES -> a
    com.andrew.apolloMod.helpers.lastfm.ImageSize[] values() -> values
    com.andrew.apolloMod.helpers.lastfm.ImageSize valueOf(java.lang.String) -> valueOf
com.andrew.apolloMod.helpers.lastfm.ItemFactory -> com.andrew.apolloMod.helpers.lastfm.d:
    java.lang.Object createItemFromElement(com.andrew.apolloMod.helpers.DomElement) -> createItemFromElement
com.andrew.apolloMod.helpers.lastfm.ItemFactoryBuilder -> com.andrew.apolloMod.helpers.lastfm.e:
    com.andrew.apolloMod.helpers.lastfm.ItemFactoryBuilder INSTANCE -> a
    java.util.Map factories -> b
    com.andrew.apolloMod.helpers.lastfm.ItemFactoryBuilder getFactoryBuilder() -> getFactoryBuilder
    void addItemFactory(java.lang.Class,com.andrew.apolloMod.helpers.lastfm.ItemFactory) -> addItemFactory
    com.andrew.apolloMod.helpers.lastfm.ItemFactory getItemFactory(java.lang.Class) -> getItemFactory
com.andrew.apolloMod.helpers.lastfm.MusicEntry -> com.andrew.apolloMod.helpers.lastfm.MusicEntry:
    java.lang.String name -> name
    java.lang.String url -> url
    java.lang.String mbid -> mbid
    java.lang.String id -> id
    int percentageChange -> percentageChange
    java.util.Collection tags -> tags
    java.lang.String getMbid() -> getMbid
    java.lang.String getName() -> getName
    java.lang.String getId() -> getId
    java.lang.String getUrl() -> getUrl
    java.util.Collection getTags() -> getTags
    java.lang.String toString() -> toString
    void loadStandardInfo(com.andrew.apolloMod.helpers.lastfm.MusicEntry,com.andrew.apolloMod.helpers.DomElement) -> loadStandardInfo
com.andrew.apolloMod.helpers.lastfm.PaginatedResult -> com.andrew.apolloMod.helpers.lastfm.PaginatedResult:
    int page -> a
    int totalPages -> b
    java.util.Collection pageResults -> c
    int getPage() -> getPage
    java.util.Collection getPageResults() -> getPageResults
    int getTotalPages() -> getTotalPages
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
com.andrew.apolloMod.helpers.lastfm.ResponseBuilder -> com.andrew.apolloMod.helpers.lastfm.ResponseBuilder:
    java.util.Collection buildCollection(com.andrew.apolloMod.helpers.lastfm.Result,java.lang.Class) -> buildCollection
    java.util.Collection buildCollection(com.andrew.apolloMod.helpers.lastfm.Result,com.andrew.apolloMod.helpers.lastfm.ItemFactory) -> buildCollection
    java.util.Collection buildCollection(com.andrew.apolloMod.helpers.DomElement,java.lang.Class) -> buildCollection
    java.util.Collection buildCollection(com.andrew.apolloMod.helpers.DomElement,com.andrew.apolloMod.helpers.lastfm.ItemFactory) -> buildCollection
    com.andrew.apolloMod.helpers.lastfm.PaginatedResult buildPaginatedResult(com.andrew.apolloMod.helpers.lastfm.Result,java.lang.Class) -> buildPaginatedResult
    com.andrew.apolloMod.helpers.lastfm.PaginatedResult buildPaginatedResult(com.andrew.apolloMod.helpers.lastfm.Result,com.andrew.apolloMod.helpers.lastfm.ItemFactory) -> buildPaginatedResult
    com.andrew.apolloMod.helpers.lastfm.PaginatedResult buildPaginatedResult(com.andrew.apolloMod.helpers.DomElement,com.andrew.apolloMod.helpers.DomElement,java.lang.Class) -> buildPaginatedResult
    com.andrew.apolloMod.helpers.lastfm.PaginatedResult buildPaginatedResult(com.andrew.apolloMod.helpers.DomElement,com.andrew.apolloMod.helpers.DomElement,com.andrew.apolloMod.helpers.lastfm.ItemFactory) -> buildPaginatedResult
    java.lang.Object buildItem(com.andrew.apolloMod.helpers.lastfm.Result,java.lang.Class) -> buildItem
    java.lang.Object buildItem(com.andrew.apolloMod.helpers.lastfm.Result,com.andrew.apolloMod.helpers.lastfm.ItemFactory) -> buildItem
    java.lang.Object buildItem(com.andrew.apolloMod.helpers.DomElement,java.lang.Class) -> buildItem
com.andrew.apolloMod.helpers.lastfm.Result -> com.andrew.apolloMod.helpers.lastfm.Result:
    com.andrew.apolloMod.helpers.lastfm.Result$Status status -> status
    java.lang.String errorMessage -> errorMessage
    int errorCode -> errorCode
    int httpErrorCode -> httpErrorCode
    org.w3c.dom.Document resultDocument -> resultDocument
    com.andrew.apolloMod.helpers.lastfm.Result createOkResult(org.w3c.dom.Document) -> a
    com.andrew.apolloMod.helpers.lastfm.Result createHttpErrorResult(int,java.lang.String) -> a
    com.andrew.apolloMod.helpers.lastfm.Result createRestErrorResult(int,java.lang.String) -> b
    boolean isSuccessful() -> isSuccessful
    int getErrorCode() -> getErrorCode
    int getHttpErrorCode() -> getHttpErrorCode
    com.andrew.apolloMod.helpers.lastfm.Result$Status getStatus() -> getStatus
    org.w3c.dom.Document getResultDocument() -> getResultDocument
    java.lang.String getErrorMessage() -> getErrorMessage
    com.andrew.apolloMod.helpers.DomElement getContentElement() -> getContentElement
    java.lang.String toString() -> toString
com.andrew.apolloMod.helpers.lastfm.Result$Status -> com.andrew.apolloMod.helpers.lastfm.Result$Status:
    com.andrew.apolloMod.helpers.lastfm.Result$Status OK -> OK
    com.andrew.apolloMod.helpers.lastfm.Result$Status FAILED -> FAILED
    com.andrew.apolloMod.helpers.lastfm.Result$Status[] ENUM$VALUES -> a
    com.andrew.apolloMod.helpers.lastfm.Result$Status[] values() -> values
    com.andrew.apolloMod.helpers.lastfm.Result$Status valueOf(java.lang.String) -> valueOf
com.andrew.apolloMod.helpers.lastfm.Session -> com.andrew.apolloMod.helpers.lastfm.Session:
    java.lang.String apiKey -> a
    java.lang.String secret -> b
    java.lang.String username -> c
    java.lang.String key -> d
    boolean subscriber -> e
    com.andrew.apolloMod.helpers.lastfm.Session createSession(java.lang.String,java.lang.String,java.lang.String) -> createSession
    com.andrew.apolloMod.helpers.lastfm.Session createSession(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> createSession
    java.lang.String getSecret() -> getSecret
    java.lang.String getApiKey() -> getApiKey
    java.lang.String getKey() -> getKey
    boolean isSubscriber() -> isSubscriber
    java.lang.String getUsername() -> getUsername
    java.lang.String toString() -> toString
com.andrew.apolloMod.helpers.utils.ApolloUtils -> com.andrew.apolloMod.helpers.utils.ApolloUtils:
    void setBackground(android.view.View,android.graphics.Bitmap) -> setBackground
    void runnableBackground(android.widget.ImageView,android.graphics.Bitmap) -> runnableBackground
    boolean isOnline(android.content.Context) -> isOnline
    boolean isTablet(android.content.Context) -> isTablet
    void showUpTitleOnly(android.app.ActionBar) -> showUpTitleOnly
    void listHeader(android.app.Fragment,android.view.View,java.lang.String) -> listHeader
    void setListPadding(android.app.Fragment,android.widget.ListView,int,int,int,int) -> setListPadding
    boolean isAlbum(java.lang.String) -> isAlbum
    boolean isArtist(java.lang.String) -> isArtist
    boolean isGenre(java.lang.String) -> isGenre
    void setArtistId(java.lang.String,long,java.lang.String,android.content.Context) -> setArtistId
    java.lang.Long getArtistId(java.lang.String,java.lang.String,android.content.Context) -> getArtistId
    void shopFor(android.content.Context,java.lang.String) -> shopFor
    java.lang.String escapeForFileSystem(java.lang.String) -> escapeForFileSystem
    boolean downloadFile(java.lang.String,java.io.File) -> downloadFile
    void showToast(int,android.widget.Toast,android.content.Context) -> showToast
com.andrew.apolloMod.helpers.utils.ApolloUtils$1 -> com.andrew.apolloMod.helpers.utils.a:
    android.widget.ImageView val$view -> a
    android.graphics.Bitmap val$bitmap -> b
    void run() -> run
com.andrew.apolloMod.helpers.utils.ImageUtils -> com.andrew.apolloMod.helpers.utils.ImageUtils:
    java.io.File getFile(android.content.Context,com.andrew.apolloMod.cache.ImageInfo) -> a
    android.graphics.Bitmap getNormalImageFromDisk(android.content.Context,com.andrew.apolloMod.cache.ImageInfo) -> getNormalImageFromDisk
    android.graphics.Bitmap getThumbImageFromDisk(android.content.Context,com.andrew.apolloMod.cache.ImageInfo,int) -> getThumbImageFromDisk
    android.graphics.Bitmap getThumbImageFromDisk(android.content.Context,java.io.File,int) -> getThumbImageFromDisk
    java.io.File getImageFromGallery(android.content.Context,com.andrew.apolloMod.cache.ImageInfo) -> getImageFromGallery
    java.io.File getImageFromWeb(android.content.Context,com.andrew.apolloMod.cache.ImageInfo) -> getImageFromWeb
    java.io.File getImageFromMediaStore(android.content.Context,com.andrew.apolloMod.cache.ImageInfo) -> getImageFromMediaStore
    void deleteDiskCache(android.content.Context) -> deleteDiskCache
    java.lang.String createShortTag(com.andrew.apolloMod.cache.ImageInfo) -> createShortTag
com.andrew.apolloMod.helpers.utils.MusicUtils -> com.andrew.apolloMod.helpers.utils.MusicUtils:
    java.lang.StringBuilder sFormatBuilder -> a
    java.util.Formatter sFormatter -> b
    com.andrew.apolloMod.IApolloService mService -> mService
    java.util.HashMap sConnectionMap -> c
    long[] sEmptyList -> d
    java.lang.Object[] sTimeArgs -> e
    android.content.ContentValues[] sContentValuesCache -> f
    com.andrew.apolloMod.service.ServiceToken bindToService(android.app.Activity) -> bindToService
    com.andrew.apolloMod.service.ServiceToken bindToService(android.content.Context,android.content.ServiceConnection) -> bindToService
    void unbindFromService(com.andrew.apolloMod.service.ServiceToken) -> unbindFromService
    java.lang.String makeAlbumsLabel(android.content.Context,int,int,boolean) -> makeAlbumsLabel
    int getCardId(android.content.Context) -> getCardId
    android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int) -> query
    android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    void shuffleAll(android.content.Context,android.database.Cursor) -> shuffleAll
    void playAll(android.content.Context,android.database.Cursor) -> playAll
    void playAll(android.content.Context,android.database.Cursor,int) -> playAll
    void playAll(android.content.Context,long[],int) -> playAll
    void playAll$2c9a1635(android.database.Cursor,int,boolean) -> a
    long[] getSongListForCursor(android.database.Cursor) -> getSongListForCursor
    void playAll$5d12d7b3(long[],int,boolean) -> a
    long[] getQueue() -> getQueue
    int getIntPref(android.content.Context,java.lang.String,int) -> getIntPref
    long[] getSongListForArtist(android.content.Context,long) -> getSongListForArtist
    long[] getSongListForAlbum(android.content.Context,long) -> getSongListForAlbum
    long[] getSongListForGenre(android.content.Context,long) -> getSongListForGenre
    long[] getSongListForPlaylist(android.content.Context,long) -> getSongListForPlaylist
    long createPlaylist(android.content.Context,java.lang.String) -> createPlaylist
    long getFavoritesId(android.content.Context) -> getFavoritesId
    void setRingtone(android.content.Context,long) -> setRingtone
    void clearPlaylist(android.content.Context,int) -> clearPlaylist
    void addToPlaylist(android.content.Context,long[],long) -> addToPlaylist
    void toggleFavorite() -> toggleFavorite
    void addToFavorites(android.content.Context,long) -> addToFavorites
    boolean isFavorite(android.content.Context,long) -> isFavorite
    void removeFromFavorites(android.content.Context,long) -> removeFromFavorites
    void setFavoriteImage(android.widget.ImageButton) -> setFavoriteImage
    void renamePlaylist(android.content.Context,long,java.lang.String) -> renamePlaylist
    void addToCurrentPlaylist(android.content.Context,long[]) -> addToCurrentPlaylist
    java.lang.String makeTimeString(android.content.Context,long) -> makeTimeString
    long getCurrentAlbumId() -> getCurrentAlbumId
    long getCurrentArtistId() -> getCurrentArtistId
    long getCurrentAudioId() -> getCurrentAudioId
    java.lang.String getArtistName() -> getArtistName
    java.lang.String getAlbumName() -> getAlbumName
    java.lang.String getTrackName() -> getTrackName
    long getDuration() -> getDuration
    void doSearch(android.content.Context,android.database.Cursor,int) -> doSearch
    void removeAllTracks() -> removeAllTracks
    int removeTrack(long) -> removeTrack
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getArtistName(android.content.Context,long,boolean) -> getArtistName
    java.lang.String getAlbumName(android.content.Context,long,boolean) -> getAlbumName
    java.lang.String getPlaylistName(android.content.Context,long) -> getPlaylistName
    java.lang.String getGenreName(android.content.Context,long,boolean) -> getGenreName
    java.lang.String parseGenreName(android.content.Context,java.lang.String) -> parseGenreName
    boolean isPlaying() -> isPlaying
    int getQueuePosition() -> getQueuePosition
    void makePlaylistList(android.content.Context,boolean,java.util.List) -> makePlaylistList
    void notifyWidgets(java.lang.String) -> notifyWidgets
com.andrew.apolloMod.helpers.utils.StringUtilities -> com.andrew.apolloMod.helpers.utils.StringUtilities:
    java.security.MessageDigest digest -> a
    java.util.regex.Pattern MBID_PATTERN -> b
    java.util.regex.Pattern MD5_PATTERN -> c
    java.lang.String md5(java.lang.String) -> md5
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    boolean isMbid(java.lang.String) -> isMbid
    java.util.Map map(java.lang.String[]) -> map
    java.lang.String cleanUp(java.lang.String) -> cleanUp
    boolean isMD5(java.lang.String) -> isMD5
    boolean convertToBoolean(java.lang.String) -> convertToBoolean
    java.lang.String convertFromBoolean(boolean) -> convertFromBoolean
com.andrew.apolloMod.helpers.utils.ThemeUtils -> com.andrew.apolloMod.helpers.utils.ThemeUtils:
    java.lang.String getThemePackageName(android.content.Context,java.lang.String) -> getThemePackageName
    void setThemePackageName(android.content.Context,java.lang.String) -> setThemePackageName
    void loadThemeResource(android.content.res.Resources,java.lang.String,java.lang.String,android.view.View,int) -> loadThemeResource
    void initThemeChooser(android.content.Context,android.view.View,java.lang.String,int) -> initThemeChooser
    void setTextColor(android.content.Context,android.widget.TextView,java.lang.String) -> setTextColor
    void setBackgroundColor(android.content.Context,android.view.View,java.lang.String) -> setBackgroundColor
    void setImageButton(android.content.Context,android.widget.ImageButton,java.lang.String) -> setImageButton
    void setMarginDrawable(android.content.Context,android.support.v4.view.ViewPager,java.lang.String) -> setMarginDrawable
    void setActionBarBackground(android.content.Context,android.app.ActionBar,java.lang.String) -> setActionBarBackground
    void setActionBarItem(android.content.Context,android.view.MenuItem,java.lang.String) -> setActionBarItem
    void setProgessDrawable(android.content.Context,android.widget.SeekBar,java.lang.String) -> setProgessDrawable
    boolean overflowLight(android.content.Context) -> overflowLight
com.andrew.apolloMod.helpers.utils.VisualizerUtils -> com.andrew.apolloMod.helpers.utils.VisualizerUtils:
    android.media.audiofx.Visualizer mVisualizer -> a
    java.lang.ref.WeakReference mView -> b
    void updateVisualizerView(java.lang.ref.WeakReference) -> updateVisualizerView
    void updateVisualizerFFT(byte[]) -> updateVisualizerFFT
    void updateVisualizer(byte[]) -> updateVisualizer
    void releaseVisualizer() -> releaseVisualizer
    void initVisualizer(android.media.MediaPlayer) -> initVisualizer
com.andrew.apolloMod.helpers.utils.VisualizerUtils$1 -> com.andrew.apolloMod.helpers.utils.b:
    void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onWaveFormDataCapture
    void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onFftDataCapture
com.andrew.apolloMod.helpers.visualizer.AudioData -> com.andrew.apolloMod.helpers.visualizer.AudioData:
    byte[] bytes -> bytes
com.andrew.apolloMod.helpers.visualizer.BarGraphRenderer -> com.andrew.apolloMod.helpers.visualizer.BarGraphRenderer:
    android.content.Context mContext -> a
    int[] mData -> b
    void onRender(android.graphics.Canvas,com.andrew.apolloMod.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.andrew.apolloMod.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
com.andrew.apolloMod.helpers.visualizer.FFTData -> com.andrew.apolloMod.helpers.visualizer.FFTData:
    byte[] bytes -> bytes
com.andrew.apolloMod.helpers.visualizer.Renderer -> com.andrew.apolloMod.helpers.visualizer.Renderer:
    float[] mPoints -> mPoints
    float[] mFFTPoints -> mFFTPoints
    void onRender(android.graphics.Canvas,com.andrew.apolloMod.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.andrew.apolloMod.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
    void render(android.graphics.Canvas,com.andrew.apolloMod.helpers.visualizer.AudioData,android.graphics.Rect) -> render
    void render(android.graphics.Canvas,com.andrew.apolloMod.helpers.visualizer.FFTData,android.graphics.Rect) -> render
com.andrew.apolloMod.helpers.visualizer.SolidBarGraphRenderer -> com.andrew.apolloMod.helpers.visualizer.SolidBarGraphRenderer:
    android.content.Context mContext -> a
    int[] mData -> b
    void onRender(android.graphics.Canvas,com.andrew.apolloMod.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.andrew.apolloMod.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
com.andrew.apolloMod.helpers.visualizer.WaveformRenderer -> com.andrew.apolloMod.helpers.visualizer.WaveformRenderer:
    float amplitude -> a
    android.content.Context mContext -> b
    android.graphics.Paint mBrightPaint -> c
    android.graphics.Paint paintBrightBlur -> d
    android.graphics.Paint mPaint -> e
    android.graphics.Paint paintBlur -> f
    void onRender(android.graphics.Canvas,com.andrew.apolloMod.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.andrew.apolloMod.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
com.andrew.apolloMod.menu.PlaylistDialog -> com.andrew.apolloMod.menu.PlaylistDialog:
    android.app.AlertDialog mPlaylistDialog -> n
    java.lang.String action -> o
    android.widget.EditText mPlaylist -> p
    java.lang.String mDefaultName -> q
    java.lang.String mOriginalName -> r
    long mRenameId -> s
    long[] mList -> t
    android.content.DialogInterface$OnClickListener mRenamePlaylistListener -> u
    android.content.DialogInterface$OnClickListener mCreatePlaylistListener -> v
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onCancel(android.content.DialogInterface) -> onCancel
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onShow(android.content.DialogInterface) -> onShow
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    int idForplaylist(java.lang.String) -> b
    java.lang.String makePlaylistName() -> a
    void setSaveButton() -> b
    void onResume() -> onResume
    android.widget.EditText access$0(com.andrew.apolloMod.menu.PlaylistDialog) -> a
    long access$1(com.andrew.apolloMod.menu.PlaylistDialog) -> b
    int access$2(com.andrew.apolloMod.menu.PlaylistDialog,java.lang.String) -> a
    long[] access$3(com.andrew.apolloMod.menu.PlaylistDialog) -> c
com.andrew.apolloMod.menu.PlaylistDialog$1 -> com.andrew.apolloMod.menu.a:
    com.andrew.apolloMod.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.andrew.apolloMod.menu.PlaylistDialog$2 -> com.andrew.apolloMod.menu.b:
    com.andrew.apolloMod.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.andrew.apolloMod.menu.PlaylistDialog$3 -> com.andrew.apolloMod.menu.c:
    com.andrew.apolloMod.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.andrew.apolloMod.menu.PlaylistPicker -> com.andrew.apolloMod.menu.PlaylistPicker:
    android.app.AlertDialog mPlayListPickerDialog -> d
    java.util.List mAllPlayLists -> a
    java.util.List mPlayListNames -> b
    long[] mList -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
com.andrew.apolloMod.menu.PlaylistPickerDialog -> com.andrew.apolloMod.menu.PlaylistPickerDialog:
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
com.andrew.apolloMod.preferences.SettingsFragment -> com.andrew.apolloMod.preferences.SettingsFragment:
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
com.andrew.apolloMod.preferences.SettingsHolder -> com.andrew.apolloMod.preferences.SettingsHolder:
    android.content.Context mContext -> a
    com.andrew.apolloMod.service.ServiceToken mToken -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void applyTheme(android.view.View) -> applyTheme
    void getThemes(android.view.View) -> getThemes
    void initThemeChooser() -> initThemeChooser
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
com.andrew.apolloMod.preferences.SettingsHolder$1 -> com.andrew.apolloMod.preferences.a:
    com.andrew.apolloMod.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.andrew.apolloMod.preferences.SettingsHolder$2 -> com.andrew.apolloMod.preferences.b:
    com.andrew.apolloMod.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    com.andrew.apolloMod.preferences.SettingsHolder access$0(com.andrew.apolloMod.preferences.SettingsHolder$2) -> a
com.andrew.apolloMod.preferences.SettingsHolder$2$1 -> com.andrew.apolloMod.preferences.c:
    com.andrew.apolloMod.preferences.SettingsHolder$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.andrew.apolloMod.preferences.SettingsHolder$2$2 -> com.andrew.apolloMod.preferences.d:
    com.andrew.apolloMod.preferences.SettingsHolder$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.andrew.apolloMod.preferences.SettingsHolder$3 -> com.andrew.apolloMod.preferences.e:
    com.andrew.apolloMod.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.andrew.apolloMod.preferences.SharedPreferencesCompat -> com.andrew.apolloMod.preferences.SharedPreferencesCompat:
    java.lang.reflect.Method sApplyMethod -> a
    java.lang.reflect.Method findApplyMethod() -> a
    void apply(android.content.SharedPreferences$Editor) -> apply
com.andrew.apolloMod.preferences.ThemePreview -> com.andrew.apolloMod.preferences.ThemePreview:
    java.lang.CharSequence themeName -> a
    java.lang.CharSequence themePackageName -> b
    java.lang.CharSequence themeDescription -> c
    android.graphics.drawable.Drawable themePreview -> d
    void onBindView(android.view.View) -> onBindView
    void setTheme(java.lang.CharSequence) -> setTheme
    java.lang.CharSequence getValue() -> getValue
com.andrew.apolloMod.service.ApolloService -> com.andrew.apolloMod.service.ApolloService:
    int NOW -> NOW
    int NEXT -> NEXT
    int LAST -> LAST
    int PLAYBACKSERVICE_STATUS -> PLAYBACKSERVICE_STATUS
    int SHUFFLE_NONE -> SHUFFLE_NONE
    int SHUFFLE_NORMAL -> SHUFFLE_NORMAL
    int SHUFFLE_AUTO -> SHUFFLE_AUTO
    int REPEAT_NONE -> REPEAT_NONE
    int REPEAT_CURRENT -> REPEAT_CURRENT
    int REPEAT_ALL -> REPEAT_ALL
    java.lang.String APOLLO_PACKAGE_NAME -> APOLLO_PACKAGE_NAME
    java.lang.String MUSIC_PACKAGE_NAME -> MUSIC_PACKAGE_NAME
    java.lang.String PLAYSTATE_CHANGED -> PLAYSTATE_CHANGED
    java.lang.String META_CHANGED -> META_CHANGED
    java.lang.String FAVORITE_CHANGED -> FAVORITE_CHANGED
    java.lang.String QUEUE_CHANGED -> QUEUE_CHANGED
    java.lang.String REPEATMODE_CHANGED -> REPEATMODE_CHANGED
    java.lang.String SHUFFLEMODE_CHANGED -> SHUFFLEMODE_CHANGED
    java.lang.String PROGRESSBAR_CHANGED -> PROGRESSBAR_CHANGED
    java.lang.String REFRESH_PROGRESSBAR -> REFRESH_PROGRESSBAR
    java.lang.String CYCLEREPEAT_ACTION -> CYCLEREPEAT_ACTION
    java.lang.String TOGGLESHUFFLE_ACTION -> TOGGLESHUFFLE_ACTION
    java.lang.String SERVICECMD -> SERVICECMD
    java.lang.String CMDNAME -> CMDNAME
    java.lang.String CMDTOGGLEPAUSE -> CMDTOGGLEPAUSE
    java.lang.String CMDSTOP -> CMDSTOP
    java.lang.String CMDPAUSE -> CMDPAUSE
    java.lang.String CMDPLAY -> CMDPLAY
    java.lang.String CMDPREVIOUS -> CMDPREVIOUS
    java.lang.String CMDNEXT -> CMDNEXT
    java.lang.String CMDNOTIF -> CMDNOTIF
    java.lang.String CMDTOGGLEFAVORITE -> CMDTOGGLEFAVORITE
    java.lang.String CMDCYCLEREPEAT -> CMDCYCLEREPEAT
    java.lang.String CMDTOGGLESHUFFLE -> CMDTOGGLESHUFFLE
    java.lang.String TOGGLEPAUSE_ACTION -> TOGGLEPAUSE_ACTION
    java.lang.String PAUSE_ACTION -> PAUSE_ACTION
    java.lang.String PREVIOUS_ACTION -> PREVIOUS_ACTION
    java.lang.String NEXT_ACTION -> NEXT_ACTION
    android.app.Notification status -> b
    com.andrew.apolloMod.service.ApolloService$MultiPlayer mPlayer -> c
    java.lang.String mFileToPlay -> d
    int mShuffleMode -> e
    int mRepeatMode -> f
    int mMediaMountedCount -> g
    long[] mAutoShuffleList -> h
    long[] mPlayList -> i
    int mPlayListLen -> j
    java.util.Vector mHistory -> k
    android.database.Cursor mCursor -> l
    int mPlayPos -> m
    int mNextPlayPos -> n
    com.andrew.apolloMod.service.ApolloService$Shuffler mRand -> o
    int mOpenFailedCounter -> p
    java.lang.String[] mCursorCols -> a
    android.content.BroadcastReceiver mUnmountReceiver -> q
    android.os.PowerManager$WakeLock mWakeLock -> r
    int mServiceStartId -> s
    boolean mServiceInUse -> t
    boolean mIsSupposedToBePlaying -> u
    boolean mQuietMode -> v
    android.media.AudioManager mAudioManager -> w
    boolean mQueueIsSaveable -> x
    boolean mPausedByTransientLossOfFocus -> y
    android.content.SharedPreferences mPreferences -> z
    int mCardId -> A
    com.andrew.apolloMod.app.widgets.AppWidget11 mAppWidgetProvider1x1 -> B
    com.andrew.apolloMod.app.widgets.AppWidget42 mAppWidgetProvider4x2 -> C
    com.andrew.apolloMod.app.widgets.AppWidget41 mAppWidgetProvider4x1 -> D
    java.lang.String mAlbumBitmapTag -> E
    android.graphics.Bitmap mAlbumBitmap -> F
    com.andrew.apolloMod.helpers.GetBitmapTask mAlbumBitmapTask -> G
    android.media.RemoteControlClient mRemoteControlClient -> H
    android.os.Handler mMediaplayerHandler -> I
    android.content.BroadcastReceiver mIntentReceiver -> J
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener -> K
    char[] hexdigits -> L
    android.os.Handler mDelayedStopHandler -> M
    android.os.IBinder mBinder -> N
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void saveQueue(boolean) -> a
    void reloadQueue() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onRebind(android.content.Intent) -> onRebind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    boolean onUnbind(android.content.Intent) -> onUnbind
    void closeExternalStorageFiles(java.lang.String) -> closeExternalStorageFiles
    void registerExternalStorageListener() -> registerExternalStorageListener
    void notifyChange(java.lang.String) -> notifyChange
    void ensurePlayListCapacity(int) -> a
    void addToPlayList(long[],int) -> a
    void enqueue(long[],int) -> enqueue
    void open(long[],int) -> open
    long[] getQueue() -> getQueue
    android.database.Cursor getCursorForId(long) -> a
    void openCurrentAndNext() -> b
    void setNextTrack() -> c
    boolean open(java.lang.String) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    void play() -> play
    void updateNotification() -> d
    void stop(boolean) -> b
    void stop() -> stop
    void pause() -> pause
    boolean isPlaying() -> isPlaying
    void prev() -> prev
    int getNextPosition(boolean) -> c
    void gotoNext(boolean) -> gotoNext
    void cycleRepeat() -> cycleRepeat
    void toggleShuffle() -> toggleShuffle
    void gotoIdleState() -> e
    void saveBookmarkIfNeeded() -> f
    void doAutoShuffleUpdate() -> g
    boolean makeAutoShuffleList() -> h
    int removeTracks(int,int) -> removeTracks
    int removeTracksInternal(int,int) -> a
    void updateAlbumBitmap() -> i
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> bitmapReady
    int removeTrack(long) -> removeTrack
    void setShuffleMode(int) -> setShuffleMode
    int getShuffleMode() -> getShuffleMode
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    int getQueuePosition() -> getQueuePosition
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    java.lang.String getAlbumName() -> getAlbumName
    long getAlbumId() -> getAlbumId
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    java.lang.String getTrackName() -> getTrackName
    boolean isPodcast() -> j
    long getBookmark() -> k
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    void setAudioSessionId(int) -> setAudioSessionId
    int getAudioSessionId() -> getAudioSessionId
    void toggleFavorite() -> toggleFavorite
    boolean isFavorite() -> isFavorite
    boolean isFavorite(long) -> isFavorite
    void removeFromFavorites() -> removeFromFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    void addToFavorites() -> addToFavorites
    void addToFavorites(long) -> addToFavorites
    android.os.Handler access$0(com.andrew.apolloMod.service.ApolloService) -> a
    com.andrew.apolloMod.service.ApolloService$MultiPlayer access$1(com.andrew.apolloMod.service.ApolloService) -> b
    boolean access$2(com.andrew.apolloMod.service.ApolloService) -> c
    void access$3(com.andrew.apolloMod.service.ApolloService) -> d
    int access$4(com.andrew.apolloMod.service.ApolloService) -> e
    long[] access$5(com.andrew.apolloMod.service.ApolloService) -> f
    void access$6(com.andrew.apolloMod.service.ApolloService,int) -> a
    android.database.Cursor access$7(com.andrew.apolloMod.service.ApolloService) -> g
    void access$8(com.andrew.apolloMod.service.ApolloService,android.database.Cursor) -> a
    int access$9(com.andrew.apolloMod.service.ApolloService) -> h
    android.database.Cursor access$10(com.andrew.apolloMod.service.ApolloService,long) -> a
    void access$11(com.andrew.apolloMod.service.ApolloService) -> i
    void access$12(com.andrew.apolloMod.service.ApolloService) -> j
    void access$13(com.andrew.apolloMod.service.ApolloService) -> k
    int access$14(com.andrew.apolloMod.service.ApolloService) -> l
    android.os.PowerManager$WakeLock access$15(com.andrew.apolloMod.service.ApolloService) -> m
    void access$16(com.andrew.apolloMod.service.ApolloService,boolean) -> a
    boolean access$17(com.andrew.apolloMod.service.ApolloService) -> n
    com.andrew.apolloMod.app.widgets.AppWidget42 access$18(com.andrew.apolloMod.service.ApolloService) -> o
    com.andrew.apolloMod.app.widgets.AppWidget41 access$19(com.andrew.apolloMod.service.ApolloService) -> p
    com.andrew.apolloMod.app.widgets.AppWidget11 access$20(com.andrew.apolloMod.service.ApolloService) -> q
    boolean access$21(com.andrew.apolloMod.service.ApolloService) -> r
    void access$22$afc1d94(com.andrew.apolloMod.service.ApolloService) -> s
    int access$23(com.andrew.apolloMod.service.ApolloService) -> t
    void access$24(com.andrew.apolloMod.service.ApolloService,boolean) -> b
    int access$25(com.andrew.apolloMod.service.ApolloService) -> u
    void access$26(com.andrew.apolloMod.service.ApolloService,int) -> b
    void access$27(com.andrew.apolloMod.service.ApolloService,int) -> c
    void access$28(com.andrew.apolloMod.service.ApolloService) -> v
com.andrew.apolloMod.service.ApolloService$1 -> com.andrew.apolloMod.service.a:
    float mCurrentVolume -> a
    com.andrew.apolloMod.service.ApolloService this$0 -> b
    void handleMessage(android.os.Message) -> handleMessage
com.andrew.apolloMod.service.ApolloService$2 -> com.andrew.apolloMod.service.b:
    com.andrew.apolloMod.service.ApolloService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.andrew.apolloMod.service.ApolloService$3 -> com.andrew.apolloMod.service.c:
    com.andrew.apolloMod.service.ApolloService this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
com.andrew.apolloMod.service.ApolloService$4 -> com.andrew.apolloMod.service.d:
    com.andrew.apolloMod.service.ApolloService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.andrew.apolloMod.service.ApolloService$5 -> com.andrew.apolloMod.service.e:
    com.andrew.apolloMod.service.ApolloService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.andrew.apolloMod.service.ApolloService$MultiPlayer -> com.andrew.apolloMod.service.f:
    android.media.MediaPlayer mCurrentMediaPlayer -> d
    android.media.MediaPlayer mNextMediaPlayer -> e
    android.os.Handler mHandler -> f
    boolean mIsInitialized -> g
    android.media.MediaPlayer$OnCompletionListener listener -> a
    android.media.MediaPlayer$OnErrorListener errorListener -> b
    com.andrew.apolloMod.service.ApolloService this$0 -> c
    void setDataSource(java.lang.String) -> setDataSource
    boolean setDataSourceImpl(android.media.MediaPlayer,java.lang.String) -> a
    void setNextDataSource(java.lang.String) -> setNextDataSource
    boolean isInitialized() -> isInitialized
    void start() -> start
    void stop() -> stop
    void release() -> release
    void pause() -> pause
    void setHandler(android.os.Handler) -> setHandler
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    void setVolume(float) -> setVolume
    void setAudioSessionId(int) -> setAudioSessionId
    int getAudioSessionId() -> getAudioSessionId
    android.media.MediaPlayer access$0(com.andrew.apolloMod.service.ApolloService$MultiPlayer) -> a
    android.media.MediaPlayer access$1(com.andrew.apolloMod.service.ApolloService$MultiPlayer) -> b
    void access$2(com.andrew.apolloMod.service.ApolloService$MultiPlayer,android.media.MediaPlayer) -> a
    void access$3$65466b95(com.andrew.apolloMod.service.ApolloService$MultiPlayer) -> c
    android.os.Handler access$4(com.andrew.apolloMod.service.ApolloService$MultiPlayer) -> d
    void access$5$e613e22(com.andrew.apolloMod.service.ApolloService$MultiPlayer) -> e
com.andrew.apolloMod.service.ApolloService$MultiPlayer$1 -> com.andrew.apolloMod.service.g:
    com.andrew.apolloMod.service.ApolloService$MultiPlayer this$1 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.andrew.apolloMod.service.ApolloService$MultiPlayer$2 -> com.andrew.apolloMod.service.h:
    com.andrew.apolloMod.service.ApolloService$MultiPlayer this$1 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.andrew.apolloMod.service.ApolloService$ServiceStub -> com.andrew.apolloMod.service.i:
    java.lang.ref.WeakReference mService -> a
    void openFile(java.lang.String) -> openFile
    void open(long[],int) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    int getQueuePosition() -> getQueuePosition
    void setQueuePosition(int) -> setQueuePosition
    boolean isPlaying() -> isPlaying
    void stop() -> stop
    void pause() -> pause
    void play() -> play
    void prev() -> prev
    void next() -> next
    java.lang.String getTrackName() -> getTrackName
    java.lang.String getAlbumName() -> getAlbumName
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    long getAlbumId() -> getAlbumId
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    void enqueue(long[],int) -> enqueue
    long[] getQueue() -> getQueue
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    long position() -> position
    long duration() -> duration
    long seek(long) -> seek
    void setShuffleMode(int) -> setShuffleMode
    int getShuffleMode() -> getShuffleMode
    int removeTracks(int,int) -> removeTracks
    int removeTrack(long) -> removeTrack
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    int getAudioSessionId() -> getAudioSessionId
    void addToFavorites(long) -> addToFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    boolean isFavorite(long) -> isFavorite
    void toggleFavorite() -> toggleFavorite
    void notifyChange(java.lang.String) -> notifyChange
com.andrew.apolloMod.service.ApolloService$Shuffler -> com.andrew.apolloMod.service.j:
    int mPrevious -> a
    java.util.Random mRandom -> b
    int nextInt(int) -> nextInt
com.andrew.apolloMod.service.MediaButtonIntentReceiver -> com.andrew.apolloMod.service.MediaButtonIntentReceiver:
    long mLastClickTime -> a
    boolean mDown -> b
    boolean mLaunched -> c
    android.os.Handler mHandler -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean access$0() -> a
    void access$1$1385ff() -> b
com.andrew.apolloMod.service.MediaButtonIntentReceiver$1 -> com.andrew.apolloMod.service.k:
    void handleMessage(android.os.Message) -> handleMessage
com.andrew.apolloMod.service.ServiceBinder -> com.andrew.apolloMod.service.ServiceBinder:
    android.content.ServiceConnection mCallback -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.andrew.apolloMod.service.ServiceToken -> com.andrew.apolloMod.service.ServiceToken:
    android.content.ContextWrapper mWrappedContext -> mWrappedContext
com.andrew.apolloMod.ui.adapters.AlbumAdapter -> com.andrew.apolloMod.ui.adapters.AlbumAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> a
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> b
    java.lang.ref.WeakReference holderReference -> c
    android.content.Context mContext -> d
    com.andrew.apolloMod.cache.ImageProvider mImageProvider -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.andrew.apolloMod.ui.adapters.ArtistAdapter -> com.andrew.apolloMod.ui.adapters.ArtistAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> a
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> b
    java.lang.ref.WeakReference holderReference -> c
    android.content.Context mContext -> d
    com.andrew.apolloMod.cache.ImageProvider mImageProvider -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.andrew.apolloMod.ui.adapters.ArtistAlbumAdapter -> com.andrew.apolloMod.ui.adapters.ArtistAlbumAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> a
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> b
    java.lang.ref.WeakReference holderReference -> c
    android.content.Context mContext -> d
    com.andrew.apolloMod.cache.ImageProvider mImageProvider -> e
    android.view.View$OnClickListener showContextMenu -> f
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.andrew.apolloMod.ui.adapters.ArtistAlbumAdapter$1 -> com.andrew.apolloMod.ui.adapters.a:
    com.andrew.apolloMod.ui.adapters.ArtistAlbumAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.adapters.GenreAdapter -> com.andrew.apolloMod.ui.adapters.GenreAdapter:
    java.lang.ref.WeakReference holderReference -> a
    int left -> b
    android.content.Context mContext -> c
    android.view.View$OnClickListener showContextMenu -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.andrew.apolloMod.ui.adapters.GenreAdapter$1 -> com.andrew.apolloMod.ui.adapters.b:
    com.andrew.apolloMod.ui.adapters.GenreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.adapters.PagerAdapter -> com.andrew.apolloMod.ui.adapters.PagerAdapter:
    java.util.ArrayList mFragments -> a
    void addFragment(android.app.Fragment) -> addFragment
    int getCount() -> getCount
    android.app.Fragment getItem(int) -> getItem
    void refresh() -> refresh
com.andrew.apolloMod.ui.adapters.PlaylistAdapter -> com.andrew.apolloMod.ui.adapters.PlaylistAdapter:
    java.lang.ref.WeakReference holderReference -> a
    android.content.Context mContext -> b
    android.view.View$OnClickListener showContextMenu -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.andrew.apolloMod.ui.adapters.PlaylistAdapter$1 -> com.andrew.apolloMod.ui.adapters.c:
    com.andrew.apolloMod.ui.adapters.PlaylistAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.adapters.QuickQueueAdapter -> com.andrew.apolloMod.ui.adapters.QuickQueueAdapter:
    java.lang.ref.WeakReference holderReference -> a
    android.content.Context mContext -> b
    com.andrew.apolloMod.cache.ImageProvider mImageProvider -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.andrew.apolloMod.ui.adapters.RecentlyAddedAdapter -> com.andrew.apolloMod.ui.adapters.RecentlyAddedAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> a
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> b
    java.lang.ref.WeakReference holderReference -> c
    android.content.Context mContext -> d
    com.andrew.apolloMod.cache.ImageProvider mImageProvider -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.andrew.apolloMod.ui.adapters.ScrollingTabsAdapter -> com.andrew.apolloMod.ui.adapters.ScrollingTabsAdapter:
    android.app.Activity activity -> a
    android.view.View getView(int) -> getView
com.andrew.apolloMod.ui.adapters.TabAdapter -> com.andrew.apolloMod.ui.adapters.TabAdapter:
    android.view.View getView(int) -> getView
com.andrew.apolloMod.ui.adapters.TrackAdapter -> com.andrew.apolloMod.ui.adapters.TrackAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> a
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> b
    java.lang.ref.WeakReference holderReference -> c
    android.view.View$OnClickListener showContextMenu -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.andrew.apolloMod.ui.adapters.TrackAdapter$1 -> com.andrew.apolloMod.ui.adapters.d:
    com.andrew.apolloMod.ui.adapters.TrackAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment -> com.andrew.apolloMod.ui.fragments.AudioPlayerFragment:
    android.widget.TextView mTrackName -> b
    android.widget.TextView mAlbumArtistName -> c
    android.widget.TextView mTotalTime -> d
    android.widget.TextView mCurrentTime -> e
    android.widget.ImageView mAlbumArt -> f
    android.widget.ImageButton mRepeat -> g
    android.widget.ImageButton mPlay -> h
    android.widget.ImageButton mShuffle -> i
    com.andrew.apolloMod.ui.widgets.RepeatingImageButton mPrev -> j
    com.andrew.apolloMod.ui.widgets.RepeatingImageButton mNext -> k
    android.widget.SeekBar mProgress -> l
    long mDuration -> m
    long mLastSeekEventTime -> n
    long mPosOverride -> o
    long mStartSeekPos -> p
    boolean mFromTouch -> q
    boolean paused -> r
    android.view.View root -> a
    android.widget.Toast mToast -> s
    android.content.BroadcastReceiver mStatusListener -> t
    com.andrew.apolloMod.ui.widgets.RepeatingImageButton$RepeatListener mRewListener -> u
    com.andrew.apolloMod.ui.widgets.RepeatingImageButton$RepeatListener mFfwdListener -> v
    android.os.Handler mHandler -> w
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> x
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void setRepeatButtonImage() -> a
    void setShuffleButtonImage() -> b
    void setPauseButtonImage() -> c
    void queueNextRefresh(long) -> a
    long refreshNow() -> d
    android.os.Handler access$0(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> a
    void access$1(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> b
    void access$2(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> c
    void access$3(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> d
    void access$4(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment,int,long) -> a
    void access$5(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment,int,long) -> b
    long access$6(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> e
    void access$7(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment,long) -> a
    void access$8(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> f
    void access$9(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment,long) -> b
    void access$10(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment,boolean) -> a
    long access$11(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> g
    long access$12(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> h
    void access$13(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment,long) -> c
    long access$14(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> i
    boolean access$15(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> j
    void access$16(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> k
    void access$17(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> l
    void access$18(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> m
    void access$19(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> n
    void access$20(com.andrew.apolloMod.ui.fragments.AudioPlayerFragment) -> o
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$1 -> com.andrew.apolloMod.ui.fragments.a:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$10 -> com.andrew.apolloMod.ui.fragments.b:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$11 -> com.andrew.apolloMod.ui.fragments.c:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$12 -> com.andrew.apolloMod.ui.fragments.d:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$2 -> com.andrew.apolloMod.ui.fragments.e:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onRepeat(android.view.View,long,int) -> onRepeat
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$3 -> com.andrew.apolloMod.ui.fragments.f:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onRepeat(android.view.View,long,int) -> onRepeat
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$4 -> com.andrew.apolloMod.ui.fragments.g:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$5 -> com.andrew.apolloMod.ui.fragments.h:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$6 -> com.andrew.apolloMod.ui.fragments.i:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$7 -> com.andrew.apolloMod.ui.fragments.j:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$8 -> com.andrew.apolloMod.ui.fragments.k:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.AudioPlayerFragment$9 -> com.andrew.apolloMod.ui.fragments.l:
    com.andrew.apolloMod.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.BottomActionBarFragment -> com.andrew.apolloMod.ui.fragments.BottomActionBarFragment:
    android.widget.ImageButton mPrev -> a
    android.widget.ImageButton mPlay -> b
    android.widget.ImageButton mNext -> c
    com.andrew.apolloMod.ui.widgets.BottomActionBar mBottomActionBar -> d
    android.content.BroadcastReceiver mMediaStatusReceiver -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onStop() -> onStop
    void setPauseButtonImage() -> a
    com.andrew.apolloMod.ui.widgets.BottomActionBar access$0(com.andrew.apolloMod.ui.fragments.BottomActionBarFragment) -> a
    void access$1(com.andrew.apolloMod.ui.fragments.BottomActionBarFragment) -> b
    void access$2(com.andrew.apolloMod.ui.fragments.BottomActionBarFragment) -> c
com.andrew.apolloMod.ui.fragments.BottomActionBarFragment$1 -> com.andrew.apolloMod.ui.fragments.m:
    com.andrew.apolloMod.ui.fragments.BottomActionBarFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.andrew.apolloMod.ui.fragments.BottomActionBarFragment$2 -> com.andrew.apolloMod.ui.fragments.n:
    com.andrew.apolloMod.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.BottomActionBarFragment$3 -> com.andrew.apolloMod.ui.fragments.o:
    com.andrew.apolloMod.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.BottomActionBarFragment$4 -> com.andrew.apolloMod.ui.fragments.p:
    com.andrew.apolloMod.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.fragments.grid.AlbumsFragment -> com.andrew.apolloMod.ui.fragments.grid.AlbumsFragment:
    com.andrew.apolloMod.ui.adapters.AlbumAdapter mAlbumAdapter -> a
    android.widget.GridView mGridView -> b
    android.database.Cursor mCursor -> c
    int PLAY_SELECTION -> d
    int ADD_TO_PLAYLIST -> e
    int SEARCH -> f
    java.lang.String mCurrentAlbumId -> g
    int mAlbumIdIndex -> mAlbumIdIndex
    int mAlbumNameIndex -> mAlbumNameIndex
    int mArtistNameIndex -> mArtistNameIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> h
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    android.view.View setHeaderLayout() -> setHeaderLayout
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.GridView access$1(com.andrew.apolloMod.ui.fragments.grid.AlbumsFragment) -> a
    com.andrew.apolloMod.ui.adapters.AlbumAdapter access$2(com.andrew.apolloMod.ui.fragments.grid.AlbumsFragment) -> b
com.andrew.apolloMod.ui.fragments.grid.AlbumsFragment$1 -> com.andrew.apolloMod.ui.fragments.grid.a:
    com.andrew.apolloMod.ui.fragments.grid.AlbumsFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.andrew.apolloMod.ui.fragments.grid.ArtistsFragment -> com.andrew.apolloMod.ui.fragments.grid.ArtistsFragment:
    com.andrew.apolloMod.ui.adapters.ArtistAdapter mArtistAdapter -> a
    android.widget.GridView mGridView -> b
    android.database.Cursor mCursor -> c
    int PLAY_SELECTION -> d
    int ADD_TO_PLAYLIST -> e
    int SEARCH -> f
    java.lang.String mCurrentArtistId -> g
    java.lang.String mCurrentAlbumId -> h
    int mArtistIdIndex -> mArtistIdIndex
    int mArtistNameIndex -> mArtistNameIndex
    int mArtistNumAlbumsIndex -> mArtistNumAlbumsIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> i
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStart() -> onStart
    void onStop() -> onStop
    android.view.View setHeaderLayout() -> setHeaderLayout
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.GridView access$1(com.andrew.apolloMod.ui.fragments.grid.ArtistsFragment) -> a
    com.andrew.apolloMod.ui.adapters.ArtistAdapter access$2(com.andrew.apolloMod.ui.fragments.grid.ArtistsFragment) -> b
com.andrew.apolloMod.ui.fragments.grid.ArtistsFragment$1 -> com.andrew.apolloMod.ui.fragments.grid.b:
    com.andrew.apolloMod.ui.fragments.grid.ArtistsFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.andrew.apolloMod.ui.fragments.grid.QuickQueueFragment -> com.andrew.apolloMod.ui.fragments.grid.QuickQueueFragment:
    com.andrew.apolloMod.ui.adapters.QuickQueueAdapter mQuickQueueAdapter -> a
    android.widget.GridView mGridView -> b
    android.database.Cursor mCursor -> c
    int mSelectedPosition -> d
    int PLAY_SELECTION -> e
    int REMOVE -> f
    int mTitleIndex -> mTitleIndex
    int mAlbumIndex -> mAlbumIndex
    int mArtistIndex -> mArtistIndex
    int mMediaIdIndex -> mMediaIdIndex
    int mAlbumIdIndex -> mAlbumIdIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> g
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.GridView access$1(com.andrew.apolloMod.ui.fragments.grid.QuickQueueFragment) -> a
    com.andrew.apolloMod.ui.adapters.QuickQueueAdapter access$2(com.andrew.apolloMod.ui.fragments.grid.QuickQueueFragment) -> b
com.andrew.apolloMod.ui.fragments.grid.QuickQueueFragment$1 -> com.andrew.apolloMod.ui.fragments.grid.c:
    com.andrew.apolloMod.ui.fragments.grid.QuickQueueFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.andrew.apolloMod.ui.fragments.grid.QuickQueueFragment access$0(com.andrew.apolloMod.ui.fragments.grid.QuickQueueFragment$1) -> a
com.andrew.apolloMod.ui.fragments.grid.QuickQueueFragment$1$1 -> com.andrew.apolloMod.ui.fragments.grid.d:
    com.andrew.apolloMod.ui.fragments.grid.QuickQueueFragment$1 this$1 -> a
    void run() -> run
com.andrew.apolloMod.ui.fragments.list.ArtistAlbumsFragment -> com.andrew.apolloMod.ui.fragments.list.ArtistAlbumsFragment:
    com.andrew.apolloMod.ui.adapters.ArtistAlbumAdapter mArtistAlbumAdapter -> a
    int mAlbumIdIndex -> mAlbumIdIndex
    int mAlbumNameIndex -> mAlbumNameIndex
    int mSongCountIndex -> mSongCountIndex
    int mArtistNameIndex -> mArtistNameIndex
    android.widget.ListView mListView -> b
    int PLAY_SELECTION -> c
    int ADD_TO_PLAYLIST -> d
    int SEARCH -> e
    java.lang.String mCurrentAlbumId -> f
    android.database.Cursor mCursor -> g
    android.content.BroadcastReceiver mMediaStatusReceiver -> h
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    android.view.View setHeaderLayout() -> setHeaderLayout
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.ListView access$1(com.andrew.apolloMod.ui.fragments.list.ArtistAlbumsFragment) -> a
    com.andrew.apolloMod.ui.adapters.ArtistAlbumAdapter access$2(com.andrew.apolloMod.ui.fragments.list.ArtistAlbumsFragment) -> b
com.andrew.apolloMod.ui.fragments.list.ArtistAlbumsFragment$1 -> com.andrew.apolloMod.ui.fragments.list.a:
    com.andrew.apolloMod.ui.fragments.list.ArtistAlbumsFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.andrew.apolloMod.ui.fragments.list.GenresFragment -> com.andrew.apolloMod.ui.fragments.list.GenresFragment:
    com.andrew.apolloMod.ui.adapters.GenreAdapter mGenreAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    java.lang.String mCurrentGenreId -> d
    int PLAY_SELECTION -> e
    int mGenreIdIndex -> mGenreIdIndex
    int mGenreNameIndex -> mGenreNameIndex
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
com.andrew.apolloMod.ui.fragments.list.PlaylistsFragment -> com.andrew.apolloMod.ui.fragments.list.PlaylistsFragment:
    com.andrew.apolloMod.ui.adapters.PlaylistAdapter mPlaylistAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    java.lang.String mCurrentPlaylistId -> d
    int mPlaylistNameIndex -> mPlaylistNameIndex
    int mPlaylistIdIndex -> mPlaylistIdIndex
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
com.andrew.apolloMod.ui.fragments.list.RecentlyAddedFragment -> com.andrew.apolloMod.ui.fragments.list.RecentlyAddedFragment:
    com.andrew.apolloMod.ui.adapters.RecentlyAddedAdapter mRecentlyAddedAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    int mTitleIndex -> mTitleIndex
    int mAlbumIndex -> mAlbumIndex
    int mAlbumIdIndex -> mAlbumIdIndex
    int mArtistIndex -> mArtistIndex
    int mMediaIdIndex -> mMediaIdIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> d
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.ListView access$1(com.andrew.apolloMod.ui.fragments.list.RecentlyAddedFragment) -> a
    com.andrew.apolloMod.ui.adapters.RecentlyAddedAdapter access$2(com.andrew.apolloMod.ui.fragments.list.RecentlyAddedFragment) -> b
com.andrew.apolloMod.ui.fragments.list.RecentlyAddedFragment$1 -> com.andrew.apolloMod.ui.fragments.list.b:
    com.andrew.apolloMod.ui.fragments.list.RecentlyAddedFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.andrew.apolloMod.ui.fragments.list.TracksFragment -> com.andrew.apolloMod.ui.fragments.list.TracksFragment:
    com.andrew.apolloMod.ui.adapters.TrackAdapter mTrackAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    long mPlaylistId -> d
    int mSelectedPosition -> e
    long mSelectedId -> f
    int PLAY_SELECTION -> g
    int USE_AS_RINGTONE -> h
    int ADD_TO_PLAYLIST -> i
    int SEARCH -> j
    int REMOVE -> k
    boolean mEditMode -> l
    int mTitleIndex -> mTitleIndex
    int mAlbumIndex -> mAlbumIndex
    int mArtistIndex -> mArtistIndex
    int mMediaIdIndex -> mMediaIdIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> m
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void refresh() -> refresh
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void reloadQueueCursor() -> a
    void isEditMode() -> isEditMode
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.ListView access$1(com.andrew.apolloMod.ui.fragments.list.TracksFragment) -> a
    com.andrew.apolloMod.ui.adapters.TrackAdapter access$2(com.andrew.apolloMod.ui.fragments.list.TracksFragment) -> b
    long access$3(com.andrew.apolloMod.ui.fragments.list.TracksFragment) -> c
com.andrew.apolloMod.ui.fragments.list.TracksFragment$1 -> com.andrew.apolloMod.ui.fragments.list.c:
    com.andrew.apolloMod.ui.fragments.list.TracksFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.andrew.apolloMod.ui.fragments.list.TracksFragment access$0(com.andrew.apolloMod.ui.fragments.list.TracksFragment$1) -> a
com.andrew.apolloMod.ui.fragments.list.TracksFragment$1$1 -> com.andrew.apolloMod.ui.fragments.list.d:
    com.andrew.apolloMod.ui.fragments.list.TracksFragment$1 this$1 -> a
    void run() -> run
com.andrew.apolloMod.ui.widgets.BottomActionBar -> com.andrew.apolloMod.ui.widgets.BottomActionBar:
    void updateBottomActionBar(android.app.Activity) -> updateBottomActionBar
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
com.andrew.apolloMod.ui.widgets.RepeatingImageButton -> com.andrew.apolloMod.ui.widgets.RepeatingImageButton:
    long mStartTime -> a
    int mRepeatCount -> b
    com.andrew.apolloMod.ui.widgets.RepeatingImageButton$RepeatListener mListener -> c
    long mInterval -> d
    java.lang.Runnable mRepeater -> e
    void setRepeatListener(com.andrew.apolloMod.ui.widgets.RepeatingImageButton$RepeatListener,long) -> setRepeatListener
    boolean performLongClick() -> performLongClick
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void doRepeat(boolean) -> a
    void access$0$38b438a1(com.andrew.apolloMod.ui.widgets.RepeatingImageButton) -> a
    long access$1(com.andrew.apolloMod.ui.widgets.RepeatingImageButton) -> b
com.andrew.apolloMod.ui.widgets.RepeatingImageButton$1 -> com.andrew.apolloMod.ui.widgets.a:
    com.andrew.apolloMod.ui.widgets.RepeatingImageButton this$0 -> a
    void run() -> run
com.andrew.apolloMod.ui.widgets.RepeatingImageButton$RepeatListener -> com.andrew.apolloMod.ui.widgets.RepeatingImageButton$RepeatListener:
    void onRepeat(android.view.View,long,int) -> onRepeat
com.andrew.apolloMod.ui.widgets.ScrollableTabView -> com.andrew.apolloMod.ui.widgets.ScrollableTabView:
    android.support.v4.view.ViewPager mPager -> a
    com.andrew.apolloMod.ui.adapters.TabAdapter mAdapter -> b
    android.widget.LinearLayout mContainer -> c
    java.util.ArrayList mTabs -> d
    void setAdapter(com.andrew.apolloMod.ui.adapters.TabAdapter) -> setAdapter
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void initTabs() -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onLayout(boolean,int,int,int,int) -> onLayout
    void selectTab(int) -> a
    android.support.v4.view.ViewPager access$0(com.andrew.apolloMod.ui.widgets.ScrollableTabView) -> a
    void access$1(com.andrew.apolloMod.ui.widgets.ScrollableTabView,int) -> a
com.andrew.apolloMod.ui.widgets.ScrollableTabView$1 -> com.andrew.apolloMod.ui.widgets.b:
    com.andrew.apolloMod.ui.widgets.ScrollableTabView this$0 -> a
    int val$index -> b
    void onClick(android.view.View) -> onClick
com.andrew.apolloMod.ui.widgets.VisualizerView -> com.andrew.apolloMod.ui.widgets.VisualizerView:
    byte[] mBytes -> d
    byte[] mFFTBytes -> e
    android.graphics.Rect mRect -> f
    com.andrew.apolloMod.helpers.visualizer.Renderer mRenderer -> g
    java.lang.String type -> a
    android.graphics.Bitmap mCanvasBitmap -> b
    android.graphics.Canvas mCanvas -> c
    void updateVisualizer(byte[]) -> updateVisualizer
    void updateVisualizerFFT(byte[]) -> updateVisualizerFFT
    void onDraw(android.graphics.Canvas) -> onDraw
com.andrew.apolloMod.views.ViewHolderGrid -> com.andrew.apolloMod.views.ViewHolderGrid:
    android.widget.ImageView mViewHolderImage -> mViewHolderImage
    android.widget.ImageView mPeakOne -> mPeakOne
    android.widget.ImageView mPeakTwo -> mPeakTwo
    android.widget.TextView mViewHolderLineOne -> mViewHolderLineOne
    android.widget.TextView mViewHolderLineTwo -> mViewHolderLineTwo
    android.widget.LinearLayout mInfoHolder -> mInfoHolder
com.andrew.apolloMod.views.ViewHolderList -> com.andrew.apolloMod.views.ViewHolderList:
    android.widget.ImageView mViewHolderImage -> mViewHolderImage
    android.widget.ImageView mPeakOne -> mPeakOne
    android.widget.ImageView mPeakTwo -> mPeakTwo
    android.widget.ImageView mQuickContextDivider -> mQuickContextDivider
    android.widget.ImageView mQuickContextTip -> mQuickContextTip
    android.widget.TextView mViewHolderLineOne -> mViewHolderLineOne
    android.widget.TextView mViewHolderLineTwo -> mViewHolderLineTwo
    android.widget.FrameLayout mQuickContext -> mQuickContext
com.andrew.apolloMod.views.ViewHolderQueue -> com.andrew.apolloMod.views.ViewHolderQueue:
    android.widget.ImageView mArtistImage -> mArtistImage
    android.widget.ImageView mPeakOne -> mPeakOne
    android.widget.ImageView mPeakTwo -> mPeakTwo
    android.widget.ImageView mAlbumArt -> mAlbumArt
    android.widget.TextView mTrackName -> mTrackName
com.androidquery.AQuery -> com.androidquery.AQuery:
com.androidquery.AbstractAQuery -> com.androidquery.AbstractAQuery:
    android.view.View root -> a
    android.app.Activity act -> b
    android.content.Context context -> c
    android.view.View view -> view
    java.lang.Object progress -> progress
    com.androidquery.auth.AccountHandle ah -> ah
    com.androidquery.callback.Transformer trans -> d
    java.lang.reflect.Constructor constructor -> e
    java.lang.Class[] ON_CLICK_SIG -> f
    java.lang.Class[] ON_ITEM_SIG -> g
    java.lang.Class[] ON_SCROLLED_STATE_SIG -> h
    java.lang.Class[] TEXT_CHANGE_SIG -> i
    java.lang.Class[] PENDING_TRANSITION_SIG -> j
    java.lang.Class[] OVER_SCROLL_SIG -> k
    java.lang.Class[] LAYER_TYPE_SIG -> l
    java.util.WeakHashMap dialogs -> m
    android.view.LayoutInflater inflater -> n
    com.androidquery.AbstractAQuery create(android.view.View) -> create
    java.lang.reflect.Constructor getConstructor() -> a
    android.view.View findView(int) -> a
    com.androidquery.AbstractAQuery find(int) -> find
    com.androidquery.AbstractAQuery parent(int) -> parent
    com.androidquery.AbstractAQuery recycle(android.view.View) -> recycle
    android.view.View getView() -> getView
    com.androidquery.AbstractAQuery id(int) -> id
    com.androidquery.AbstractAQuery id(android.view.View) -> id
    com.androidquery.AbstractAQuery id(int[]) -> id
    com.androidquery.AbstractAQuery progress(int) -> progress
    com.androidquery.AbstractAQuery progress(android.view.View) -> progress
    com.androidquery.AbstractAQuery progress(android.app.Dialog) -> progress
    com.androidquery.AbstractAQuery auth(com.androidquery.auth.AccountHandle) -> auth
    com.androidquery.AbstractAQuery transformer(com.androidquery.callback.Transformer) -> transformer
    com.androidquery.AbstractAQuery rating(float) -> rating
    com.androidquery.AbstractAQuery text(int) -> text
    com.androidquery.AbstractAQuery text(int,java.lang.Object[]) -> text
    com.androidquery.AbstractAQuery text(java.lang.CharSequence) -> text
    com.androidquery.AbstractAQuery text(java.lang.CharSequence,boolean) -> text
    com.androidquery.AbstractAQuery text(android.text.Spanned) -> text
    com.androidquery.AbstractAQuery textColor(int) -> textColor
    com.androidquery.AbstractAQuery adapter(android.widget.Adapter) -> adapter
    com.androidquery.AbstractAQuery adapter(android.widget.ExpandableListAdapter) -> adapter
    com.androidquery.AbstractAQuery image(int) -> image
    com.androidquery.AbstractAQuery image(android.graphics.drawable.Drawable) -> image
    com.androidquery.AbstractAQuery image(android.graphics.Bitmap) -> image
    com.androidquery.AbstractAQuery image(java.lang.String) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float) -> image
    com.androidquery.AbstractAQuery image(com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(java.io.File,int) -> image
    com.androidquery.AbstractAQuery image(java.io.File,boolean,int,com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(android.graphics.Bitmap,float) -> image
    com.androidquery.AbstractAQuery tag(java.lang.Object) -> tag
    com.androidquery.AbstractAQuery tag(int,java.lang.Object) -> tag
    com.androidquery.AbstractAQuery transparent(boolean) -> transparent
    com.androidquery.AbstractAQuery enabled(boolean) -> enabled
    com.androidquery.AbstractAQuery checked(boolean) -> checked
    boolean isChecked() -> isChecked
    com.androidquery.AbstractAQuery clickable(boolean) -> clickable
    com.androidquery.AbstractAQuery gone() -> gone
    com.androidquery.AbstractAQuery invisible() -> invisible
    com.androidquery.AbstractAQuery visible() -> visible
    com.androidquery.AbstractAQuery background(int) -> background
    com.androidquery.AbstractAQuery backgroundColor(int) -> backgroundColor
    com.androidquery.AbstractAQuery dataChanged() -> dataChanged
    boolean isExist() -> isExist
    java.lang.Object getTag() -> getTag
    java.lang.Object getTag(int) -> getTag
    android.widget.ImageView getImageView() -> getImageView
    android.widget.Gallery getGallery() -> getGallery
    android.widget.TextView getTextView() -> getTextView
    android.widget.EditText getEditText() -> getEditText
    android.widget.ProgressBar getProgressBar() -> getProgressBar
    android.widget.Button getButton() -> getButton
    android.widget.CheckBox getCheckBox() -> getCheckBox
    android.widget.ListView getListView() -> getListView
    android.widget.ExpandableListView getExpandableListView() -> getExpandableListView
    android.widget.GridView getGridView() -> getGridView
    android.widget.RatingBar getRatingBar() -> getRatingBar
    android.webkit.WebView getWebView() -> getWebView
    android.widget.Spinner getSpinner() -> getSpinner
    android.text.Editable getEditable() -> getEditable
    java.lang.CharSequence getText() -> getText
    java.lang.Object getSelectedItem() -> getSelectedItem
    com.androidquery.AbstractAQuery clicked(java.lang.Object,java.lang.String) -> clicked
    com.androidquery.AbstractAQuery clicked(android.view.View$OnClickListener) -> clicked
    com.androidquery.AbstractAQuery longClicked(java.lang.Object,java.lang.String) -> longClicked
    com.androidquery.AbstractAQuery longClicked(android.view.View$OnLongClickListener) -> longClicked
    com.androidquery.AbstractAQuery itemClicked(java.lang.Object,java.lang.String) -> itemClicked
    com.androidquery.AbstractAQuery itemClicked(android.widget.AdapterView$OnItemClickListener) -> itemClicked
    com.androidquery.AbstractAQuery itemSelected(java.lang.Object,java.lang.String) -> itemSelected
    com.androidquery.AbstractAQuery itemSelected(android.widget.AdapterView$OnItemSelectedListener) -> itemSelected
    com.androidquery.AbstractAQuery setSelection(int) -> setSelection
    com.androidquery.AbstractAQuery scrolledBottom(java.lang.Object,java.lang.String) -> scrolledBottom
    com.androidquery.util.Common setScrollListener() -> b
    com.androidquery.AbstractAQuery scrolled(android.widget.AbsListView$OnScrollListener) -> scrolled
    com.androidquery.AbstractAQuery textChanged(java.lang.Object,java.lang.String) -> textChanged
    com.androidquery.AbstractAQuery overridePendingTransition5(int,int) -> overridePendingTransition5
    com.androidquery.AbstractAQuery setOverScrollMode9(int) -> setOverScrollMode9
    com.androidquery.AbstractAQuery setLayerType11(int,android.graphics.Paint) -> setLayerType11
    java.lang.Object invoke(java.lang.String,java.lang.Class[],java.lang.Object[]) -> invoke
    com.androidquery.AbstractAQuery hardwareAccelerated11() -> hardwareAccelerated11
    com.androidquery.AbstractAQuery clear() -> clear
    com.androidquery.AbstractAQuery margin(float,float,float,float) -> margin
    com.androidquery.AbstractAQuery width(int) -> width
    com.androidquery.AbstractAQuery height(int) -> height
    com.androidquery.AbstractAQuery width(int,boolean) -> width
    com.androidquery.AbstractAQuery height(int,boolean) -> height
    void size(boolean,int,boolean) -> a
    android.content.Context getContext() -> getContext
    com.androidquery.AbstractAQuery ajax(com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery invoke(com.androidquery.callback.AbstractAjaxCallback) -> invoke
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,long,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,long,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.util.Map,java.lang.Class,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.util.Map,java.lang.Class,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery sync(com.androidquery.callback.AjaxCallback) -> sync
    com.androidquery.AbstractAQuery cache(java.lang.String,long) -> cache
    com.androidquery.AbstractAQuery ajaxCancel() -> ajaxCancel
    java.io.File getCachedFile(java.lang.String) -> getCachedFile
    com.androidquery.AbstractAQuery invalidate(java.lang.String) -> invalidate
    android.graphics.Bitmap getCachedImage(java.lang.String) -> getCachedImage
    android.graphics.Bitmap getCachedImage(java.lang.String,int) -> getCachedImage
    android.graphics.Bitmap getCachedImage(int) -> getCachedImage
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float) -> shouldDelay
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float,boolean) -> shouldDelay
    boolean shouldDelay(int,boolean,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,int,boolean,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    java.io.File makeSharedFile(java.lang.String,java.lang.String) -> makeSharedFile
    com.androidquery.AbstractAQuery animate(int) -> animate
    com.androidquery.AbstractAQuery animate(int,android.view.animation.Animation$AnimationListener) -> animate
    com.androidquery.AbstractAQuery animate(android.view.animation.Animation) -> animate
    com.androidquery.AbstractAQuery click() -> click
    com.androidquery.AbstractAQuery longClick() -> longClick
    com.androidquery.AbstractAQuery show(android.app.Dialog) -> show
    com.androidquery.AbstractAQuery dismiss(android.app.Dialog) -> dismiss
    com.androidquery.AbstractAQuery dismiss() -> dismiss
    com.androidquery.AbstractAQuery webImage(java.lang.String) -> webImage
    com.androidquery.AbstractAQuery webImage(java.lang.String,boolean,boolean,int) -> webImage
    android.view.View inflate(android.view.View,int,android.view.ViewGroup) -> inflate
    com.androidquery.AbstractAQuery expand(int,boolean) -> expand
    com.androidquery.AbstractAQuery expand(boolean) -> expand
com.androidquery.auth.AccountHandle -> com.androidquery.auth.AccountHandle:
    java.util.LinkedHashSet callbacks -> a
    void auth(com.androidquery.callback.AbstractAjaxCallback) -> auth
    boolean authenticated() -> authenticated
    void success(android.content.Context) -> success
    void failure(android.content.Context,int,java.lang.String) -> failure
    void auth() -> auth
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    java.lang.String getNetworkUrl(java.lang.String) -> getNetworkUrl
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    void unauth() -> unauth
com.androidquery.auth.GoogleHandle -> com.androidquery.auth.GoogleHandle:
    android.accounts.AccountManager am -> a
    android.accounts.Account acc -> b
    java.lang.String type -> c
    android.app.Activity act -> d
    java.lang.String email -> e
    android.accounts.Account[] accs -> f
    java.lang.String token -> g
    void auth() -> auth
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    java.lang.String getType() -> getType
    void onClick(android.content.DialogInterface,int) -> onClick
    void setActiveAccount(android.content.Context,java.lang.String) -> setActiveAccount
    java.lang.String getActiveAccount(android.content.Context) -> getActiveAccount
    void auth(android.accounts.Account) -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    boolean authenticated() -> authenticated
    android.accounts.AccountManager access$0(com.androidquery.auth.GoogleHandle) -> a
    android.accounts.Account access$1(com.androidquery.auth.GoogleHandle) -> b
    java.lang.String access$2(com.androidquery.auth.GoogleHandle) -> c
    android.app.Activity access$3(com.androidquery.auth.GoogleHandle) -> d
    void access$4(com.androidquery.auth.GoogleHandle,java.lang.String) -> a
com.androidquery.auth.GoogleHandle$Task -> com.androidquery.auth.a:
    com.androidquery.auth.GoogleHandle this$0 -> a
    android.os.Bundle doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(android.os.Bundle) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.androidquery.callback.AbstractAjaxCallback -> com.androidquery.callback.AbstractAjaxCallback:
    int NET_TIMEOUT -> a
    java.lang.String AGENT -> b
    int NETWORK_POOL -> c
    boolean GZIP -> d
    java.lang.Class type -> e
    java.lang.ref.Reference whandler -> f
    java.lang.Object handler -> g
    java.lang.String callback -> h
    java.lang.ref.WeakReference progress -> i
    java.lang.String url -> j
    java.util.Map params -> k
    java.util.Map headers -> l
    java.util.Map cookies -> m
    com.androidquery.callback.Transformer transformer -> n
    java.lang.Object result -> result
    java.io.File cacheDir -> o
    com.androidquery.auth.AccountHandle ah -> p
    com.androidquery.callback.AjaxStatus status -> status
    boolean fileCache -> fileCache
    boolean memCache -> memCache
    boolean refresh -> q
    long expire -> r
    java.lang.String encoding -> s
    java.lang.ref.WeakReference act -> t
    boolean uiCallback -> u
    com.androidquery.callback.Transformer st -> v
    java.lang.Class[] DEFAULT_SIG -> w
    boolean completed -> x
    boolean blocked -> y
    boolean reauth -> z
    java.util.concurrent.ExecutorService fetchExe -> A
    org.apache.http.conn.scheme.SocketFactory ssf -> B
    org.apache.http.impl.client.DefaultHttpClient client -> C
    int lastStatus -> D
    void setTimeout(int) -> setTimeout
    void setAgent(java.lang.String) -> setAgent
    void setGZip(boolean) -> setGZip
    void setTransformer(com.androidquery.callback.Transformer) -> setTransformer
    java.lang.Class getType() -> getType
    java.lang.Object weakHandler(java.lang.Object,java.lang.String) -> weakHandler
    java.lang.Object handler(java.lang.Object,java.lang.String) -> handler
    java.lang.Object url(java.lang.String) -> url
    java.lang.Object type(java.lang.Class) -> type
    java.lang.Object transformer(com.androidquery.callback.Transformer) -> transformer
    java.lang.Object fileCache(boolean) -> fileCache
    java.lang.Object memCache(boolean) -> memCache
    java.lang.Object refresh(boolean) -> refresh
    java.lang.Object uiCallback(boolean) -> uiCallback
    java.lang.Object expire(long) -> expire
    java.lang.Object header(java.lang.String,java.lang.String) -> header
    java.lang.Object cookie(java.lang.String,java.lang.String) -> cookie
    java.lang.Object encoding(java.lang.String) -> encoding
    java.lang.Object param(java.lang.String,java.lang.Object) -> param
    java.lang.Object params(java.util.Map) -> params
    java.lang.Object progress(android.view.View) -> progress
    java.lang.Object progress(android.app.Dialog) -> progress
    java.lang.Object progress(java.lang.Object) -> progress
    void callback() -> a
    void block() -> block
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> callback
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
    java.lang.Object datastoreGet(java.lang.String) -> datastoreGet
    void showProgress(boolean) -> showProgress
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    java.lang.Object memGet(java.lang.String) -> memGet
    void memPut(java.lang.String,java.lang.Object) -> memPut
    void filePut(java.lang.String,java.lang.Object,java.io.File,byte[]) -> filePut
    java.io.File accessFile(java.io.File,java.lang.String) -> accessFile
    void async(android.app.Activity) -> async
    void async(android.content.Context) -> async
    void failure(int,java.lang.String) -> failure
    boolean cacheAvailable(android.content.Context) -> cacheAvailable
    void run() -> run
    java.lang.String getCacheUrl() -> b
    java.io.File getCacheFile() -> getCacheFile
    java.util.Map extractParams(android.net.Uri) -> a
    void network() -> c
    void afterWork() -> d
    void execute(java.lang.Runnable) -> execute
    void setNetworkLimit(int) -> setNetworkLimit
    void cancel() -> cancel
    void httpPost(java.lang.String,java.util.Map,java.util.Map,com.androidquery.callback.AjaxStatus) -> a
    void setSSF(org.apache.http.conn.scheme.SocketFactory) -> setSSF
    void httpDo(org.apache.http.client.methods.HttpUriRequest,java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> a
    java.lang.Object auth(android.app.Activity,java.lang.String,java.lang.String) -> auth
    java.lang.Object auth(com.androidquery.auth.AccountHandle) -> auth
    java.lang.String getUrl() -> getUrl
    java.lang.Object getHandler() -> getHandler
    java.lang.String getCallback() -> getCallback
    int getLastStatus() -> getLastStatus
    java.lang.Object getResult() -> getResult
    com.androidquery.callback.AjaxStatus getStatus() -> getStatus
    java.lang.String getEncoding() -> getEncoding
    boolean isMultiPart(java.util.Map) -> a
    void httpMulti(java.lang.String,java.util.Map,java.util.Map,com.androidquery.callback.AjaxStatus) -> b
    void writeData(java.io.DataOutputStream,java.lang.String,java.io.InputStream) -> a
    java.lang.String makeCookie() -> e
com.androidquery.callback.AjaxCallback -> com.androidquery.callback.AjaxCallback:
com.androidquery.callback.AjaxStatus -> com.androidquery.callback.AjaxStatus:
    int NETWORK -> NETWORK
    int DATASTORE -> DATASTORE
    int FILE -> FILE
    int MEMORY -> MEMORY
    int DEVICE -> DEVICE
    int NETWORK_ERROR -> NETWORK_ERROR
    int AUTH_ERROR -> AUTH_ERROR
    int TRANSFORM_ERROR -> TRANSFORM_ERROR
    int code -> a
    java.lang.String message -> b
    java.lang.String redirect -> c
    byte[] data -> d
    java.util.Date time -> e
    boolean refresh -> f
    org.apache.http.impl.client.DefaultHttpClient client -> g
    long duration -> h
    int source -> i
    long start -> j
    boolean done -> k
    boolean invalid -> l
    boolean reauth -> m
    java.lang.String error -> n
    org.apache.http.protocol.HttpContext context -> o
    org.apache.http.Header[] headers -> p
    com.androidquery.callback.AjaxStatus source(int) -> source
    com.androidquery.callback.AjaxStatus code(int) -> code
    com.androidquery.callback.AjaxStatus error(java.lang.String) -> error
    com.androidquery.callback.AjaxStatus message(java.lang.String) -> message
    com.androidquery.callback.AjaxStatus redirect(java.lang.String) -> redirect
    com.androidquery.callback.AjaxStatus context(org.apache.http.protocol.HttpContext) -> context
    com.androidquery.callback.AjaxStatus time(java.util.Date) -> time
    com.androidquery.callback.AjaxStatus refresh(boolean) -> refresh
    com.androidquery.callback.AjaxStatus reauth(boolean) -> reauth
    com.androidquery.callback.AjaxStatus client(org.apache.http.impl.client.DefaultHttpClient) -> client
    com.androidquery.callback.AjaxStatus headers(org.apache.http.Header[]) -> headers
    com.androidquery.callback.AjaxStatus done() -> done
    com.androidquery.callback.AjaxStatus data(byte[]) -> data
    com.androidquery.callback.AjaxStatus invalidate() -> invalidate
    boolean getDone() -> getDone
    boolean getReauth() -> getReauth
    boolean getInvalid() -> getInvalid
    int getCode() -> getCode
    java.lang.String getMessage() -> getMessage
    java.lang.String getRedirect() -> getRedirect
    byte[] getData() -> getData
    java.util.Date getTime() -> getTime
    boolean getRefresh() -> getRefresh
    org.apache.http.impl.client.DefaultHttpClient getClient() -> getClient
    long getDuration() -> getDuration
    int getSource() -> getSource
    java.lang.String getError() -> getError
    boolean expired(long) -> expired
    java.util.List getCookies() -> getCookies
    java.util.List getHeaders() -> getHeaders
com.androidquery.callback.BitmapAjaxCallback -> com.androidquery.callback.BitmapAjaxCallback:
    int SMALL_MAX -> a
    int BIG_MAX -> b
    int SMALL_PIXELS -> c
    int BIG_PIXELS -> d
    int BIG_TPIXELS -> e
    java.util.Map smallCache -> f
    java.util.Map bigCache -> g
    java.util.Map invalidCache -> h
    java.util.HashMap queueMap -> i
    java.lang.ref.WeakReference v -> j
    int targetWidth -> k
    int fallback -> l
    java.io.File imageFile -> m
    android.graphics.Bitmap bm -> n
    int animation -> o
    android.graphics.Bitmap preset -> p
    float ratio -> q
    boolean targetDim -> r
    float anchor -> s
    boolean invalid -> t
    android.graphics.BitmapFactory$Options reuse -> u
    android.graphics.Bitmap empty -> v
    android.graphics.Bitmap dummy -> w
    com.androidquery.callback.BitmapAjaxCallback imageView(android.widget.ImageView) -> imageView
    com.androidquery.callback.BitmapAjaxCallback targetWidth(int) -> targetWidth
    com.androidquery.callback.BitmapAjaxCallback file(java.io.File) -> file
    com.androidquery.callback.BitmapAjaxCallback preset(android.graphics.Bitmap) -> preset
    com.androidquery.callback.BitmapAjaxCallback bitmap(android.graphics.Bitmap) -> bitmap
    com.androidquery.callback.BitmapAjaxCallback fallback(int) -> fallback
    com.androidquery.callback.BitmapAjaxCallback animation(int) -> animation
    com.androidquery.callback.BitmapAjaxCallback ratio(float) -> ratio
    com.androidquery.callback.BitmapAjaxCallback anchor(float) -> anchor
    com.androidquery.callback.BitmapAjaxCallback reuse(android.graphics.BitmapFactory$Options) -> reuse
    android.graphics.Bitmap decode(java.lang.String,byte[],android.graphics.BitmapFactory$Options) -> a
    void setField(java.lang.Object,java.lang.String,java.lang.Object) -> a
    android.graphics.Bitmap getResizedImage(java.lang.String,byte[],int,boolean,android.graphics.BitmapFactory$Options) -> getResizedImage
    int sampleSize(int,int) -> a
    android.graphics.Bitmap bmGet(java.lang.String,byte[]) -> a
    java.io.File accessFile(java.io.File,java.lang.String) -> accessFile
    android.graphics.Bitmap fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
    android.graphics.Bitmap transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    android.graphics.Bitmap getMemoryCached(android.content.Context,int) -> getMemoryCached
    android.graphics.Bitmap getEmptyBitmap() -> getEmptyBitmap
    void callback(java.lang.String,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> callback
    void checkCb(com.androidquery.callback.BitmapAjaxCallback,java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> callback
    void setIconCacheLimit(int) -> setIconCacheLimit
    void setCacheLimit(int) -> setCacheLimit
    void setPixelLimit(int) -> setPixelLimit
    void setSmallPixel(int) -> setSmallPixel
    void setMaxPixelLimit(int) -> setMaxPixelLimit
    void clearCache() -> clearCache
    void clearTasks() -> clearTasks
    java.util.Map getBCache() -> a
    java.util.Map getSCache() -> b
    java.util.Map getICache() -> c
    android.graphics.Bitmap memGet(java.lang.String) -> memGet
    android.graphics.Bitmap getMemoryCached(java.lang.String,int) -> getMemoryCached
    android.graphics.Bitmap memGet(java.lang.String,int) -> a
    java.lang.String getKey(java.lang.String,int) -> b
    void memPut(java.lang.String,int,android.graphics.Bitmap,boolean) -> a
    void memPut(java.lang.String,android.graphics.Bitmap) -> memPut
    void setBitmap$7ac029e1(android.widget.ImageView,android.graphics.Bitmap,boolean) -> a
    android.graphics.drawable.Drawable makeDrawable(android.widget.ImageView,android.graphics.Bitmap,float,float,java.io.File,android.graphics.BitmapFactory$Options) -> a
    void setBmAnimate(android.widget.ImageView,android.graphics.Bitmap,android.graphics.Bitmap,int,int,float,float,int,java.io.File,android.graphics.BitmapFactory$Options) -> a
    void async(android.app.Activity,android.content.Context,android.widget.ImageView,java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float,float,java.lang.Object,com.androidquery.auth.AccountHandle) -> async
    void async(android.content.Context) -> async
    void addQueue(java.lang.String,android.widget.ImageView) -> a
    void memPut(java.lang.String,java.lang.Object) -> memPut
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    java.lang.Object memGet(java.lang.String) -> memGet
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> callback
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
com.androidquery.callback.Transformer -> com.androidquery.callback.Transformer:
    java.lang.Object transform(java.lang.String,java.lang.Class,java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
com.androidquery.service.MarketService -> com.androidquery.service.MarketService:
    android.app.Activity act -> a
    com.androidquery.AQuery aq -> b
    com.androidquery.service.MarketService$Handler handler -> c
    java.lang.String locale -> d
    java.lang.String rateUrl -> e
    java.lang.String updateUrl -> f
    boolean force -> g
    int progress -> h
    long expire -> i
    java.lang.String version -> j
    int level -> k
    int REVISION -> REVISION
    int MINOR -> MINOR
    int MAJOR -> MAJOR
    android.content.pm.ApplicationInfo ai -> l
    android.content.pm.PackageInfo pi -> m
    com.androidquery.service.MarketService rateUrl(java.lang.String) -> rateUrl
    com.androidquery.service.MarketService level(int) -> level
    com.androidquery.service.MarketService updateUrl(java.lang.String) -> updateUrl
    com.androidquery.service.MarketService locale(java.lang.String) -> locale
    com.androidquery.service.MarketService progress(int) -> progress
    com.androidquery.service.MarketService force(boolean) -> force
    com.androidquery.service.MarketService expire(long) -> expire
    android.content.pm.ApplicationInfo getApplicationInfo() -> a
    android.content.pm.PackageInfo getPackageInfo() -> b
    void checkVersion() -> checkVersion
    boolean openUrl(android.app.Activity,java.lang.String) -> b
    void callback(java.lang.String,org.json.JSONObject,com.androidquery.callback.AjaxStatus) -> callback
    boolean outdated(java.lang.String,int) -> a
    boolean requireUpdate(java.lang.String,java.lang.String,int) -> a
    void showUpdateDialog(org.json.JSONObject) -> showUpdateDialog
    android.app.Activity access$0(com.androidquery.service.MarketService) -> a
    java.lang.String access$9(com.androidquery.service.MarketService) -> b
    boolean access$10(android.app.Activity,java.lang.String) -> a
    java.lang.String access$11(com.androidquery.service.MarketService) -> c
    java.lang.String access$12(com.androidquery.service.MarketService) -> d
    void access$13(android.content.Context,java.lang.String) -> a
com.androidquery.service.MarketService$Handler -> com.androidquery.service.a:
    com.androidquery.service.MarketService this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader) -> handleTag
com.androidquery.util.AQUtility -> com.androidquery.util.AQUtility:
    boolean debug -> a
    java.lang.Object wait -> b
    java.lang.Thread$UncaughtExceptionHandler eh -> c
    java.util.Map times -> d
    android.os.Handler handler -> e
    java.util.concurrent.ScheduledExecutorService storeExe -> f
    java.io.File cacheDir -> g
    android.content.Context context -> h
    void setDebug(boolean) -> setDebug
    void debugWait(long) -> debugWait
    void debugNotify() -> debugNotify
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable) -> debug
    void report(java.lang.Throwable) -> report
    void setExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setExceptionHandler
    void time(java.lang.String) -> time
    long timeEnd(java.lang.String,long) -> timeEnd
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Object[]) -> invokeHandler
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> invokeHandler
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> a
    void transparent(android.view.View,boolean) -> transparent
    void ensureUIThread() -> ensureUIThread
    boolean isUIThread() -> isUIThread
    android.os.Handler getHandler() -> getHandler
    void post(java.lang.Runnable) -> post
    void postDelayed(java.lang.Runnable,long) -> postDelayed
    byte[] getMD5(byte[]) -> a
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    byte[] toBytes(java.io.InputStream) -> toBytes
    void write(java.io.File,byte[]) -> write
    void close(java.io.InputStream) -> close
    java.util.concurrent.ScheduledExecutorService getFileStoreExecutor() -> a
    void storeAsync(java.io.File,byte[],long) -> storeAsync
    java.io.File getCacheDir(android.content.Context) -> getCacheDir
    void setCacheDir(java.io.File) -> setCacheDir
    java.io.File getExistedCacheByUrl(android.content.Context,java.lang.String) -> getExistedCacheByUrl
    java.io.File getCacheFile(java.io.File,java.lang.String) -> getCacheFile
    java.io.File getExistedCacheByUrl(java.io.File,java.lang.String) -> getExistedCacheByUrl
    java.io.File getExistedCacheByUrlSetAccess(java.io.File,java.lang.String) -> getExistedCacheByUrlSetAccess
    void store(java.io.File,byte[]) -> store
    void cleanCacheAsync(android.content.Context) -> cleanCacheAsync
    void cleanCacheAsync(android.content.Context,long,long) -> cleanCacheAsync
    void cleanCache(java.io.File,long,long) -> cleanCache
    java.io.File getTempDir() -> getTempDir
    void cleanCache(java.io.File[],long) -> a
    int dip2pixel(android.content.Context,float) -> dip2pixel
    void setContext(android.app.Application) -> setContext
    android.content.Context getContext() -> getContext
com.androidquery.util.BitmapCache -> com.androidquery.util.BitmapCache:
    int maxCount -> a
    int maxPixels -> b
    int maxTotalPixels -> c
    int pixels -> d
    android.graphics.Bitmap put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.Object) -> remove
    void clear() -> clear
    int pixels(android.graphics.Bitmap) -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.androidquery.util.Common -> com.androidquery.util.Common:
    java.lang.Object handler -> a
    java.lang.String method -> b
    java.lang.Object[] params -> c
    boolean fallback -> d
    java.lang.Class[] sig -> e
    int methodId -> f
    int STORE_FILE -> STORE_FILE
    int CLEAN_CACHE -> CLEAN_CACHE
    int scrollState -> g
    android.widget.AbsListView$OnScrollListener osl -> h
    int lastBottom -> i
    android.widget.AdapterView$OnItemSelectedListener galleryListener -> j
    boolean galleryListen -> k
    com.androidquery.util.Common forward(java.lang.Object,java.lang.String,boolean,java.lang.Class[]) -> forward
    com.androidquery.util.Common method(int,java.lang.Object[]) -> method
    java.lang.Object invoke(java.lang.Object[]) -> a
    int compare(java.io.File,java.io.File) -> compare
    void run() -> run
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    int getScrollState() -> getScrollState
    void forward(android.widget.AbsListView$OnScrollListener) -> forward
    void checkScrolledBottom(android.widget.AbsListView,int) -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    boolean shouldDelay(int,int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float,boolean) -> shouldDelay
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void listen(android.widget.Gallery) -> listen
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void showProgress(java.lang.Object,java.lang.String,boolean) -> showProgress
    int compare(java.lang.Object,java.lang.Object) -> compare
com.androidquery.util.Constants -> com.androidquery.util.Constants:
    java.lang.String VERSION -> VERSION
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int FLAG_HARDWARE_ACCELERATED -> FLAG_HARDWARE_ACCELERATED
    int FLAG_ACTIVITY_NO_ANIMATION -> FLAG_ACTIVITY_NO_ANIMATION
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int INVISIBLE -> INVISIBLE
    int GONE -> GONE
    int FADE_IN -> FADE_IN
    int FADE_IN_NETWORK -> FADE_IN_NETWORK
    int FADE_IN_FILE -> FADE_IN_FILE
    int TAG_URL -> TAG_URL
    int TAG_SCROLL_LISTENER -> TAG_SCROLL_LISTENER
    int TAG_LAYOUT -> TAG_LAYOUT
    int TAG_NUM -> TAG_NUM
    float RATIO_PRESERVE -> RATIO_PRESERVE
    float ANCHOR_DYNAMIC -> ANCHOR_DYNAMIC
    java.lang.String ACTIVE_ACCOUNT -> ACTIVE_ACCOUNT
    java.lang.String AUTH_READER -> AUTH_READER
    java.lang.String AUTH_PICASA -> AUTH_PICASA
    java.lang.String AUTH_SPREADSHEETS -> AUTH_SPREADSHEETS
    java.lang.String AUTH_DOC_LIST -> AUTH_DOC_LIST
    java.lang.String AUTH_YOUTUBE -> AUTH_YOUTUBE
    java.lang.String AUTH_ANALYTICS -> AUTH_ANALYTICS
    java.lang.String AUTH_BLOGGER -> AUTH_BLOGGER
    java.lang.String AUTH_CALENDAR -> AUTH_CALENDAR
    java.lang.String AUTH_CONTACTS -> AUTH_CONTACTS
    java.lang.String AUTH_MAPS -> AUTH_MAPS
    java.lang.String POST_ENTITY -> POST_ENTITY
    int SDK_INT -> SDK_INT
com.androidquery.util.PredefinedBAOS -> com.androidquery.util.PredefinedBAOS:
    byte[] toByteArray() -> toByteArray
com.androidquery.util.RatioDrawable -> com.androidquery.util.RatioDrawable:
    float ratio -> a
    java.lang.ref.WeakReference ref -> b
    boolean adjusted -> c
    android.graphics.Matrix m -> d
    int w -> e
    float anchor -> f
    int version -> g
    boolean loading -> h
    java.io.File file -> i
    android.graphics.BitmapFactory$Options reuse -> j
    int getGen(android.graphics.Bitmap) -> a
    int getWidth(android.widget.ImageView) -> a
    void draw(android.graphics.Canvas) -> draw
    void run() -> run
    void draw(android.graphics.Canvas,android.widget.ImageView,android.graphics.Bitmap) -> a
    void adjust(android.widget.ImageView,android.graphics.Bitmap,boolean) -> a
    int targetHeight(int,int,int) -> a
com.androidquery.util.WebImage -> com.androidquery.util.WebImage:
    java.lang.Object progress -> a
    android.webkit.WebView wv -> b
    java.lang.String url -> c
    boolean zoom -> d
    boolean control -> e
    int color -> f
    java.lang.String template -> g
    java.lang.String getSource(android.content.Context) -> a
    void load() -> load
    void setup() -> a
    void done(android.webkit.WebView) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
    android.webkit.WebView access$0(com.androidquery.util.WebImage) -> a
    void access$1(com.androidquery.util.WebImage) -> b
com.androidquery.util.WebImage$1 -> com.androidquery.util.a:
    com.androidquery.util.WebImage this$0 -> a
    void onNewPicture(android.webkit.WebView,android.graphics.Picture) -> onNewPicture
com.androidquery.util.XmlDom -> com.androidquery.util.XmlDom:
    org.w3c.dom.Element root -> a
    org.w3c.dom.Element getElement() -> getElement
    com.androidquery.util.XmlDom tag(java.lang.String) -> tag
    com.androidquery.util.XmlDom tag(java.lang.String,java.lang.String,java.lang.String) -> tag
    java.util.List tags(java.lang.String) -> tags
    com.androidquery.util.XmlDom child(java.lang.String) -> child
    com.androidquery.util.XmlDom child(java.lang.String,java.lang.String,java.lang.String) -> child
    java.util.List children(java.lang.String) -> children
    java.util.List children(java.lang.String,java.lang.String,java.lang.String) -> children
    java.util.List tags(java.lang.String,java.lang.String,java.lang.String) -> tags
    java.util.List convert(org.w3c.dom.NodeList,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String text(java.lang.String) -> text
    java.lang.String attr(java.lang.String) -> attr
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String serialize$117445b3(int) -> a
    void writeSpace(org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> a
    java.lang.String text() -> text
    java.lang.String text(org.w3c.dom.Node) -> a
    void serialize(org.w3c.dom.Element,org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> a
com.squareup.okhttp.Address -> com.squareup.okhttp.Address:
    java.net.Proxy proxy -> a
    java.lang.String uriHost -> b
    int uriPort -> c
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> d
    javax.net.ssl.HostnameVerifier hostnameVerifier -> e
    java.lang.String getUriHost() -> getUriHost
    int getUriPort() -> getUriPort
    javax.net.ssl.SSLSocketFactory getSslSocketFactory() -> getSslSocketFactory
    javax.net.ssl.HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    java.net.Proxy getProxy() -> getProxy
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.squareup.okhttp.Connection -> com.squareup.okhttp.Connection:
    byte[] NPN_PROTOCOLS -> a
    byte[] SPDY3 -> b
    byte[] HTTP_11 -> c
    com.squareup.okhttp.Route route -> d
    java.net.Socket socket -> e
    java.io.InputStream in -> f
    java.io.OutputStream out -> g
    boolean connected -> h
    com.squareup.okhttp.internal.spdy.SpdyConnection spdyConnection -> i
    int httpMinorVersion -> j
    long idleStartTimeNs -> k
    void connect(int,int,com.squareup.okhttp.TunnelRequest) -> connect
    boolean isConnected() -> isConnected
    void close() -> close
    com.squareup.okhttp.Route getRoute() -> getRoute
    java.net.Socket getSocket() -> getSocket
    boolean isAlive() -> isAlive
    void resetIdleStartTime() -> resetIdleStartTime
    boolean isIdle() -> isIdle
    boolean isExpired(long) -> isExpired
    long getIdleStartTimeNs() -> getIdleStartTimeNs
    java.lang.Object newTransport(com.squareup.okhttp.internal.http.HttpEngine) -> newTransport
    boolean isSpdy() -> isSpdy
    com.squareup.okhttp.internal.spdy.SpdyConnection getSpdyConnection() -> getSpdyConnection
    int getHttpMinorVersion() -> getHttpMinorVersion
    void setHttpMinorVersion(int) -> setHttpMinorVersion
    boolean requiresTunnel() -> requiresTunnel
    void makeTunnel(com.squareup.okhttp.TunnelRequest) -> a
com.squareup.okhttp.ConnectionPool -> com.squareup.okhttp.ConnectionPool:
    com.squareup.okhttp.ConnectionPool systemDefault -> a
    int maxIdleConnections -> b
    long keepAliveDurationNs -> c
    java.util.LinkedList connections -> d
    java.util.concurrent.ExecutorService executorService -> e
    java.util.concurrent.Callable connectionsCleanupCallable -> f
    com.squareup.okhttp.ConnectionPool getDefault() -> getDefault
    int getConnectionCount() -> getConnectionCount
    int getSpdyConnectionCount() -> getSpdyConnectionCount
    int getHttpConnectionCount() -> getHttpConnectionCount
    com.squareup.okhttp.Connection get(com.squareup.okhttp.Address) -> get
    void recycle(com.squareup.okhttp.Connection) -> recycle
    void maybeShare(com.squareup.okhttp.Connection) -> maybeShare
    void evictAll() -> evictAll
    java.util.LinkedList access$0(com.squareup.okhttp.ConnectionPool) -> a
    long access$1(com.squareup.okhttp.ConnectionPool) -> b
    int access$2(com.squareup.okhttp.ConnectionPool) -> c
com.squareup.okhttp.ConnectionPool$1 -> com.squareup.okhttp.a:
    com.squareup.okhttp.ConnectionPool this$0 -> a
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.squareup.okhttp.HttpResponseCache -> com.squareup.okhttp.HttpResponseCache:
    char[] DIGITS -> b
    com.squareup.okhttp.internal.DiskLruCache cache -> c
    int writeSuccessCount -> d
    int writeAbortCount -> e
    int networkCount -> f
    int hitCount -> g
    int requestCount -> h
    com.squareup.okhttp.internal.http.OkResponseCache okResponseCache -> a
    int[] $SWITCH_TABLE$com$squareup$okhttp$ResponseSource -> i
    java.lang.String uriToKey(java.net.URI) -> a
    java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map) -> get
    java.net.CacheRequest put(java.net.URI,java.net.URLConnection) -> put
    void abortQuietly(com.squareup.okhttp.internal.DiskLruCache$Editor) -> a
    com.squareup.okhttp.internal.http.HttpEngine getHttpEngine(java.net.URLConnection) -> a
    void delete() -> delete
    int getWriteAbortCount() -> getWriteAbortCount
    int getWriteSuccessCount() -> getWriteSuccessCount
    void trackResponse(com.squareup.okhttp.ResponseSource) -> a
    void trackConditionalCacheHit() -> a
    int getNetworkCount() -> getNetworkCount
    int getHitCount() -> getHitCount
    int getRequestCount() -> getRequestCount
    void access$0$67e7d677(java.net.CacheResponse,java.net.HttpURLConnection) -> a
    void access$1(com.squareup.okhttp.HttpResponseCache) -> a
    void access$2(com.squareup.okhttp.HttpResponseCache,com.squareup.okhttp.ResponseSource) -> a
    int access$3(com.squareup.okhttp.HttpResponseCache) -> b
    void access$4(com.squareup.okhttp.HttpResponseCache,int) -> a
    int access$5(com.squareup.okhttp.HttpResponseCache) -> c
    void access$6(com.squareup.okhttp.HttpResponseCache,int) -> b
    java.io.InputStream access$7(com.squareup.okhttp.internal.DiskLruCache$Snapshot) -> a
    int[] $SWITCH_TABLE$com$squareup$okhttp$ResponseSource() -> b
com.squareup.okhttp.HttpResponseCache$1 -> com.squareup.okhttp.b:
    com.squareup.okhttp.HttpResponseCache this$0 -> a
    java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map) -> get
    java.net.CacheRequest put(java.net.URI,java.net.URLConnection) -> put
    void update(java.net.CacheResponse,java.net.HttpURLConnection) -> update
    void trackConditionalCacheHit() -> trackConditionalCacheHit
    void trackResponse(com.squareup.okhttp.ResponseSource) -> trackResponse
com.squareup.okhttp.HttpResponseCache$2 -> com.squareup.okhttp.c:
    com.squareup.okhttp.internal.DiskLruCache$Snapshot val$snapshot -> a
    void close() -> close
com.squareup.okhttp.HttpResponseCache$CacheRequestImpl -> com.squareup.okhttp.d:
    com.squareup.okhttp.internal.DiskLruCache$Editor editor -> b
    java.io.OutputStream cacheOut -> c
    boolean done -> d
    java.io.OutputStream body -> e
    com.squareup.okhttp.HttpResponseCache this$0 -> a
    void abort() -> abort
    java.io.OutputStream getBody() -> getBody
    boolean access$0(com.squareup.okhttp.HttpResponseCache$CacheRequestImpl) -> a
    void access$1$65d8260a(com.squareup.okhttp.HttpResponseCache$CacheRequestImpl) -> b
    com.squareup.okhttp.HttpResponseCache access$2(com.squareup.okhttp.HttpResponseCache$CacheRequestImpl) -> c
com.squareup.okhttp.HttpResponseCache$CacheRequestImpl$1 -> com.squareup.okhttp.e:
    com.squareup.okhttp.HttpResponseCache$CacheRequestImpl this$1 -> a
    com.squareup.okhttp.internal.DiskLruCache$Editor val$editor -> b
    void close() -> close
    void write(byte[],int,int) -> write
com.squareup.okhttp.HttpResponseCache$Entry -> com.squareup.okhttp.f:
    java.lang.String uri -> a
    com.squareup.okhttp.internal.http.RawHeaders varyHeaders -> b
    java.lang.String requestMethod -> c
    com.squareup.okhttp.internal.http.RawHeaders responseHeaders -> d
    java.lang.String cipherSuite -> e
    java.security.cert.Certificate[] peerCertificates -> f
    java.security.cert.Certificate[] localCertificates -> g
    void writeTo(com.squareup.okhttp.internal.DiskLruCache$Editor) -> writeTo
    boolean isHttps() -> a
    java.security.cert.Certificate[] readCertArray(com.squareup.okhttp.internal.StrictLineReader) -> a
    void writeCertArray(java.io.Writer,java.security.cert.Certificate[]) -> a
    boolean matches(java.net.URI,java.lang.String,java.util.Map) -> matches
    com.squareup.okhttp.internal.http.RawHeaders access$0(com.squareup.okhttp.HttpResponseCache$Entry) -> a
    java.lang.String access$1(com.squareup.okhttp.HttpResponseCache$Entry) -> b
    java.security.cert.Certificate[] access$2(com.squareup.okhttp.HttpResponseCache$Entry) -> c
    java.security.cert.Certificate[] access$3(com.squareup.okhttp.HttpResponseCache$Entry) -> d
    boolean access$4(com.squareup.okhttp.HttpResponseCache$Entry) -> e
com.squareup.okhttp.HttpResponseCache$EntryCacheResponse -> com.squareup.okhttp.g:
    com.squareup.okhttp.HttpResponseCache$Entry entry -> a
    com.squareup.okhttp.internal.DiskLruCache$Snapshot snapshot -> b
    java.io.InputStream in -> c
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getBody() -> getBody
    com.squareup.okhttp.internal.DiskLruCache$Snapshot access$0(com.squareup.okhttp.HttpResponseCache$EntryCacheResponse) -> a
com.squareup.okhttp.HttpResponseCache$EntrySecureCacheResponse -> com.squareup.okhttp.h:
    com.squareup.okhttp.HttpResponseCache$Entry entry -> a
    com.squareup.okhttp.internal.DiskLruCache$Snapshot snapshot -> b
    java.io.InputStream in -> c
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getBody() -> getBody
    java.lang.String getCipherSuite() -> getCipherSuite
    java.util.List getServerCertificateChain() -> getServerCertificateChain
    java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    java.util.List getLocalCertificateChain() -> getLocalCertificateChain
    java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    com.squareup.okhttp.internal.DiskLruCache$Snapshot access$0(com.squareup.okhttp.HttpResponseCache$EntrySecureCacheResponse) -> a
com.squareup.okhttp.OkHttpClient -> com.squareup.okhttp.OkHttpClient:
    java.net.Proxy proxy -> a
    java.util.Set failedRoutes -> b
    java.net.ProxySelector proxySelector -> c
    java.net.CookieHandler cookieHandler -> d
    java.net.ResponseCache responseCache -> e
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> f
    javax.net.ssl.HostnameVerifier hostnameVerifier -> g
    com.squareup.okhttp.ConnectionPool connectionPool -> h
    boolean followProtocolRedirects -> i
    com.squareup.okhttp.OkHttpClient setProxy(java.net.Proxy) -> setProxy
    java.net.Proxy getProxy() -> getProxy
    com.squareup.okhttp.OkHttpClient setProxySelector(java.net.ProxySelector) -> setProxySelector
    java.net.ProxySelector getProxySelector() -> getProxySelector
    com.squareup.okhttp.OkHttpClient setCookieHandler(java.net.CookieHandler) -> setCookieHandler
    java.net.CookieHandler getCookieHandler() -> getCookieHandler
    com.squareup.okhttp.OkHttpClient setResponseCache(java.net.ResponseCache) -> setResponseCache
    java.net.ResponseCache getResponseCache() -> getResponseCache
    com.squareup.okhttp.internal.http.OkResponseCache okResponseCache() -> a
    com.squareup.okhttp.OkHttpClient setSSLSocketFactory(javax.net.ssl.SSLSocketFactory) -> setSSLSocketFactory
    javax.net.ssl.SSLSocketFactory getSslSocketFactory() -> getSslSocketFactory
    com.squareup.okhttp.OkHttpClient setHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setHostnameVerifier
    javax.net.ssl.HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    com.squareup.okhttp.OkHttpClient setConnectionPool(com.squareup.okhttp.ConnectionPool) -> setConnectionPool
    com.squareup.okhttp.ConnectionPool getConnectionPool() -> getConnectionPool
    com.squareup.okhttp.OkHttpClient setFollowProtocolRedirects(boolean) -> setFollowProtocolRedirects
    boolean getFollowProtocolRedirects() -> getFollowProtocolRedirects
    java.net.HttpURLConnection open(java.net.URL) -> open
com.squareup.okhttp.OkResponseCache -> com.squareup.okhttp.OkResponseCache:
    void trackResponse(com.squareup.okhttp.ResponseSource) -> trackResponse
    void trackConditionalCacheHit() -> trackConditionalCacheHit
    void update(java.net.CacheResponse,java.net.HttpURLConnection) -> update
com.squareup.okhttp.ResponseSource -> com.squareup.okhttp.ResponseSource:
    com.squareup.okhttp.ResponseSource CACHE -> CACHE
    com.squareup.okhttp.ResponseSource CONDITIONAL_CACHE -> CONDITIONAL_CACHE
    com.squareup.okhttp.ResponseSource NETWORK -> NETWORK
    com.squareup.okhttp.ResponseSource[] ENUM$VALUES -> a
    boolean requiresConnection() -> requiresConnection
    com.squareup.okhttp.ResponseSource[] values() -> values
    com.squareup.okhttp.ResponseSource valueOf(java.lang.String) -> valueOf
com.squareup.okhttp.Route -> com.squareup.okhttp.Route:
    com.squareup.okhttp.Address address -> a
    java.net.Proxy proxy -> b
    java.net.InetSocketAddress inetSocketAddress -> c
    boolean modernTls -> d
    com.squareup.okhttp.Address getAddress() -> getAddress
    java.net.Proxy getProxy() -> getProxy
    java.net.InetSocketAddress getSocketAddress() -> getSocketAddress
    boolean isModernTls() -> isModernTls
    com.squareup.okhttp.Route flipTlsMode() -> flipTlsMode
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.squareup.okhttp.TunnelRequest -> com.squareup.okhttp.TunnelRequest:
    java.lang.String host -> a
    int port -> b
    java.lang.String userAgent -> c
    java.lang.String proxyAuthorization -> d
    com.squareup.okhttp.internal.http.RawHeaders getRequestHeaders() -> a
com.squareup.okhttp.internal.AbstractOutputStream -> com.squareup.okhttp.internal.AbstractOutputStream:
    boolean closed -> closed
    void write(int) -> write
    void checkNotClosed() -> checkNotClosed
    boolean isClosed() -> isClosed
com.squareup.okhttp.internal.Base64 -> com.squareup.okhttp.internal.Base64:
    byte[] MAP -> a
    byte[] decode(byte[]) -> decode
    byte[] decode(byte[],int) -> decode
    java.lang.String encode(byte[]) -> encode
com.squareup.okhttp.internal.DiskLruCache -> com.squareup.okhttp.internal.DiskLruCache:
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> a
    java.io.File directory -> c
    java.io.File journalFile -> d
    java.io.File journalFileTmp -> e
    java.io.File journalFileBackup -> f
    int appVersion -> g
    long maxSize -> h
    int valueCount -> i
    long size -> j
    java.io.Writer journalWriter -> k
    java.util.LinkedHashMap lruEntries -> l
    int redundantOpCount -> m
    long nextSequenceNumber -> n
    java.util.concurrent.ThreadPoolExecutor executorService -> b
    java.util.concurrent.Callable cleanupCallable -> o
    java.io.OutputStream NULL_OUTPUT_STREAM -> p
    com.squareup.okhttp.internal.DiskLruCache open(java.io.File,int,int,long) -> open
    void readJournal() -> b
    void processJournal() -> c
    void rebuildJournal() -> d
    void deleteIfExists(java.io.File) -> a
    void renameTo(java.io.File,java.io.File,boolean) -> a
    com.squareup.okhttp.internal.DiskLruCache$Snapshot get(java.lang.String) -> get
    com.squareup.okhttp.internal.DiskLruCache$Editor edit(java.lang.String) -> edit
    com.squareup.okhttp.internal.DiskLruCache$Editor edit(java.lang.String,long) -> a
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    void completeEdit(com.squareup.okhttp.internal.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> e
    boolean remove(java.lang.String) -> remove
    boolean isClosed() -> isClosed
    void checkNotClosed() -> f
    void flush() -> flush
    void close() -> close
    void trimToSize() -> g
    void delete() -> delete
    void validateKey(java.lang.String) -> a
    java.io.Writer access$0(com.squareup.okhttp.internal.DiskLruCache) -> a
    void access$1(com.squareup.okhttp.internal.DiskLruCache) -> b
    boolean access$2(com.squareup.okhttp.internal.DiskLruCache) -> c
    void access$3(com.squareup.okhttp.internal.DiskLruCache) -> d
    void access$4$59d6d357(com.squareup.okhttp.internal.DiskLruCache) -> e
    com.squareup.okhttp.internal.DiskLruCache$Editor access$5(com.squareup.okhttp.internal.DiskLruCache,java.lang.String,long) -> a
    java.lang.String access$6(java.io.InputStream) -> a
    int access$7(com.squareup.okhttp.internal.DiskLruCache) -> f
    java.io.File access$8(com.squareup.okhttp.internal.DiskLruCache) -> g
    java.io.OutputStream access$9() -> a
    void access$10(com.squareup.okhttp.internal.DiskLruCache,com.squareup.okhttp.internal.DiskLruCache$Editor,boolean) -> a
com.squareup.okhttp.internal.DiskLruCache$1 -> com.squareup.okhttp.internal.a:
    com.squareup.okhttp.internal.DiskLruCache this$0 -> a
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.squareup.okhttp.internal.DiskLruCache$2 -> com.squareup.okhttp.internal.b:
    void write(int) -> write
com.squareup.okhttp.internal.DiskLruCache$Editor -> com.squareup.okhttp.internal.DiskLruCache$Editor:
    com.squareup.okhttp.internal.DiskLruCache$Entry entry -> b
    boolean[] written -> c
    boolean hasErrors -> d
    boolean committed -> e
    com.squareup.okhttp.internal.DiskLruCache this$0 -> a
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    void access$0$5ad589a1(com.squareup.okhttp.internal.DiskLruCache$Editor) -> a
    com.squareup.okhttp.internal.DiskLruCache$Entry access$2(com.squareup.okhttp.internal.DiskLruCache$Editor) -> b
    boolean[] access$3(com.squareup.okhttp.internal.DiskLruCache$Editor) -> c
com.squareup.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream -> com.squareup.okhttp.internal.c:
    com.squareup.okhttp.internal.DiskLruCache$Editor this$1 -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.squareup.okhttp.internal.DiskLruCache$Entry -> com.squareup.okhttp.internal.d:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    com.squareup.okhttp.internal.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    com.squareup.okhttp.internal.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> getLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> a
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$0(com.squareup.okhttp.internal.DiskLruCache$Entry) -> a
    com.squareup.okhttp.internal.DiskLruCache$Editor access$1(com.squareup.okhttp.internal.DiskLruCache$Entry) -> b
    java.lang.String access$2(com.squareup.okhttp.internal.DiskLruCache$Entry) -> c
    void access$4$69466a2a(com.squareup.okhttp.internal.DiskLruCache$Entry) -> d
    void access$5(com.squareup.okhttp.internal.DiskLruCache$Entry,com.squareup.okhttp.internal.DiskLruCache$Editor) -> a
    void access$6(com.squareup.okhttp.internal.DiskLruCache$Entry,java.lang.String[]) -> a
    long[] access$7(com.squareup.okhttp.internal.DiskLruCache$Entry) -> e
    long access$8(com.squareup.okhttp.internal.DiskLruCache$Entry) -> f
    void access$9(com.squareup.okhttp.internal.DiskLruCache$Entry,long) -> a
com.squareup.okhttp.internal.DiskLruCache$Snapshot -> com.squareup.okhttp.internal.DiskLruCache$Snapshot:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.InputStream[] ins -> d
    long[] lengths -> e
    com.squareup.okhttp.internal.DiskLruCache this$0 -> a
    com.squareup.okhttp.internal.DiskLruCache$Editor edit() -> edit
    java.io.InputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
com.squareup.okhttp.internal.Dns -> com.squareup.okhttp.internal.Dns:
    com.squareup.okhttp.internal.Dns DEFAULT -> DEFAULT
    java.net.InetAddress[] getAllByName(java.lang.String) -> getAllByName
com.squareup.okhttp.internal.Dns$1 -> com.squareup.okhttp.internal.e:
    java.net.InetAddress[] getAllByName(java.lang.String) -> getAllByName
com.squareup.okhttp.internal.FaultRecoveringOutputStream -> com.squareup.okhttp.internal.FaultRecoveringOutputStream:
    int maxReplayBufferLength -> a
    java.io.ByteArrayOutputStream replayBuffer -> b
    java.io.OutputStream out -> c
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    boolean recover(java.io.IOException) -> a
    boolean isRecoverable() -> isRecoverable
    void replaceStream(java.io.OutputStream) -> replaceStream
    java.io.OutputStream replacementStream(java.io.IOException) -> replacementStream
com.squareup.okhttp.internal.NamedRunnable -> com.squareup.okhttp.internal.NamedRunnable:
    java.lang.String name -> a
    void run() -> run
    void execute() -> execute
com.squareup.okhttp.internal.Platform -> com.squareup.okhttp.internal.Platform:
    com.squareup.okhttp.internal.Platform PLATFORM -> a
    java.lang.reflect.Constructor deflaterConstructor -> b
    com.squareup.okhttp.internal.Platform get() -> get
    void logW(java.lang.String) -> logW
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
    java.net.URI toUriLenient(java.net.URL) -> toUriLenient
    void enableTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String) -> enableTlsExtensions
    void supportTlsIntolerantServer(javax.net.ssl.SSLSocket) -> supportTlsIntolerantServer
    byte[] getNpnSelectedProtocol(javax.net.ssl.SSLSocket) -> getNpnSelectedProtocol
    void setNpnProtocols(javax.net.ssl.SSLSocket,byte[]) -> setNpnProtocols
    java.io.OutputStream newDeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater,boolean) -> newDeflaterOutputStream
    int getMtu(java.net.Socket) -> getMtu
    com.squareup.okhttp.internal.Platform findPlatform() -> a
com.squareup.okhttp.internal.Platform$Android23 -> com.squareup.okhttp.internal.f:
    java.lang.Class openSslSocketClass -> a
    java.lang.reflect.Method setUseSessionTickets -> b
    java.lang.reflect.Method setHostname -> c
    void enableTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String) -> enableTlsExtensions
com.squareup.okhttp.internal.Platform$Android41 -> com.squareup.okhttp.internal.g:
    java.lang.reflect.Method setNpnProtocols -> b
    java.lang.reflect.Method getNpnSelectedProtocol -> c
    void setNpnProtocols(javax.net.ssl.SSLSocket,byte[]) -> setNpnProtocols
    byte[] getNpnSelectedProtocol(javax.net.ssl.SSLSocket) -> getNpnSelectedProtocol
com.squareup.okhttp.internal.Platform$Java5 -> com.squareup.okhttp.internal.h:
    java.lang.reflect.Method getMtu -> a
    int getMtu(java.net.Socket) -> getMtu
com.squareup.okhttp.internal.Platform$JdkWithJettyNpnPlatform -> com.squareup.okhttp.internal.i:
    java.lang.reflect.Method getMethod -> a
    java.lang.reflect.Method putMethod -> b
    java.lang.Class clientProviderClass -> c
    java.lang.Class serverProviderClass -> d
    void setNpnProtocols(javax.net.ssl.SSLSocket,byte[]) -> setNpnProtocols
    byte[] getNpnSelectedProtocol(javax.net.ssl.SSLSocket) -> getNpnSelectedProtocol
com.squareup.okhttp.internal.Platform$JettyNpnProvider -> com.squareup.okhttp.internal.j:
    java.util.List protocols -> a
    boolean unsupported -> b
    java.lang.String selected -> c
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    boolean access$0(com.squareup.okhttp.internal.Platform$JettyNpnProvider) -> a
    java.lang.String access$1(com.squareup.okhttp.internal.Platform$JettyNpnProvider) -> b
com.squareup.okhttp.internal.StrictLineReader -> com.squareup.okhttp.internal.StrictLineReader:
    java.io.InputStream in -> a
    java.nio.charset.Charset charset -> b
    byte[] buf -> c
    int pos -> d
    int end -> e
    void close() -> close
    java.lang.String readLine() -> readLine
    int readInt() -> readInt
    void fillBuf() -> a
    java.nio.charset.Charset access$0(com.squareup.okhttp.internal.StrictLineReader) -> a
com.squareup.okhttp.internal.StrictLineReader$1 -> com.squareup.okhttp.internal.k:
    com.squareup.okhttp.internal.StrictLineReader this$0 -> a
    java.lang.String toString() -> toString
com.squareup.okhttp.internal.Util -> com.squareup.okhttp.internal.Util:
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    java.lang.String[] EMPTY_STRING_ARRAY -> EMPTY_STRING_ARRAY
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.util.concurrent.atomic.AtomicReference skipBuffer -> a
    int getEffectivePort(java.net.URI) -> getEffectivePort
    int getEffectivePort(java.net.URL) -> getEffectivePort
    int getEffectivePort(java.lang.String,int) -> a
    int getDefaultPort(java.lang.String) -> getDefaultPort
    void checkOffsetAndCount(int,int,int) -> checkOffsetAndCount
    void pokeInt(byte[],int,int,java.nio.ByteOrder) -> pokeInt
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeQuietly(java.net.Socket) -> closeQuietly
    void closeAll(java.io.Closeable,java.io.Closeable) -> closeAll
    void deleteContents(java.io.File) -> deleteContents
    int readSingleByte(java.io.InputStream) -> readSingleByte
    void writeSingleByte(java.io.OutputStream,int) -> writeSingleByte
    void readFully(java.io.InputStream,byte[]) -> readFully
    void readFully(java.io.InputStream,byte[],int,int) -> readFully
    java.lang.String readFully(java.io.Reader) -> readFully
    void skipAll(java.io.InputStream) -> skipAll
    long skipByReading(java.io.InputStream,long) -> skipByReading
    int copy(java.io.InputStream,java.io.OutputStream) -> copy
    java.lang.String readAsciiLine(java.io.InputStream) -> readAsciiLine
com.squareup.okhttp.internal.http.AbstractHttpInputStream -> com.squareup.okhttp.internal.http.a:
    java.io.InputStream in -> a
    com.squareup.okhttp.internal.http.HttpEngine httpEngine -> b
    java.net.CacheRequest cacheRequest -> d
    java.io.OutputStream cacheBody -> e
    boolean closed -> c
    int read() -> read
    void checkNotClosed() -> checkNotClosed
    void cacheWrite(byte[],int,int) -> cacheWrite
    void endOfInput(boolean) -> endOfInput
    void unexpectedEndOfInput() -> unexpectedEndOfInput
com.squareup.okhttp.internal.http.HeaderParser -> com.squareup.okhttp.internal.http.HeaderParser:
    void parseCacheControl(java.lang.String,com.squareup.okhttp.internal.http.HeaderParser$CacheControlHandler) -> parseCacheControl
    int skipUntil(java.lang.String,int,java.lang.String) -> skipUntil
    int skipWhitespace(java.lang.String,int) -> skipWhitespace
    int parseSeconds(java.lang.String) -> parseSeconds
com.squareup.okhttp.internal.http.HeaderParser$CacheControlHandler -> com.squareup.okhttp.internal.http.HeaderParser$CacheControlHandler:
    void handle(java.lang.String,java.lang.String) -> handle
com.squareup.okhttp.internal.http.HttpAuthenticator -> com.squareup.okhttp.internal.http.HttpAuthenticator:
    boolean processAuthHeader(int,com.squareup.okhttp.internal.http.RawHeaders,com.squareup.okhttp.internal.http.RawHeaders,java.net.Proxy,java.net.URL) -> processAuthHeader
    java.lang.String getCredentials(com.squareup.okhttp.internal.http.RawHeaders,java.lang.String,java.net.Proxy,java.net.URL) -> a
    java.net.InetAddress getConnectToInetAddress(java.net.Proxy,java.net.URL) -> a
com.squareup.okhttp.internal.http.HttpAuthenticator$Challenge -> com.squareup.okhttp.internal.http.b:
    java.lang.String scheme -> a
    java.lang.String realm -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.squareup.okhttp.internal.http.HttpDate -> com.squareup.okhttp.internal.http.c:
    java.lang.ThreadLocal STANDARD_DATE_FORMAT -> a
    java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMATS -> b
    java.util.Date parse(java.lang.String) -> parse
    java.lang.String format(java.util.Date) -> format
com.squareup.okhttp.internal.http.HttpDate$1 -> com.squareup.okhttp.internal.http.d:
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.squareup.okhttp.internal.http.HttpEngine -> com.squareup.okhttp.internal.http.HttpEngine:
    java.net.CacheResponse GATEWAY_TIMEOUT_RESPONSE -> e
    int HTTP_CONTINUE -> HTTP_CONTINUE
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl policy -> policy
    java.lang.String method -> method
    com.squareup.okhttp.ResponseSource responseSource -> f
    com.squareup.okhttp.Connection connection -> connection
    com.squareup.okhttp.internal.http.RouteSelector routeSelector -> routeSelector
    java.io.OutputStream requestBodyOut -> g
    com.squareup.okhttp.internal.http.Transport transport -> h
    java.io.InputStream responseTransferIn -> i
    java.io.InputStream responseBodyIn -> j
    java.net.CacheResponse cacheResponse -> k
    java.net.CacheRequest cacheRequest -> l
    long sentRequestMillis -> a
    boolean transparentGzip -> m
    java.net.URI uri -> b
    com.squareup.okhttp.internal.http.RequestHeaders requestHeaders -> c
    com.squareup.okhttp.internal.http.ResponseHeaders responseHeaders -> d
    com.squareup.okhttp.internal.http.ResponseHeaders cachedResponseHeaders -> n
    java.io.InputStream cachedResponseBody -> o
    boolean automaticallyReleaseConnectionToPool -> p
    boolean connectionReleased -> q
    java.net.URI getUri() -> getUri
    void sendRequest() -> sendRequest
    void connect() -> connect
    void connected(com.squareup.okhttp.Connection) -> connected
    void writingRequestHeaders() -> writingRequestHeaders
    void setResponse(com.squareup.okhttp.internal.http.ResponseHeaders,java.io.InputStream) -> a
    boolean hasRequestBody() -> a
    java.io.OutputStream getRequestBody() -> getRequestBody
    boolean hasResponse() -> hasResponse
    com.squareup.okhttp.internal.http.RequestHeaders getRequestHeaders() -> getRequestHeaders
    com.squareup.okhttp.internal.http.ResponseHeaders getResponseHeaders() -> getResponseHeaders
    int getResponseCode() -> getResponseCode
    java.io.InputStream getResponseBody() -> getResponseBody
    java.net.CacheResponse getCacheResponse() -> getCacheResponse
    com.squareup.okhttp.Connection getConnection() -> getConnection
    boolean acceptCacheResponseType(java.net.CacheResponse) -> acceptCacheResponseType
    void automaticallyReleaseConnectionToPool() -> automaticallyReleaseConnectionToPool
    void release(boolean) -> release
    void initContentStream(java.io.InputStream) -> a
    boolean hasResponseBody() -> hasResponseBody
    java.lang.String getRequestLine() -> b
    java.lang.String requestPath(java.net.URL) -> requestPath
    boolean includeAuthorityInRequestLine() -> includeAuthorityInRequestLine
    java.lang.String getDefaultUserAgent() -> getDefaultUserAgent
    java.lang.String getOriginAddress(java.net.URL) -> getOriginAddress
    void readResponse() -> readResponse
    com.squareup.okhttp.TunnelRequest getTunnelConfig() -> getTunnelConfig
    void receiveHeaders(com.squareup.okhttp.internal.http.RawHeaders) -> receiveHeaders
com.squareup.okhttp.internal.http.HttpEngine$1 -> com.squareup.okhttp.internal.http.e:
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getBody() -> getBody
com.squareup.okhttp.internal.http.HttpResponseCache -> com.squareup.okhttp.internal.http.HttpResponseCache:
    char[] DIGITS -> a
    com.squareup.okhttp.internal.DiskLruCache cache -> b
    int writeSuccessCount -> c
    int writeAbortCount -> d
    int networkCount -> e
    int hitCount -> f
    int requestCount -> g
    int[] $SWITCH_TABLE$com$squareup$okhttp$ResponseSource -> h
    java.lang.String uriToKey(java.net.URI) -> a
    java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map) -> get
    java.net.CacheRequest put(java.net.URI,java.net.URLConnection) -> put
    void update(java.net.CacheResponse,java.net.HttpURLConnection) -> update
    void abortQuietly(com.squareup.okhttp.internal.DiskLruCache$Editor) -> a
    com.squareup.okhttp.internal.http.HttpEngine getHttpEngine(java.net.URLConnection) -> a
    com.squareup.okhttp.internal.DiskLruCache getCache() -> getCache
    int getWriteAbortCount() -> getWriteAbortCount
    int getWriteSuccessCount() -> getWriteSuccessCount
    void trackResponse(com.squareup.okhttp.ResponseSource) -> trackResponse
    void trackConditionalCacheHit() -> trackConditionalCacheHit
    int getNetworkCount() -> getNetworkCount
    int getHitCount() -> getHitCount
    int getRequestCount() -> getRequestCount
    int access$0(com.squareup.okhttp.internal.http.HttpResponseCache) -> a
    void access$1(com.squareup.okhttp.internal.http.HttpResponseCache,int) -> a
    int access$2(com.squareup.okhttp.internal.http.HttpResponseCache) -> b
    void access$3(com.squareup.okhttp.internal.http.HttpResponseCache,int) -> b
    java.io.InputStream access$4(com.squareup.okhttp.internal.DiskLruCache$Snapshot) -> a
    int[] $SWITCH_TABLE$com$squareup$okhttp$ResponseSource() -> a
com.squareup.okhttp.internal.http.HttpResponseCache$1 -> com.squareup.okhttp.internal.http.f:
    com.squareup.okhttp.internal.DiskLruCache$Snapshot val$snapshot -> a
    void close() -> close
com.squareup.okhttp.internal.http.HttpResponseCache$CacheRequestImpl -> com.squareup.okhttp.internal.http.g:
    com.squareup.okhttp.internal.DiskLruCache$Editor editor -> b
    java.io.OutputStream cacheOut -> c
    boolean done -> d
    java.io.OutputStream body -> e
    com.squareup.okhttp.internal.http.HttpResponseCache this$0 -> a
    void abort() -> abort
    java.io.OutputStream getBody() -> getBody
    boolean access$0(com.squareup.okhttp.internal.http.HttpResponseCache$CacheRequestImpl) -> a
    void access$1$6dab4961(com.squareup.okhttp.internal.http.HttpResponseCache$CacheRequestImpl) -> b
    com.squareup.okhttp.internal.http.HttpResponseCache access$2(com.squareup.okhttp.internal.http.HttpResponseCache$CacheRequestImpl) -> c
com.squareup.okhttp.internal.http.HttpResponseCache$CacheRequestImpl$1 -> com.squareup.okhttp.internal.http.h:
    com.squareup.okhttp.internal.http.HttpResponseCache$CacheRequestImpl this$1 -> a
    com.squareup.okhttp.internal.DiskLruCache$Editor val$editor -> b
    void close() -> close
    void write(byte[],int,int) -> write
com.squareup.okhttp.internal.http.HttpResponseCache$Entry -> com.squareup.okhttp.internal.http.i:
    java.lang.String uri -> a
    com.squareup.okhttp.internal.http.RawHeaders varyHeaders -> b
    java.lang.String requestMethod -> c
    com.squareup.okhttp.internal.http.RawHeaders responseHeaders -> d
    java.lang.String cipherSuite -> e
    java.security.cert.Certificate[] peerCertificates -> f
    java.security.cert.Certificate[] localCertificates -> g
    void writeTo(com.squareup.okhttp.internal.DiskLruCache$Editor) -> writeTo
    boolean isHttps() -> a
    java.security.cert.Certificate[] readCertArray(com.squareup.okhttp.internal.StrictLineReader) -> a
    void writeCertArray(java.io.Writer,java.security.cert.Certificate[]) -> a
    boolean matches(java.net.URI,java.lang.String,java.util.Map) -> matches
    com.squareup.okhttp.internal.http.RawHeaders access$0(com.squareup.okhttp.internal.http.HttpResponseCache$Entry) -> a
    java.lang.String access$1(com.squareup.okhttp.internal.http.HttpResponseCache$Entry) -> b
    java.security.cert.Certificate[] access$2(com.squareup.okhttp.internal.http.HttpResponseCache$Entry) -> c
    java.security.cert.Certificate[] access$3(com.squareup.okhttp.internal.http.HttpResponseCache$Entry) -> d
    boolean access$4(com.squareup.okhttp.internal.http.HttpResponseCache$Entry) -> e
com.squareup.okhttp.internal.http.HttpResponseCache$EntryCacheResponse -> com.squareup.okhttp.internal.http.j:
    com.squareup.okhttp.internal.http.HttpResponseCache$Entry entry -> a
    com.squareup.okhttp.internal.DiskLruCache$Snapshot snapshot -> b
    java.io.InputStream in -> c
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getBody() -> getBody
    com.squareup.okhttp.internal.DiskLruCache$Snapshot access$0(com.squareup.okhttp.internal.http.HttpResponseCache$EntryCacheResponse) -> a
com.squareup.okhttp.internal.http.HttpResponseCache$EntrySecureCacheResponse -> com.squareup.okhttp.internal.http.k:
    com.squareup.okhttp.internal.http.HttpResponseCache$Entry entry -> a
    com.squareup.okhttp.internal.DiskLruCache$Snapshot snapshot -> b
    java.io.InputStream in -> c
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getBody() -> getBody
    java.lang.String getCipherSuite() -> getCipherSuite
    java.util.List getServerCertificateChain() -> getServerCertificateChain
    java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    java.util.List getLocalCertificateChain() -> getLocalCertificateChain
    java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    com.squareup.okhttp.internal.DiskLruCache$Snapshot access$0(com.squareup.okhttp.internal.http.HttpResponseCache$EntrySecureCacheResponse) -> a
com.squareup.okhttp.internal.http.HttpTransport -> com.squareup.okhttp.internal.http.HttpTransport:
    int DEFAULT_CHUNK_LENGTH -> DEFAULT_CHUNK_LENGTH
    com.squareup.okhttp.internal.http.HttpEngine httpEngine -> a
    java.io.InputStream socketIn -> b
    java.io.OutputStream socketOut -> c
    java.io.OutputStream requestOut -> d
    java.io.OutputStream createRequestBody() -> createRequestBody
    void flushRequest() -> flushRequest
    void writeRequestBody(com.squareup.okhttp.internal.http.RetryableOutputStream) -> writeRequestBody
    void writeRequestHeaders() -> writeRequestHeaders
    com.squareup.okhttp.internal.http.ResponseHeaders readResponseHeaders() -> readResponseHeaders
    boolean makeReusable(boolean,java.io.OutputStream,java.io.InputStream) -> makeReusable
    boolean discardStream(com.squareup.okhttp.internal.http.HttpEngine,java.io.InputStream) -> b
    java.io.InputStream getTransferStream(java.net.CacheRequest) -> getTransferStream
    boolean access$0(com.squareup.okhttp.internal.http.HttpEngine,java.io.InputStream) -> a
    com.squareup.okhttp.internal.http.HttpEngine access$1(com.squareup.okhttp.internal.http.HttpTransport) -> a
    java.io.InputStream access$2(com.squareup.okhttp.internal.http.HttpTransport) -> b
com.squareup.okhttp.internal.http.HttpTransport$ChunkedInputStream -> com.squareup.okhttp.internal.http.l:
    com.squareup.okhttp.internal.http.HttpTransport transport -> d
    int bytesRemainingInChunk -> e
    boolean hasMoreChunks -> f
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
com.squareup.okhttp.internal.http.HttpTransport$ChunkedOutputStream -> com.squareup.okhttp.internal.http.m:
    byte[] CRLF -> a
    byte[] HEX_DIGITS -> b
    byte[] FINAL_CHUNK -> c
    byte[] hex -> d
    java.io.OutputStream socketOut -> e
    int maxChunkLength -> f
    java.io.ByteArrayOutputStream bufferedChunk -> g
    void write(byte[],int,int) -> write
    void writeHex(int) -> a
    void flush() -> flush
    void close() -> close
    void writeBufferedChunkToSocket() -> a
com.squareup.okhttp.internal.http.HttpTransport$FixedLengthInputStream -> com.squareup.okhttp.internal.http.n:
    int bytesRemaining -> d
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
com.squareup.okhttp.internal.http.HttpTransport$FixedLengthOutputStream -> com.squareup.okhttp.internal.http.o:
    java.io.OutputStream socketOut -> a
    int bytesRemaining -> b
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.squareup.okhttp.internal.http.HttpURLConnectionImpl -> com.squareup.okhttp.internal.http.HttpURLConnectionImpl:
    boolean followProtocolRedirects -> i
    java.net.Proxy requestedProxy -> a
    java.net.ProxySelector proxySelector -> b
    java.net.CookieHandler cookieHandler -> c
    com.squareup.okhttp.internal.http.OkResponseCache responseCache -> d
    com.squareup.okhttp.ConnectionPool connectionPool -> e
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> f
    javax.net.ssl.HostnameVerifier hostnameVerifier -> g
    java.util.Set failedRoutes -> h
    com.squareup.okhttp.internal.http.RawHeaders rawRequestHeaders -> j
    int redirectionCount -> k
    com.squareup.okhttp.internal.FaultRecoveringOutputStream faultRecoveringRequestBody -> l
    java.io.IOException httpEngineFailure -> httpEngineFailure
    com.squareup.okhttp.internal.http.HttpEngine httpEngine -> httpEngine
    java.util.Set getFailedRoutes() -> a
    void connect() -> connect
    void disconnect() -> disconnect
    java.io.InputStream getErrorStream() -> getErrorStream
    java.lang.String getHeaderField(int) -> getHeaderField
    java.lang.String getHeaderField(java.lang.String) -> getHeaderField
    java.lang.String getHeaderFieldKey(int) -> getHeaderFieldKey
    java.util.Map getHeaderFields() -> getHeaderFields
    java.util.Map getRequestProperties() -> getRequestProperties
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.security.Permission getPermission() -> getPermission
    java.lang.String getRequestProperty(java.lang.String) -> getRequestProperty
    void initHttpEngine() -> d
    java.net.HttpURLConnection getHttpConnectionToCache() -> getHttpConnectionToCache
    com.squareup.okhttp.internal.http.HttpEngine newHttpEngine(java.lang.String,com.squareup.okhttp.internal.http.RawHeaders,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableOutputStream) -> a
    com.squareup.okhttp.internal.http.HttpEngine getResponse() -> e
    boolean execute(boolean) -> a
    boolean handleFailure(java.io.IOException) -> a
    com.squareup.okhttp.internal.http.HttpEngine getHttpEngine() -> getHttpEngine
    int getFixedContentLength() -> b
    int getChunkLength() -> c
    boolean usingProxy() -> usingProxy
    java.lang.String getResponseMessage() -> getResponseMessage
    int getResponseCode() -> getResponseCode
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void addRequestProperty(java.lang.String,java.lang.String) -> addRequestProperty
    boolean access$0(com.squareup.okhttp.internal.http.HttpURLConnectionImpl,java.io.IOException) -> a
com.squareup.okhttp.internal.http.HttpURLConnectionImpl$1 -> com.squareup.okhttp.internal.http.p:
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl this$0 -> a
    java.io.OutputStream replacementStream(java.io.IOException) -> replacementStream
com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry -> com.squareup.okhttp.internal.http.q:
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry NONE -> a
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry SAME_CONNECTION -> b
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry DIFFERENT_CONNECTION -> c
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry[] ENUM$VALUES -> d
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry[] values() -> values
    com.squareup.okhttp.internal.http.HttpURLConnectionImpl$Retry valueOf(java.lang.String) -> valueOf
com.squareup.okhttp.internal.http.HttpsURLConnectionImpl -> com.squareup.okhttp.internal.http.HttpsURLConnectionImpl:
    com.squareup.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate -> a
    java.lang.String getCipherSuite() -> getCipherSuite
    java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    java.security.cert.Certificate[] getServerCertificates() -> getServerCertificates
    java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    com.squareup.okhttp.internal.http.HttpEngine getHttpEngine() -> getHttpEngine
    javax.net.ssl.SSLSocket getSslSocket() -> a
    void disconnect() -> disconnect
    java.io.InputStream getErrorStream() -> getErrorStream
    java.lang.String getRequestMethod() -> getRequestMethod
    int getResponseCode() -> getResponseCode
    java.lang.String getResponseMessage() -> getResponseMessage
    void setRequestMethod(java.lang.String) -> setRequestMethod
    boolean usingProxy() -> usingProxy
    boolean getInstanceFollowRedirects() -> getInstanceFollowRedirects
    void setInstanceFollowRedirects(boolean) -> setInstanceFollowRedirects
    void connect() -> connect
    boolean getAllowUserInteraction() -> getAllowUserInteraction
    java.lang.Object getContent() -> getContent
    java.lang.Object getContent(java.lang.Class[]) -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    int getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    long getDate() -> getDate
    boolean getDefaultUseCaches() -> getDefaultUseCaches
    boolean getDoInput() -> getDoInput
    boolean getDoOutput() -> getDoOutput
    long getExpiration() -> getExpiration
    java.lang.String getHeaderField(int) -> getHeaderField
    java.util.Map getHeaderFields() -> getHeaderFields
    java.util.Map getRequestProperties() -> getRequestProperties
    void addRequestProperty(java.lang.String,java.lang.String) -> addRequestProperty
    java.lang.String getHeaderField(java.lang.String) -> getHeaderField
    long getHeaderFieldDate(java.lang.String,long) -> getHeaderFieldDate
    int getHeaderFieldInt(java.lang.String,int) -> getHeaderFieldInt
    java.lang.String getHeaderFieldKey(int) -> getHeaderFieldKey
    long getIfModifiedSince() -> getIfModifiedSince
    java.io.InputStream getInputStream() -> getInputStream
    long getLastModified() -> getLastModified
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.security.Permission getPermission() -> getPermission
    java.lang.String getRequestProperty(java.lang.String) -> getRequestProperty
    java.net.URL getURL() -> getURL
    boolean getUseCaches() -> getUseCaches
    void setAllowUserInteraction(boolean) -> setAllowUserInteraction
    void setDefaultUseCaches(boolean) -> setDefaultUseCaches
    void setDoInput(boolean) -> setDoInput
    void setDoOutput(boolean) -> setDoOutput
    void setIfModifiedSince(long) -> setIfModifiedSince
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void setUseCaches(boolean) -> setUseCaches
    void setConnectTimeout(int) -> setConnectTimeout
    int getConnectTimeout() -> getConnectTimeout
    void setReadTimeout(int) -> setReadTimeout
    int getReadTimeout() -> getReadTimeout
    java.lang.String toString() -> toString
    void setFixedLengthStreamingMode(int) -> setFixedLengthStreamingMode
    void setChunkedStreamingMode(int) -> setChunkedStreamingMode
    void setHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setHostnameVerifier
    javax.net.ssl.HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory) -> setSSLSocketFactory
    javax.net.ssl.SSLSocketFactory getSSLSocketFactory() -> getSSLSocketFactory
com.squareup.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate -> com.squareup.okhttp.internal.http.r:
    com.squareup.okhttp.internal.http.HttpsURLConnectionImpl this$0 -> i
    java.net.HttpURLConnection getHttpConnectionToCache() -> getHttpConnectionToCache
    java.net.SecureCacheResponse getSecureCacheResponse() -> getSecureCacheResponse
com.squareup.okhttp.internal.http.HttpsURLConnectionImpl$HttpsEngine -> com.squareup.okhttp.internal.http.HttpsURLConnectionImpl$HttpsEngine:
    javax.net.ssl.SSLSocket sslSocket -> e
    void connected(com.squareup.okhttp.Connection) -> connected
    boolean acceptCacheResponseType(java.net.CacheResponse) -> acceptCacheResponseType
    boolean includeAuthorityInRequestLine() -> includeAuthorityInRequestLine
    com.squareup.okhttp.TunnelRequest getTunnelConfig() -> getTunnelConfig
    javax.net.ssl.SSLSocket access$0(com.squareup.okhttp.internal.http.HttpsURLConnectionImpl$HttpsEngine) -> a
com.squareup.okhttp.internal.http.OkResponseCache -> com.squareup.okhttp.internal.http.OkResponseCache:
    java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map) -> get
    java.net.CacheRequest put(java.net.URI,java.net.URLConnection) -> put
    void update(java.net.CacheResponse,java.net.HttpURLConnection) -> update
    void trackConditionalCacheHit() -> trackConditionalCacheHit
    void trackResponse(com.squareup.okhttp.ResponseSource) -> trackResponse
com.squareup.okhttp.internal.http.OkResponseCacheAdapter -> com.squareup.okhttp.internal.http.OkResponseCacheAdapter:
    java.net.ResponseCache responseCache -> a
    java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map) -> get
    java.net.CacheRequest put(java.net.URI,java.net.URLConnection) -> put
    void update(java.net.CacheResponse,java.net.HttpURLConnection) -> update
    void trackConditionalCacheHit() -> trackConditionalCacheHit
    void trackResponse(com.squareup.okhttp.ResponseSource) -> trackResponse
com.squareup.okhttp.internal.http.RawHeaders -> com.squareup.okhttp.internal.http.RawHeaders:
    java.util.Comparator FIELD_NAME_COMPARATOR -> a
    java.util.List namesAndValues -> b
    java.lang.String requestLine -> c
    java.lang.String statusLine -> d
    int httpMinorVersion -> e
    int responseCode -> f
    java.lang.String responseMessage -> g
    void setRequestLine(java.lang.String) -> setRequestLine
    void setStatusLine(java.lang.String) -> setStatusLine
    void computeResponseStatusLineFromSpdyHeaders() -> computeResponseStatusLineFromSpdyHeaders
    void addSpdyRequestHeaders(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addSpdyRequestHeaders
    java.lang.String getStatusLine() -> getStatusLine
    int getHttpMinorVersion() -> getHttpMinorVersion
    int getResponseCode() -> getResponseCode
    java.lang.String getResponseMessage() -> getResponseMessage
    void addLine(java.lang.String) -> addLine
    void add(java.lang.String,java.lang.String) -> add
    void addLenient(java.lang.String,java.lang.String) -> a
    void removeAll(java.lang.String) -> removeAll
    void addAll(java.lang.String,java.util.List) -> addAll
    void set(java.lang.String,java.lang.String) -> set
    int length() -> length
    java.lang.String getFieldName(int) -> getFieldName
    java.lang.String getValue(int) -> getValue
    java.lang.String get(java.lang.String) -> get
    com.squareup.okhttp.internal.http.RawHeaders getAll(java.util.Set) -> getAll
    byte[] toBytes() -> toBytes
    com.squareup.okhttp.internal.http.RawHeaders fromBytes(java.io.InputStream) -> fromBytes
    void readHeaders(java.io.InputStream,com.squareup.okhttp.internal.http.RawHeaders) -> readHeaders
    java.util.Map toMultimap(boolean) -> toMultimap
    com.squareup.okhttp.internal.http.RawHeaders fromMultimap(java.util.Map,boolean) -> fromMultimap
    java.util.List toNameValueBlock() -> toNameValueBlock
    com.squareup.okhttp.internal.http.RawHeaders fromNameValueBlock(java.util.List) -> fromNameValueBlock
com.squareup.okhttp.internal.http.RawHeaders$1 -> com.squareup.okhttp.internal.http.s:
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.okhttp.internal.http.RequestHeaders -> com.squareup.okhttp.internal.http.RequestHeaders:
    java.net.URI uri -> a
    com.squareup.okhttp.internal.http.RawHeaders headers -> b
    boolean noCache -> c
    int maxAgeSeconds -> d
    int maxStaleSeconds -> e
    int minFreshSeconds -> f
    boolean onlyIfCached -> g
    boolean hasAuthorization -> h
    int contentLength -> i
    java.lang.String transferEncoding -> j
    java.lang.String userAgent -> k
    java.lang.String host -> l
    java.lang.String connection -> m
    java.lang.String acceptEncoding -> n
    java.lang.String contentType -> o
    java.lang.String ifModifiedSince -> p
    java.lang.String ifNoneMatch -> q
    java.lang.String proxyAuthorization -> r
    boolean isChunked() -> isChunked
    boolean hasConnectionClose() -> hasConnectionClose
    java.net.URI getUri() -> getUri
    com.squareup.okhttp.internal.http.RawHeaders getHeaders() -> getHeaders
    boolean isNoCache() -> isNoCache
    int getMaxAgeSeconds() -> getMaxAgeSeconds
    int getMaxStaleSeconds() -> getMaxStaleSeconds
    int getMinFreshSeconds() -> getMinFreshSeconds
    boolean isOnlyIfCached() -> isOnlyIfCached
    boolean hasAuthorization() -> hasAuthorization
    int getContentLength() -> getContentLength
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getUserAgent() -> getUserAgent
    java.lang.String getHost() -> getHost
    java.lang.String getConnection() -> getConnection
    java.lang.String getAcceptEncoding() -> getAcceptEncoding
    java.lang.String getContentType() -> getContentType
    java.lang.String getIfModifiedSince() -> getIfModifiedSince
    java.lang.String getIfNoneMatch() -> getIfNoneMatch
    java.lang.String getProxyAuthorization() -> getProxyAuthorization
    void setChunked() -> setChunked
    void setContentLength(int) -> setContentLength
    void setUserAgent(java.lang.String) -> setUserAgent
    void setHost(java.lang.String) -> setHost
    void setConnection(java.lang.String) -> setConnection
    void setAcceptEncoding(java.lang.String) -> setAcceptEncoding
    void setContentType(java.lang.String) -> setContentType
    void setIfModifiedSince(java.util.Date) -> setIfModifiedSince
    void setIfNoneMatch(java.lang.String) -> setIfNoneMatch
    boolean hasConditions() -> hasConditions
    void addCookies(java.util.Map) -> addCookies
    void access$0$1fe3fd22(com.squareup.okhttp.internal.http.RequestHeaders) -> a
    void access$1(com.squareup.okhttp.internal.http.RequestHeaders,int) -> a
    void access$2(com.squareup.okhttp.internal.http.RequestHeaders,int) -> b
    void access$3(com.squareup.okhttp.internal.http.RequestHeaders,int) -> c
    void access$4$1fe3fd22(com.squareup.okhttp.internal.http.RequestHeaders) -> b
com.squareup.okhttp.internal.http.RequestHeaders$1 -> com.squareup.okhttp.internal.http.t:
    com.squareup.okhttp.internal.http.RequestHeaders this$0 -> a
    void handle(java.lang.String,java.lang.String) -> handle
com.squareup.okhttp.internal.http.ResponseHeaders -> com.squareup.okhttp.internal.http.ResponseHeaders:
    java.net.URI uri -> a
    com.squareup.okhttp.internal.http.RawHeaders headers -> b
    java.util.Date servedDate -> c
    java.util.Date lastModified -> d
    java.util.Date expires -> e
    long sentRequestMillis -> f
    long receivedResponseMillis -> g
    boolean noCache -> h
    boolean noStore -> i
    int maxAgeSeconds -> j
    int sMaxAgeSeconds -> k
    boolean isPublic -> l
    boolean mustRevalidate -> m
    java.lang.String etag -> n
    int ageSeconds -> o
    java.util.Set varyFields -> p
    java.lang.String contentEncoding -> q
    java.lang.String transferEncoding -> r
    int contentLength -> s
    java.lang.String connection -> t
    boolean isContentEncodingGzip() -> isContentEncodingGzip
    void stripContentEncoding() -> stripContentEncoding
    void stripContentLength() -> stripContentLength
    boolean isChunked() -> isChunked
    boolean hasConnectionClose() -> hasConnectionClose
    java.net.URI getUri() -> getUri
    com.squareup.okhttp.internal.http.RawHeaders getHeaders() -> getHeaders
    java.util.Date getServedDate() -> getServedDate
    java.util.Date getLastModified() -> getLastModified
    java.util.Date getExpires() -> getExpires
    boolean isNoCache() -> isNoCache
    boolean isNoStore() -> isNoStore
    int getMaxAgeSeconds() -> getMaxAgeSeconds
    int getSMaxAgeSeconds() -> getSMaxAgeSeconds
    boolean isPublic() -> isPublic
    boolean isMustRevalidate() -> isMustRevalidate
    java.lang.String getEtag() -> getEtag
    java.util.Set getVaryFields() -> getVaryFields
    java.lang.String getContentEncoding() -> getContentEncoding
    int getContentLength() -> getContentLength
    java.lang.String getConnection() -> getConnection
    void setLocalTimestamps(long,long) -> setLocalTimestamps
    void setResponseSource(com.squareup.okhttp.ResponseSource) -> setResponseSource
    boolean isCacheable(com.squareup.okhttp.internal.http.RequestHeaders) -> isCacheable
    boolean hasVaryAll() -> hasVaryAll
    boolean varyMatches(java.util.Map,java.util.Map) -> varyMatches
    com.squareup.okhttp.ResponseSource chooseResponseSource(long,com.squareup.okhttp.internal.http.RequestHeaders) -> chooseResponseSource
    boolean validate(com.squareup.okhttp.internal.http.ResponseHeaders) -> validate
    com.squareup.okhttp.internal.http.ResponseHeaders combine(com.squareup.okhttp.internal.http.ResponseHeaders) -> combine
    boolean isEndToEnd(java.lang.String) -> a
    void access$0$7916656a(com.squareup.okhttp.internal.http.ResponseHeaders) -> a
    void access$1$7916656a(com.squareup.okhttp.internal.http.ResponseHeaders) -> b
    void access$2(com.squareup.okhttp.internal.http.ResponseHeaders,int) -> a
    void access$3(com.squareup.okhttp.internal.http.ResponseHeaders,int) -> b
    void access$4$7916656a(com.squareup.okhttp.internal.http.ResponseHeaders) -> c
    void access$5$7916656a(com.squareup.okhttp.internal.http.ResponseHeaders) -> d
com.squareup.okhttp.internal.http.ResponseHeaders$1 -> com.squareup.okhttp.internal.http.u:
    com.squareup.okhttp.internal.http.ResponseHeaders this$0 -> a
    void handle(java.lang.String,java.lang.String) -> handle
com.squareup.okhttp.internal.http.RetryableOutputStream -> com.squareup.okhttp.internal.http.v:
    int limit -> a
    java.io.ByteArrayOutputStream content -> b
    void close() -> close
    void write(byte[],int,int) -> write
    int contentLength() -> contentLength
    void writeToSocket(java.io.OutputStream) -> writeToSocket
com.squareup.okhttp.internal.http.RouteSelector -> com.squareup.okhttp.internal.http.RouteSelector:
    com.squareup.okhttp.Address address -> a
    java.net.URI uri -> b
    java.net.ProxySelector proxySelector -> c
    com.squareup.okhttp.ConnectionPool pool -> d
    com.squareup.okhttp.internal.Dns dns -> e
    java.util.Set failedRoutes -> f
    java.net.Proxy lastProxy -> g
    java.net.InetSocketAddress lastInetSocketAddress -> h
    boolean hasNextProxy -> i
    java.net.Proxy userSpecifiedProxy -> j
    java.util.Iterator proxySelectorProxies -> k
    java.net.InetAddress[] socketAddresses -> l
    int nextSocketAddressIndex -> m
    int socketPort -> n
    int nextTlsMode -> o
    java.util.List postponedRoutes -> p
    boolean hasNext() -> hasNext
    com.squareup.okhttp.Connection next() -> next
    void connectFailed(com.squareup.okhttp.Connection,java.io.IOException) -> connectFailed
    java.net.Proxy nextProxy() -> a
    boolean hasNextInetSocketAddress() -> b
    boolean hasNextTlsMode() -> c
    boolean hasNextPostponed() -> d
com.squareup.okhttp.internal.http.SpdyTransport -> com.squareup.okhttp.internal.http.SpdyTransport:
    com.squareup.okhttp.internal.http.HttpEngine httpEngine -> a
    com.squareup.okhttp.internal.spdy.SpdyConnection spdyConnection -> b
    com.squareup.okhttp.internal.spdy.SpdyStream stream -> c
    java.io.OutputStream createRequestBody() -> createRequestBody
    void writeRequestHeaders() -> writeRequestHeaders
    void writeRequestBody(com.squareup.okhttp.internal.http.RetryableOutputStream) -> writeRequestBody
    void flushRequest() -> flushRequest
    com.squareup.okhttp.internal.http.ResponseHeaders readResponseHeaders() -> readResponseHeaders
    java.io.InputStream getTransferStream(java.net.CacheRequest) -> getTransferStream
    boolean makeReusable(boolean,java.io.OutputStream,java.io.InputStream) -> makeReusable
com.squareup.okhttp.internal.http.Transport -> com.squareup.okhttp.internal.http.w:
    java.io.OutputStream createRequestBody() -> createRequestBody
    void writeRequestHeaders() -> writeRequestHeaders
    void writeRequestBody(com.squareup.okhttp.internal.http.RetryableOutputStream) -> writeRequestBody
    void flushRequest() -> flushRequest
    com.squareup.okhttp.internal.http.ResponseHeaders readResponseHeaders() -> readResponseHeaders
    java.io.InputStream getTransferStream(java.net.CacheRequest) -> getTransferStream
    boolean makeReusable(boolean,java.io.OutputStream,java.io.InputStream) -> makeReusable
com.squareup.okhttp.internal.http.UnknownLengthHttpInputStream -> com.squareup.okhttp.internal.http.x:
    boolean inputExhausted -> d
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
com.squareup.okhttp.internal.spdy.IncomingStreamHandler -> com.squareup.okhttp.internal.spdy.IncomingStreamHandler:
    com.squareup.okhttp.internal.spdy.IncomingStreamHandler REFUSE_INCOMING_STREAMS -> REFUSE_INCOMING_STREAMS
    void receive(com.squareup.okhttp.internal.spdy.SpdyStream) -> receive
com.squareup.okhttp.internal.spdy.IncomingStreamHandler$1 -> com.squareup.okhttp.internal.spdy.a:
    void receive(com.squareup.okhttp.internal.spdy.SpdyStream) -> receive
com.squareup.okhttp.internal.spdy.Ping -> com.squareup.okhttp.internal.spdy.Ping:
    java.util.concurrent.CountDownLatch latch -> a
    long sent -> b
    long received -> c
    void send() -> a
    void receive() -> b
    void cancel() -> c
    long roundTripTime() -> roundTripTime
    long roundTripTime(long,java.util.concurrent.TimeUnit) -> roundTripTime
com.squareup.okhttp.internal.spdy.Settings -> com.squareup.okhttp.internal.spdy.b:
    int set -> a
    int persistValue -> b
    int persisted -> c
    int[] values -> d
    void set(int,int,int) -> a
    int getInitialWindowSize$134621() -> a
    void merge(com.squareup.okhttp.internal.spdy.Settings) -> a
com.squareup.okhttp.internal.spdy.SpdyConnection -> com.squareup.okhttp.internal.spdy.SpdyConnection:
    java.util.concurrent.ExecutorService executor -> d
    boolean client -> a
    com.squareup.okhttp.internal.spdy.IncomingStreamHandler handler -> e
    com.squareup.okhttp.internal.spdy.SpdyReader spdyReader -> f
    com.squareup.okhttp.internal.spdy.SpdyWriter spdyWriter -> g
    java.util.Map streams -> h
    java.lang.String hostName -> i
    int lastGoodStreamId -> j
    int nextStreamId -> k
    boolean shutdown -> l
    long idleStartTimeNs -> m
    java.util.Map pings -> n
    int nextPingId -> o
    com.squareup.okhttp.internal.spdy.Settings settings -> b
    boolean $assertionsDisabled -> c
    int openStreamCount() -> openStreamCount
    com.squareup.okhttp.internal.spdy.SpdyStream getStream(int) -> b
    com.squareup.okhttp.internal.spdy.SpdyStream removeStream(int) -> a
    void setIdle(boolean) -> a
    boolean isIdle() -> isIdle
    long getIdleStartTimeNs() -> getIdleStartTimeNs
    com.squareup.okhttp.internal.spdy.SpdyStream newStream(java.util.List,boolean,boolean) -> newStream
    void writeSynReply(int,int,java.util.List) -> a
    void writeFrame$1cf967a4(byte[],int) -> a
    void writeSynResetLater(int,int) -> a
    void writeSynReset(int,int) -> b
    void writeWindowUpdateLater(int,int) -> c
    void writeWindowUpdate(int,int) -> d
    com.squareup.okhttp.internal.spdy.Ping ping() -> ping
    void writePing(int,com.squareup.okhttp.internal.spdy.Ping) -> a
    com.squareup.okhttp.internal.spdy.Ping removePing(int) -> c
    void noop() -> noop
    void flush() -> flush
    void shutdown(int) -> shutdown
    void close() -> close
    void close(int,int) -> e
    void access$1(com.squareup.okhttp.internal.spdy.SpdyConnection,int,int) -> a
    com.squareup.okhttp.internal.spdy.SpdyReader access$2(com.squareup.okhttp.internal.spdy.SpdyConnection) -> a
    com.squareup.okhttp.internal.spdy.SpdyStream access$3(com.squareup.okhttp.internal.spdy.SpdyConnection,int) -> a
    boolean access$4(com.squareup.okhttp.internal.spdy.SpdyConnection) -> b
    void access$5(com.squareup.okhttp.internal.spdy.SpdyConnection,int) -> b
    java.util.Map access$6(com.squareup.okhttp.internal.spdy.SpdyConnection) -> c
    java.util.concurrent.ExecutorService access$7() -> a
    java.lang.String access$8(com.squareup.okhttp.internal.spdy.SpdyConnection) -> d
    com.squareup.okhttp.internal.spdy.IncomingStreamHandler access$9(com.squareup.okhttp.internal.spdy.SpdyConnection) -> e
    void access$10$5d150054(com.squareup.okhttp.internal.spdy.SpdyConnection,int) -> c
    com.squareup.okhttp.internal.spdy.Ping access$11(com.squareup.okhttp.internal.spdy.SpdyConnection,int) -> d
    void access$12$2743112d(com.squareup.okhttp.internal.spdy.SpdyConnection) -> f
    void access$13(com.squareup.okhttp.internal.spdy.SpdyConnection,int,com.squareup.okhttp.internal.spdy.Ping) -> a
com.squareup.okhttp.internal.spdy.SpdyConnection$1 -> com.squareup.okhttp.internal.spdy.c:
    com.squareup.okhttp.internal.spdy.SpdyConnection this$0 -> a
    int val$streamId -> b
    int val$statusCode -> c
    void execute() -> execute
com.squareup.okhttp.internal.spdy.SpdyConnection$2 -> com.squareup.okhttp.internal.spdy.d:
    com.squareup.okhttp.internal.spdy.SpdyConnection this$0 -> a
    int val$streamId -> b
    int val$deltaWindowSize -> c
    void execute() -> execute
com.squareup.okhttp.internal.spdy.SpdyConnection$3 -> com.squareup.okhttp.internal.spdy.e:
    com.squareup.okhttp.internal.spdy.SpdyConnection this$0 -> a
    int val$streamId -> b
    com.squareup.okhttp.internal.spdy.Ping val$ping -> c
    void execute() -> execute
com.squareup.okhttp.internal.spdy.SpdyConnection$Builder -> com.squareup.okhttp.internal.spdy.SpdyConnection$Builder:
    java.lang.String hostName -> a
    java.io.InputStream in -> b
    java.io.OutputStream out -> c
    com.squareup.okhttp.internal.spdy.IncomingStreamHandler handler -> d
    boolean client -> client
    com.squareup.okhttp.internal.spdy.SpdyConnection$Builder handler(com.squareup.okhttp.internal.spdy.IncomingStreamHandler) -> handler
    com.squareup.okhttp.internal.spdy.SpdyConnection build() -> build
    com.squareup.okhttp.internal.spdy.IncomingStreamHandler access$0(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder) -> a
    java.io.InputStream access$1(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder) -> b
    java.io.OutputStream access$2(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder) -> c
    java.lang.String access$3(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder) -> d
com.squareup.okhttp.internal.spdy.SpdyConnection$Reader -> com.squareup.okhttp.internal.spdy.f:
    com.squareup.okhttp.internal.spdy.SpdyConnection this$0 -> a
    void run() -> run
    void data(int,int,java.io.InputStream,int) -> data
    void synStream(int,int,int,int,int,java.util.List) -> synStream
    void synReply(int,int,java.util.List) -> synReply
    void headers(int,int,java.util.List) -> headers
    void rstStream(int,int,int) -> rstStream
    void settings(int,com.squareup.okhttp.internal.spdy.Settings) -> settings
    void noop() -> noop
    void ping(int,int) -> ping
    void goAway(int,int,int) -> goAway
    void windowUpdate(int,int,int) -> windowUpdate
    com.squareup.okhttp.internal.spdy.SpdyConnection access$1(com.squareup.okhttp.internal.spdy.SpdyConnection$Reader) -> a
com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$1 -> com.squareup.okhttp.internal.spdy.g:
    com.squareup.okhttp.internal.spdy.SpdyConnection$Reader this$1 -> a
    com.squareup.okhttp.internal.spdy.SpdyStream val$synStream -> b
    void execute() -> execute
com.squareup.okhttp.internal.spdy.SpdyReader -> com.squareup.okhttp.internal.spdy.SpdyReader:
    byte[] DICTIONARY -> a
    java.io.DataInputStream in -> b
    java.io.DataInputStream nameValueBlockIn -> c
    int compressedLimit -> d
    boolean nextFrame(com.squareup.okhttp.internal.spdy.SpdyReader$Handler) -> nextFrame
    java.util.List readNameValueBlock(int) -> a
    java.lang.String readString() -> a
    void readSettings(com.squareup.okhttp.internal.spdy.SpdyReader$Handler,int,int) -> a
    java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> a
    void close() -> close
    int access$0(com.squareup.okhttp.internal.spdy.SpdyReader) -> a
    java.io.DataInputStream access$1(com.squareup.okhttp.internal.spdy.SpdyReader) -> b
    void access$2(com.squareup.okhttp.internal.spdy.SpdyReader,int) -> a
com.squareup.okhttp.internal.spdy.SpdyReader$1 -> com.squareup.okhttp.internal.spdy.h:
    com.squareup.okhttp.internal.spdy.SpdyReader this$0 -> a
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
com.squareup.okhttp.internal.spdy.SpdyReader$2 -> com.squareup.okhttp.internal.spdy.i:
    com.squareup.okhttp.internal.spdy.SpdyReader this$0 -> a
    int inflate(byte[],int,int) -> inflate
com.squareup.okhttp.internal.spdy.SpdyReader$Handler -> com.squareup.okhttp.internal.spdy.SpdyReader$Handler:
    void data(int,int,java.io.InputStream,int) -> data
    void synStream(int,int,int,int,int,java.util.List) -> synStream
    void synReply(int,int,java.util.List) -> synReply
    void headers(int,int,java.util.List) -> headers
    void rstStream(int,int,int) -> rstStream
    void settings(int,com.squareup.okhttp.internal.spdy.Settings) -> settings
    void noop() -> noop
    void ping(int,int) -> ping
    void goAway(int,int,int) -> goAway
    void windowUpdate(int,int,int) -> windowUpdate
com.squareup.okhttp.internal.spdy.SpdyStream -> com.squareup.okhttp.internal.spdy.SpdyStream:
    java.lang.String[] STATUS_CODE_NAMES -> b
    int RST_PROTOCOL_ERROR -> RST_PROTOCOL_ERROR
    int RST_INVALID_STREAM -> RST_INVALID_STREAM
    int RST_REFUSED_STREAM -> RST_REFUSED_STREAM
    int RST_UNSUPPORTED_VERSION -> RST_UNSUPPORTED_VERSION
    int RST_CANCEL -> RST_CANCEL
    int RST_INTERNAL_ERROR -> RST_INTERNAL_ERROR
    int RST_FLOW_CONTROL_ERROR -> RST_FLOW_CONTROL_ERROR
    int RST_STREAM_IN_USE -> RST_STREAM_IN_USE
    int RST_STREAM_ALREADY_CLOSED -> RST_STREAM_ALREADY_CLOSED
    int RST_INVALID_CREDENTIALS -> RST_INVALID_CREDENTIALS
    int RST_FRAME_TOO_LARGE -> RST_FRAME_TOO_LARGE
    int WINDOW_UPDATE_THRESHOLD -> WINDOW_UPDATE_THRESHOLD
    int id -> c
    com.squareup.okhttp.internal.spdy.SpdyConnection connection -> d
    int priority -> e
    int slot -> f
    long readTimeoutMillis -> g
    int writeWindowSize -> h
    java.util.List requestHeaders -> i
    java.util.List responseHeaders -> j
    com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in -> k
    com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out -> l
    int rstStatusCode -> m
    boolean $assertionsDisabled -> a
    boolean isOpen() -> isOpen
    boolean isLocallyInitiated() -> isLocallyInitiated
    com.squareup.okhttp.internal.spdy.SpdyConnection getConnection() -> getConnection
    java.util.List getRequestHeaders() -> getRequestHeaders
    java.util.List getResponseHeaders() -> getResponseHeaders
    int getRstStatusCode() -> getRstStatusCode
    void reply(java.util.List,boolean) -> reply
    void setReadTimeout(long) -> setReadTimeout
    long getReadTimeoutMillis() -> getReadTimeoutMillis
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    void close(int) -> close
    void closeLater(int) -> closeLater
    boolean closeInternal(int) -> c
    void receiveReply(java.util.List) -> a
    void receiveHeaders(java.util.List) -> b
    void receiveData(java.io.InputStream,int) -> a
    void receiveFin() -> a
    void receiveRstStream(int) -> a
    void setSettings(com.squareup.okhttp.internal.spdy.Settings) -> b
    void receiveSettings(com.squareup.okhttp.internal.spdy.Settings) -> a
    void receiveWindowUpdate(int) -> b
    java.lang.String rstStatusString() -> b
    com.squareup.okhttp.internal.spdy.SpdyConnection access$0(com.squareup.okhttp.internal.spdy.SpdyStream) -> a
    int access$1(com.squareup.okhttp.internal.spdy.SpdyStream) -> b
    long access$2(com.squareup.okhttp.internal.spdy.SpdyStream) -> c
    int access$3(com.squareup.okhttp.internal.spdy.SpdyStream) -> d
    void access$4(com.squareup.okhttp.internal.spdy.SpdyStream) -> e
    java.lang.String access$5(com.squareup.okhttp.internal.spdy.SpdyStream) -> f
    int access$6(com.squareup.okhttp.internal.spdy.SpdyStream) -> g
com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream -> com.squareup.okhttp.internal.spdy.j:
    byte[] buffer -> c
    int pos -> d
    int limit -> e
    boolean closed -> f
    boolean finished -> g
    int unacknowledgedBytes -> h
    com.squareup.okhttp.internal.spdy.SpdyStream this$0 -> a
    boolean $assertionsDisabled -> b
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    void receive(java.io.InputStream,int) -> a
    void close() -> close
    void checkNotClosed() -> a
    void access$1(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream,boolean) -> a
    boolean access$2(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream) -> a
    boolean access$3(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream) -> b
com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream -> com.squareup.okhttp.internal.spdy.k:
    byte[] buffer -> c
    int pos -> d
    boolean closed -> e
    boolean finished -> f
    int unacknowledgedBytes -> g
    com.squareup.okhttp.internal.spdy.SpdyStream this$0 -> a
    boolean $assertionsDisabled -> b
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void writeFrame(boolean) -> a
    void waitUntilWritable(int,boolean) -> a
    void checkNotClosed() -> a
    void access$1(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream,boolean) -> a
    boolean access$2(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream) -> a
    boolean access$3(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream) -> b
    int access$4(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream) -> c
    void access$5(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream,int) -> a
com.squareup.okhttp.internal.spdy.SpdyWriter -> com.squareup.okhttp.internal.spdy.l:
    java.io.DataOutputStream out -> a
    java.io.ByteArrayOutputStream nameValueBlockBuffer -> b
    java.io.DataOutputStream nameValueBlockOut -> c
    void synStream(int,int,int,int,int,java.util.List) -> synStream
    void synReply(int,int,java.util.List) -> synReply
    void rstStream(int,int) -> rstStream
    void writeNameValueBlockToBuffer(java.util.List) -> a
    void noop() -> noop
    void ping(int,int) -> ping
    void goAway(int,int,int) -> goAway
    void windowUpdate(int,int) -> windowUpdate
    void close() -> close
com.winsontan520.wversionmanager.library.CustomTagHandler -> com.winsontan520.wversionmanager.library.CustomTagHandler:
    void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader) -> handleTag
com.winsontan520.wversionmanager.library.IWVersionManager -> com.winsontan520.wversionmanager.library.IWVersionManager:
    java.lang.String getUpdateNowLabel() -> getUpdateNowLabel
    void setUpdateNowLabel(java.lang.String) -> setUpdateNowLabel
    java.lang.String getRemindMeLaterLabel() -> getRemindMeLaterLabel
    void setRemindMeLaterLabel(java.lang.String) -> setRemindMeLaterLabel
    java.lang.String getIgnoreThisVersionLabel() -> getIgnoreThisVersionLabel
    void setIgnoreThisVersionLabel(java.lang.String) -> setIgnoreThisVersionLabel
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setTitle(java.lang.String) -> setTitle
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getMessage() -> getMessage
    java.lang.String getTitle() -> getTitle
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.String getUpdateUrl() -> getUpdateUrl
    void setUpdateUrl(java.lang.String) -> setUpdateUrl
    java.lang.String getVersionContentUrl() -> getVersionContentUrl
    void setVersionContentUrl(java.lang.String) -> setVersionContentUrl
    void setReminderTimer(int) -> setReminderTimer
    int getReminderTimer() -> getReminderTimer
    int getCurrentVersionCode() -> getCurrentVersionCode
    int getIgnoreVersionCode() -> getIgnoreVersionCode
    com.winsontan520.wversionmanager.library.CustomTagHandler getCustomTagHandler() -> getCustomTagHandler
    void setCustomTagHandler(com.winsontan520.wversionmanager.library.CustomTagHandler) -> setCustomTagHandler
com.winsontan520.wversionmanager.library.R -> com.winsontan520.wversionmanager.library.R:
com.winsontan520.wversionmanager.library.R$drawable -> com.winsontan520.wversionmanager.library.R$drawable:
    int ic_launcher -> ic_launcher
com.winsontan520.wversionmanager.library.R$string -> com.winsontan520.wversionmanager.library.R$string:
    int app_name -> app_name
com.winsontan520.wversionmanager.library.R$style -> com.winsontan520.wversionmanager.library.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
com.winsontan520.wversionmanager.library.WVersionManager -> com.winsontan520.wversionmanager.library.WVersionManager:
    com.winsontan520.wversionmanager.library.CustomTagHandler customTagHandler -> a
    java.lang.String PREF_IGNORE_VERSION_CODE -> b
    java.lang.String PREF_REMINDER_TIME -> c
    android.app.Activity activity -> d
    android.graphics.drawable.Drawable icon -> e
    java.lang.String title -> f
    java.lang.String message -> g
    java.lang.String updateNowLabel -> h
    java.lang.String remindMeLaterLabel -> i
    java.lang.String ignoreThisVersionLabel -> j
    java.lang.String updateUrl -> k
    java.lang.String versionContentUrl -> l
    int reminderTimer -> m
    int versionCode -> n
    com.winsontan520.wversionmanager.library.WVersionManager$AlertDialogButtonListener listener -> o
    boolean mDialogCancelable -> p
    boolean mIsAskForRate -> q
    java.lang.String mAskForRatePositiveLabel -> r
    java.lang.String mAskForRateNegativeLabel -> s
    int mMode -> t
    void checkVersion() -> checkVersion
    void showDialog() -> a
    java.lang.String getUpdateNowLabel() -> getUpdateNowLabel
    void setUpdateNowLabel(java.lang.String) -> setUpdateNowLabel
    java.lang.String getRemindMeLaterLabel() -> getRemindMeLaterLabel
    void setRemindMeLaterLabel(java.lang.String) -> setRemindMeLaterLabel
    java.lang.String getIgnoreThisVersionLabel() -> getIgnoreThisVersionLabel
    void setIgnoreThisVersionLabel(java.lang.String) -> setIgnoreThisVersionLabel
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setTitle(java.lang.String) -> setTitle
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getMessage() -> getMessage
    java.lang.String getTitle() -> getTitle
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.String getUpdateUrl() -> getUpdateUrl
    void setUpdateUrl(java.lang.String) -> setUpdateUrl
    java.lang.String getVersionContentUrl() -> getVersionContentUrl
    void setVersionContentUrl(java.lang.String) -> setVersionContentUrl
    int getReminderTimer() -> getReminderTimer
    void setReminderTimer(int) -> setReminderTimer
    int getCurrentVersionCode() -> getCurrentVersionCode
    int getIgnoreVersionCode() -> getIgnoreVersionCode
    com.winsontan520.wversionmanager.library.CustomTagHandler getCustomTagHandler() -> getCustomTagHandler
    void setCustomTagHandler(com.winsontan520.wversionmanager.library.CustomTagHandler) -> setCustomTagHandler
    boolean isDialogCancelable() -> isDialogCancelable
    void setDialogCancelable(boolean) -> setDialogCancelable
    void askForRate() -> askForRate
    java.lang.String getAskForRatePositiveLabel() -> getAskForRatePositiveLabel
    void setAskForRatePositiveLabel(java.lang.String) -> setAskForRatePositiveLabel
    java.lang.String getAskForRateNegativeLabel() -> getAskForRateNegativeLabel
    void setAskForRateNegativeLabel(java.lang.String) -> setAskForRateNegativeLabel
    void access$0(com.winsontan520.wversionmanager.library.WVersionManager,java.lang.String) -> a
    void access$1(com.winsontan520.wversionmanager.library.WVersionManager,int) -> a
    void access$2(com.winsontan520.wversionmanager.library.WVersionManager) -> a
    void access$3(com.winsontan520.wversionmanager.library.WVersionManager,int) -> b
    int access$4(com.winsontan520.wversionmanager.library.WVersionManager) -> b
    void access$5(com.winsontan520.wversionmanager.library.WVersionManager) -> c
com.winsontan520.wversionmanager.library.WVersionManager$AlertDialogButtonListener -> com.winsontan520.wversionmanager.library.a:
    com.winsontan520.wversionmanager.library.WVersionManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.winsontan520.wversionmanager.library.WVersionManager$VersionContentRequest -> com.winsontan520.wversionmanager.library.b:
    android.content.Context context -> a
    int statusCode -> b
    com.winsontan520.wversionmanager.library.WVersionManager this$0 -> c
    java.lang.String doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
id.angsanley.musicplus.AboutApp -> id.angsanley.musicplus.AboutApp:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
id.angsanley.musicplus.AppEULA -> id.angsanley.musicplus.AppEULA:
    java.lang.String EULA_PREFIX -> a
    android.app.Activity mContext -> b
    android.content.pm.PackageInfo getPackageInfo() -> a
    void show() -> show
    android.app.Activity access$0(id.angsanley.musicplus.AppEULA) -> a
id.angsanley.musicplus.AppEULA$1 -> id.angsanley.musicplus.a:
    id.angsanley.musicplus.AppEULA this$0 -> a
    android.content.SharedPreferences val$prefs -> b
    java.lang.String val$eulaKey -> c
    void onClick(android.content.DialogInterface,int) -> onClick
id.angsanley.musicplus.AppEULA$2 -> id.angsanley.musicplus.b:
    id.angsanley.musicplus.AppEULA this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
id.angsanley.musicplus.BuildConfig -> id.angsanley.musicplus.BuildConfig:
    boolean DEBUG -> DEBUG
id.angsanley.musicplus.MusicEULA -> id.angsanley.musicplus.MusicEULA:
    java.lang.String EULA_PREFIX -> a
    android.app.Activity mContext -> b
    android.content.pm.PackageInfo getPackageInfo() -> a
    void show() -> show
    android.app.Activity access$0(id.angsanley.musicplus.MusicEULA) -> a
id.angsanley.musicplus.MusicEULA$1 -> id.angsanley.musicplus.c:
    id.angsanley.musicplus.MusicEULA this$0 -> a
    android.content.SharedPreferences val$prefs -> b
    java.lang.String val$eulaKey -> c
    void onClick(android.content.DialogInterface,int) -> onClick
id.angsanley.musicplus.MusicEULA$2 -> id.angsanley.musicplus.d:
    id.angsanley.musicplus.MusicEULA this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
id.angsanley.musicplus.R -> id.angsanley.musicplus.R:
id.angsanley.musicplus.R$anim -> id.angsanley.musicplus.R$anim:
    int peak_meter_1 -> peak_meter_1
    int peak_meter_2 -> peak_meter_2
id.angsanley.musicplus.R$array -> id.angsanley.musicplus.R$array:
    int tab_titles -> tab_titles
    int visualization_types -> visualization_types
    int widget_style_types -> widget_style_types
id.angsanley.musicplus.R$attr -> id.angsanley.musicplus.R$attr:
id.angsanley.musicplus.R$color -> id.angsanley.musicplus.R$color:
    int black -> black
    int holo_blue_dark -> holo_blue_dark
    int queue_callout_line -> queue_callout_line
    int selected_tabtext -> selected_tabtext
    int tab_text_color -> tab_text_color
    int transparent -> transparent
    int transparent_black -> transparent_black
    int unselected_tabtext -> unselected_tabtext
    int white -> white
id.angsanley.musicplus.R$dimen -> id.angsanley.musicplus.R$dimen:
    int audio_player_artwork_padding -> audio_player_artwork_padding
    int audio_player_button_container_padding -> audio_player_button_container_padding
    int audio_player_controls_height -> audio_player_controls_height
    int audio_player_info_container_padding -> audio_player_info_container_padding
    int audio_player_seek_bar_padding -> audio_player_seek_bar_padding
    int bottom_action_bar_album_art_width_height -> bottom_action_bar_album_art_width_height
    int bottom_action_bar_divider_height -> bottom_action_bar_divider_height
    int bottom_action_bar_height -> bottom_action_bar_height
    int bottom_action_bar_info_padding_left -> bottom_action_bar_info_padding_left
    int bottom_action_bar_item_padding_left_right -> bottom_action_bar_item_padding_left_right
    int bottom_action_bar_item_width -> bottom_action_bar_item_width
    int bottom_action_bar_padding_left -> bottom_action_bar_padding_left
    int colorstrip_height -> colorstrip_height
    int fast_scroll_padding_right -> fast_scroll_padding_right
    int four_by_one_album_art_width -> four_by_one_album_art_width
    int four_by_two_album_art_width -> four_by_two_album_art_width
    int four_by_two_control_height -> four_by_two_control_height
    int four_by_two_height -> four_by_two_height
    int gridview_image_height -> gridview_image_height
    int gridview_image_width -> gridview_image_width
    int gridview_item_ccontainer_height -> gridview_item_ccontainer_height
    int gridview_item_ccontainer_padding_left -> gridview_item_ccontainer_padding_left
    int gridview_item_ccontainer_padding_right -> gridview_item_ccontainer_padding_right
    int gridview_item_margin -> gridview_item_margin
    int half_and_half_container_padding -> half_and_half_container_padding
    int half_and_half_image_height -> half_and_half_image_height
    int half_and_half_text_padding -> half_and_half_text_padding
    int header_text_padding -> header_text_padding
    int header_text_padding_left -> header_text_padding_left
    int list_separator_container_padding_left -> list_separator_container_padding_left
    int list_separator_min_height -> list_separator_min_height
    int list_separator_padding_left_right -> list_separator_padding_left_right
    int listview_album_art -> listview_album_art
    int listview_album_margin -> listview_album_margin
    int listview_item_height -> listview_item_height
    int listview_items_padding_left_top -> listview_items_padding_left_top
    int listview_items_padding_right -> listview_items_padding_right
    int listview_items_padding_small_top -> listview_items_padding_small_top
    int listview_peak_meter_one_padding_right -> listview_peak_meter_one_padding_right
    int listview_peak_meter_two_padding_right -> listview_peak_meter_two_padding_right
    int notification_expanded_height -> notification_expanded_height
    int notification_padding -> notification_padding
    int one_by_one_height -> one_by_one_height
    int one_by_one_width -> one_by_one_width
    int peak_meter_one_padding_right -> peak_meter_one_padding_right
    int peak_meter_padding_bottom -> peak_meter_padding_bottom
    int peak_meter_padding_top -> peak_meter_padding_top
    int peak_meter_two_padding_right -> peak_meter_two_padding_right
    int play_controls_notification -> play_controls_notification
    int quick_context_line_height -> quick_context_line_height
    int quick_context_line_width -> quick_context_line_width
    int quick_context_margin_right -> quick_context_margin_right
    int quick_context_padding_right -> quick_context_padding_right
    int status_bar_album_art -> status_bar_album_art
    int status_bar_button_info_container_padding_left -> status_bar_button_info_container_padding_left
    int status_bar_button_width_height -> status_bar_button_width_height
    int status_bar_recents_app_description_text_size -> status_bar_recents_app_description_text_size
    int status_bar_recents_app_icon_left_margin -> status_bar_recents_app_icon_left_margin
    int status_bar_recents_app_icon_max_height -> status_bar_recents_app_icon_max_height
    int status_bar_recents_app_icon_max_width -> status_bar_recents_app_icon_max_width
    int status_bar_recents_app_icon_top_margin -> status_bar_recents_app_icon_top_margin
    int status_bar_recents_app_label_left_margin -> status_bar_recents_app_label_left_margin
    int status_bar_recents_app_label_text_size -> status_bar_recents_app_label_text_size
    int status_bar_recents_app_label_width -> status_bar_recents_app_label_width
    int status_bar_recents_fading_edge_length -> status_bar_recents_fading_edge_length
    int status_bar_recents_item_padding -> status_bar_recents_item_padding
    int status_bar_recents_thumbnail_height -> status_bar_recents_thumbnail_height
    int status_bar_recents_thumbnail_left_margin -> status_bar_recents_thumbnail_left_margin
    int status_bar_recents_thumbnail_width -> status_bar_recents_thumbnail_width
    int tab_height -> tab_height
    int tab_padding_left_right -> tab_padding_left_right
    int tab_padding_top_bottom -> tab_padding_top_bottom
    int text_size_extra_micro -> text_size_extra_micro
    int text_size_large -> text_size_large
    int text_size_medium -> text_size_medium
    int text_size_micro -> text_size_micro
    int text_size_small -> text_size_small
    int viewpager_margin_stroke_width -> viewpager_margin_stroke_width
id.angsanley.musicplus.R$drawable -> id.angsanley.musicplus.R$drawable:
    int apollo_holo_dark_next -> apollo_holo_dark_next
    int apollo_holo_dark_notifiation_bar_collapse -> apollo_holo_dark_notifiation_bar_collapse
    int apollo_holo_dark_overflow -> apollo_holo_dark_overflow
    int apollo_holo_dark_pause -> apollo_holo_dark_pause
    int apollo_holo_dark_play -> apollo_holo_dark_play
    int apollo_holo_dark_prev -> apollo_holo_dark_prev
    int apollo_holo_dark_repeat_normal -> apollo_holo_dark_repeat_normal
    int apollo_holo_dark_shuffle_normal -> apollo_holo_dark_shuffle_normal
    int apollo_holo_light_favorite_normal -> apollo_holo_light_favorite_normal
    int apollo_holo_light_favorite_selected -> apollo_holo_light_favorite_selected
    int apollo_holo_light_next -> apollo_holo_light_next
    int apollo_holo_light_overflow -> apollo_holo_light_overflow
    int apollo_holo_light_pause -> apollo_holo_light_pause
    int apollo_holo_light_play -> apollo_holo_light_play
    int apollo_holo_light_previous -> apollo_holo_light_previous
    int apollo_holo_light_repeat_all -> apollo_holo_light_repeat_all
    int apollo_holo_light_repeat_normal -> apollo_holo_light_repeat_normal
    int apollo_holo_light_repeat_one -> apollo_holo_light_repeat_one
    int apollo_holo_light_search -> apollo_holo_light_search
    int apollo_holo_light_shuffle_normal -> apollo_holo_light_shuffle_normal
    int apollo_holo_light_shuffle_on -> apollo_holo_light_shuffle_on
    int apollo_settings_themes -> apollo_settings_themes
    int appwidget_bg -> appwidget_bg
    int appwidget_bg_holo -> appwidget_bg_holo
    int bar_graph -> bar_graph
    int colorstrip_shadow -> colorstrip_shadow
    int dropdown_ic_arrow_normal_holo_light -> dropdown_ic_arrow_normal_holo_light
    int holo_selector -> holo_selector
    int ic_launcher -> ic_launcher
    int ic_logo -> ic_logo
    int icon -> icon
    int indicator_playing_peak_meter_1 -> indicator_playing_peak_meter_1
    int indicator_playing_peak_meter_2 -> indicator_playing_peak_meter_2
    int indicator_playing_peak_meter_3 -> indicator_playing_peak_meter_3
    int indicator_playing_peak_meter_4 -> indicator_playing_peak_meter_4
    int indicator_playing_peak_meter_5 -> indicator_playing_peak_meter_5
    int list_section_divider_holo_custom -> list_section_divider_holo_custom
    int musicsplash -> musicsplash
    int no_art_normal -> no_art_normal
    int no_art_small -> no_art_small
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    int promo -> promo
    int queue_thumbnail_bg -> queue_thumbnail_bg
    int queue_thumbnail_fg -> queue_thumbnail_fg
    int recents_thumbnail_bg_press -> recents_thumbnail_bg_press
    int splash -> splash
    int stat_notify_music -> stat_notify_music
    int status_bg -> status_bg
    int tab -> tab
    int tab_selected_holo -> tab_selected_holo
    int tab_selected_pressed_focused_holo -> tab_selected_pressed_focused_holo
    int tab_selected_pressed_holo -> tab_selected_pressed_holo
    int tab_unselected_focused_holo -> tab_unselected_focused_holo
    int tab_unselected_holo -> tab_unselected_holo
    int tab_unselected_pressed_holo -> tab_unselected_pressed_holo
    int title_bar_shadow -> title_bar_shadow
    int viewpager_margin -> viewpager_margin
id.angsanley.musicplus.R$id -> id.angsanley.musicplus.R$id:
    int action_bar_album_art -> action_bar_album_art
    int action_bar_album_name -> action_bar_album_name
    int action_bar_layout -> action_bar_layout
    int action_bar_track_name -> action_bar_track_name
    int action_eqalizer -> action_eqalizer
    int action_overflow -> action_overflow
    int action_search -> action_search
    int action_settings -> action_settings
    int action_shuffle_all -> action_shuffle_all
    int add_to_playlist -> add_to_playlist
    int appView -> appView
    int app_description -> app_description
    int app_thumbnail -> app_thumbnail
    int artist_half_container -> artist_half_container
    int audio_player_album_art -> audio_player_album_art
    int audio_player_album_artist -> audio_player_album_artist
    int audio_player_current_time -> audio_player_current_time
    int audio_player_next -> audio_player_next
    int audio_player_play -> audio_player_play
    int audio_player_prev -> audio_player_prev
    int audio_player_repeat -> audio_player_repeat
    int audio_player_shuffle -> audio_player_shuffle
    int audio_player_text_border -> audio_player_text_border
    int audio_player_total_time -> audio_player_total_time
    int audio_player_track -> audio_player_track
    int audio_player_track_text -> audio_player_track_text
    int bottom_action_bar -> bottom_action_bar
    int bottom_action_bar_album_art -> bottom_action_bar_album_art
    int bottom_action_bar_artist_name -> bottom_action_bar_artist_name
    int bottom_action_bar_container -> bottom_action_bar_container
    int bottom_action_bar_info_divider -> bottom_action_bar_info_divider
    int bottom_action_bar_next -> bottom_action_bar_next
    int bottom_action_bar_play -> bottom_action_bar_play
    int bottom_action_bar_previous -> bottom_action_bar_previous
    int bottom_action_bar_track_name -> bottom_action_bar_track_name
    int bottom_colorstrip -> bottom_colorstrip
    int bottomactionbar_new -> bottomactionbar_new
    int buttons -> buttons
    int colorstrip -> colorstrip
    int colorstrip_bottom -> colorstrip_bottom
    int empty_view -> empty_view
    int eq -> eq
    int four_by_one_album_appwidget -> four_by_one_album_appwidget
    int four_by_one_albumart -> four_by_one_albumart
    int four_by_one_artist -> four_by_one_artist
    int four_by_one_control_next -> four_by_one_control_next
    int four_by_one_control_play -> four_by_one_control_play
    int four_by_one_control_prev -> four_by_one_control_prev
    int four_by_one_title -> four_by_one_title
    int four_by_two -> four_by_two
    int four_by_two_albumart -> four_by_two_albumart
    int four_by_two_albumname -> four_by_two_albumname
    int four_by_two_artistname -> four_by_two_artistname
    int four_by_two_control_next -> four_by_two_control_next
    int four_by_two_control_play -> four_by_two_control_play
    int four_by_two_control_prev -> four_by_two_control_prev
    int four_by_two_control_repeat -> four_by_two_control_repeat
    int four_by_two_control_shuffle -> four_by_two_control_shuffle
    int four_by_two_controls -> four_by_two_controls
    int four_by_two_controls_info_divider -> four_by_two_controls_info_divider
    int four_by_two_info -> four_by_two_info
    int four_by_two_trackname -> four_by_two_trackname
    int gridview -> gridview
    int gridview_image -> gridview_image
    int gridview_info_holder -> gridview_info_holder
    int gridview_line_one -> gridview_line_one
    int gridview_line_two -> gridview_line_two
    int gridview_outershell -> gridview_outershell
    int gridview_text_border -> gridview_text_border
    int half -> half
    int half_artist_image -> half_artist_image
    int half_artist_image_text -> half_artist_image_text
    int half_artist_image_text_line_two -> half_artist_image_text_line_two
    int half_artist_info_holder -> half_artist_info_holder
    int header_image -> header_image
    int header_text -> header_text
    int image_edit_file -> image_edit_file
    int image_edit_gallery -> image_edit_gallery
    int image_edit_lastfm -> image_edit_lastfm
    int image_edit_web -> image_edit_web
    int listview_item_image -> listview_item_image
    int listview_item_line_one -> listview_item_line_one
    int listview_item_line_two -> listview_item_line_two
    int notificationbg -> notificationbg
    int one_by_one_albumart -> one_by_one_albumart
    int peak_one -> peak_one
    int peak_two -> peak_two
    int play_store -> play_store
    int progressBar1 -> progressBar1
    int queue_album_art -> queue_album_art
    int queue_artist_image -> queue_artist_image
    int queue_track_name -> queue_track_name
    int quick_context_line -> quick_context_line
    int quick_context_tip -> quick_context_tip
    int quick_queue_holder -> quick_queue_holder
    int recent_item -> recent_item
    int recents_callout_line -> recents_callout_line
    int scrollingTabs -> scrollingTabs
    int settings -> settings
    int shadow -> shadow
    int share -> share
    int status_bar_album_art -> status_bar_album_art
    int status_bar_album_name -> status_bar_album_name
    int status_bar_artist_name -> status_bar_artist_name
    int status_bar_collapse -> status_bar_collapse
    int status_bar_icon -> status_bar_icon
    int status_bar_next -> status_bar_next
    int status_bar_play -> status_bar_play
    int status_bar_prev -> status_bar_prev
    int status_bar_track_name -> status_bar_track_name
    int tabs -> tabs
    int textarea -> textarea
    int themeApply -> themeApply
    int themeDescription -> themeDescription
    int themeIcon -> themeIcon
    int themeSearch -> themeSearch
    int themeTitle -> themeTitle
    int title -> title
    int track_list_context_frame -> track_list_context_frame
    int viewPager -> viewPager
    int visualizerView -> visualizerView
id.angsanley.musicplus.R$integer -> id.angsanley.musicplus.R$integer:
    int gridview_columns -> gridview_columns
    int image_fade_in_duration -> image_fade_in_duration
    int listview_album_art -> listview_album_art
    int listview_padding_left -> listview_padding_left
    int listview_padding_right -> listview_padding_right
    int peak -> peak
    int viewpager_margin_width -> viewpager_margin_width
id.angsanley.musicplus.R$layout -> id.angsanley.musicplus.R$layout:
    int audio_controls -> audio_controls
    int audio_player -> audio_player
    int audio_player_browser -> audio_player_browser
    int bottom_action_bar -> bottom_action_bar
    int colorstrip -> colorstrip
    int context_menu -> context_menu
    int context_menu_header -> context_menu_header
    int contributors -> contributors
    int cordova_view -> cordova_view
    int custom_action_bar -> custom_action_bar
    int empty_view -> empty_view
    int fourbyone_app_widget -> fourbyone_app_widget
    int fourbyone_app_widget_dark -> fourbyone_app_widget_dark
    int fourbytwo_app_widget -> fourbytwo_app_widget
    int fourbytwo_app_widget_dark -> fourbytwo_app_widget_dark
    int gridview -> gridview
    int gridview_items -> gridview_items
    int half_and_half -> half_and_half
    int library_browser -> library_browser
    int list_separator -> list_separator
    int listview -> listview
    int listview_items -> listview_items
    int main -> main
    int onebyone_app_widget -> onebyone_app_widget
    int quick_queue -> quick_queue
    int quick_queue_items -> quick_queue_items
    int shadow -> shadow
    int status_bar -> status_bar
    int status_bar_expanded -> status_bar_expanded
    int tabs -> tabs
    int theme_preview -> theme_preview
    int track_browser -> track_browser
id.angsanley.musicplus.R$menu -> id.angsanley.musicplus.R$menu:
    int actionbar_top -> actionbar_top
    int context_albumimage -> context_albumimage
    int context_artistimage -> context_artistimage
    int context_playlist_genreimage -> context_playlist_genreimage
    int overflow_now_playing -> overflow_now_playing
id.angsanley.musicplus.R$plurals -> id.angsanley.musicplus.R$plurals:
    int NNNtrackstoplaylist -> NNNtrackstoplaylist
    int Nalbums -> Nalbums
    int Nsongs -> Nsongs
id.angsanley.musicplus.R$string -> id.angsanley.musicplus.R$string:
    int about -> about
    int about_summary -> about_summary
    int about_text -> about_text
    int accept -> accept
    int add_to_playlist -> add_to_playlist
    int album_header -> album_header
    int album_page_title -> album_page_title
    int apollo_1x1 -> apollo_1x1
    int apollo_4x1 -> apollo_4x1
    int apollo_4x2 -> apollo_4x2
    int apollo_themes -> apollo_themes
    int app_name -> app_name
    int apply_theme -> apply_theme
    int artist_page_title -> artist_page_title
    int author -> author
    int author_name -> author_name
    int by -> by
    int cd_bottom_action_bar_album_art -> cd_bottom_action_bar_album_art
    int cd_favorite -> cd_favorite
    int cd_next -> cd_next
    int cd_overflow -> cd_overflow
    int cd_play -> cd_play
    int cd_previous -> cd_previous
    int cd_repeat -> cd_repeat
    int cd_search -> cd_search
    int cd_shuffle -> cd_shuffle
    int checkupdate -> checkupdate
    int contributors -> contributors
    int contributors_summary -> contributors_summary
    int delete_playlist -> delete_playlist
    int delete_warning -> delete_warning
    int durationformatlong -> durationformatlong
    int durationformatshort -> durationformatshort
    int eqalizer -> eqalizer
    int error -> error
    int eula -> eula
    int favorite -> favorite
    int freemp3_button -> freemp3_button
    int get_more_themes -> get_more_themes
    int go -> go
    int header_interface -> header_interface
    int image_edit_albums -> image_edit_albums
    int image_edit_artists -> image_edit_artists
    int image_edit_file -> image_edit_file
    int image_edit_gallery -> image_edit_gallery
    int image_edit_genre -> image_edit_genre
    int image_edit_lastfm -> image_edit_lastfm
    int image_edit_playlist -> image_edit_playlist
    int image_edit_web -> image_edit_web
    int key_about -> key_about
    int key_build_version -> key_build_version
    int key_contributors -> key_contributors
    int key_tabs_enabled -> key_tabs_enabled
    int key_themes -> key_themes
    int key_themes_package -> key_themes_package
    int key_themes_preferences -> key_themes_preferences
    int key_visualization_type -> key_visualization_type
    int key_widget_style -> key_widget_style
    int musiceula -> musiceula
    int new_playlist -> new_playlist
    int new_playlist_name_template -> new_playlist_name_template
    int now_listening_to -> now_listening_to
    int nowplaying -> nowplaying
    int overwrite -> overwrite
    int play_all -> play_all
    int play_external_error -> play_external_error
    int play_external_question_button_cancel -> play_external_question_button_cancel
    int play_external_question_button_play -> play_external_question_button_play
    int play_external_question_button_queue -> play_external_question_button_queue
    int play_external_question_msg -> play_external_question_msg
    int play_store -> play_store
    int queue -> queue
    int remove -> remove
    int rename_playlist -> rename_playlist
    int repeat_all -> repeat_all
    int repeat_off -> repeat_off
    int repeat_one -> repeat_one
    int save -> save
    int search -> search
    int select_theme -> select_theme
    int set_as_ringtone -> set_as_ringtone
    int settings -> settings
    int settings_delete_cache_summary -> settings_delete_cache_summary
    int settings_delete_cache_title -> settings_delete_cache_title
    int settings_storage_category -> settings_storage_category
    int share -> share
    int share_track_using -> share_track_using
    int shuffle_all -> shuffle_all
    int shuffle_off -> shuffle_off
    int shuffle_on -> shuffle_on
    int tab_albums -> tab_albums
    int tab_artists -> tab_artists
    int tab_genres -> tab_genres
    int tab_playlists -> tab_playlists
    int tab_recent -> tab_recent
    int tab_songs -> tab_songs
    int tab_visibility_summary -> tab_visibility_summary
    int tab_visibility_title -> tab_visibility_title
    int themes -> themes
    int themes_summary -> themes_summary
    int track_header -> track_header
    int unknown -> unknown
    int use_as_ringtone -> use_as_ringtone
    int version -> version
    int visual_bargraph -> visual_bargraph
    int visual_none -> visual_none
    int visual_solidbargraph -> visual_solidbargraph
    int visual_waveform -> visual_waveform
    int visualizer_summary -> visualizer_summary
    int visualizer_title -> visualizer_title
    int widget_style_dark -> widget_style_dark
    int widget_style_light -> widget_style_light
    int widget_style_summary -> widget_style_summary
    int widget_style_title -> widget_style_title
id.angsanley.musicplus.R$style -> id.angsanley.musicplus.R$style:
    int Apollo_Holo -> Apollo_Holo
    int Apollo_Holo_Light -> Apollo_Holo_Light
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int AudioPlayerButton -> AudioPlayerButton
    int AudioPlayerText -> AudioPlayerText
    int BottomActionBarItem -> BottomActionBarItem
    int BottomActionBarText -> BottomActionBarText
    int FourByTwoMediaButton -> FourByTwoMediaButton
    int GridViewTextItem -> GridViewTextItem
    int GridviewShadowedText -> GridviewShadowedText
    int HalfText -> HalfText
    int HeaderText -> HeaderText
    int OverFlowHolo -> OverFlowHolo
    int OverFlowHolo_Light -> OverFlowHolo_Light
    int PeakMeter -> PeakMeter
    int SeparatorTextViewStyle -> SeparatorTextViewStyle
    int ShadowedText -> ShadowedText
    int StatusBarButton -> StatusBarButton
    int StatusBarText -> StatusBarText
    int Tabs -> Tabs
    int Theme_Light_Translucent -> Theme_Light_Translucent
    int Theme_Light_Translucent_Dialog -> Theme_Light_Translucent_Dialog
    int Theme_QuickQueue -> Theme_QuickQueue
    int Topborderline -> Topborderline
id.angsanley.musicplus.R$xml -> id.angsanley.musicplus.R$xml:
    int appwidget1x1_info -> appwidget1x1_info
    int appwidget4x1_info -> appwidget4x1_info
    int appwidget4x2_info -> appwidget4x2_info
    int config -> config
    int searchable -> searchable
    int settings -> settings
id.angsanley.musicplus.cordovaactivity -> id.angsanley.musicplus.cordovaactivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
org.apache.cordova.AccelListener -> org.apache.cordova.AccelListener:
    int STOPPED -> STOPPED
    int STARTING -> STARTING
    int RUNNING -> RUNNING
    int ERROR_FAILED_TO_START -> ERROR_FAILED_TO_START
    float x -> a
    float y -> b
    float z -> c
    long timestamp -> d
    int status -> e
    int accuracy -> g
    android.hardware.SensorManager sensorManager -> h
    android.hardware.Sensor mSensor -> i
    org.apache.cordova.api.CallbackContext callbackContext -> j
    void initialize(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    void stop() -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onReset() -> onReset
    void fail(int,java.lang.String) -> a
    org.json.JSONObject getAccelerationJSON() -> b
    void access$0(org.apache.cordova.AccelListener) -> a
org.apache.cordova.AccelListener$1 -> org.apache.cordova.a:
    org.apache.cordova.AccelListener this$0 -> a
    void run() -> run
org.apache.cordova.App -> org.apache.cordova.App:
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void clearCache() -> clearCache
    void loadUrl(java.lang.String,org.json.JSONObject) -> loadUrl
    void clearHistory() -> clearHistory
    void backHistory() -> backHistory
    void overrideBackbutton(boolean) -> overrideBackbutton
    void overrideButton(java.lang.String,boolean) -> overrideButton
    boolean isBackbuttonOverridden() -> isBackbuttonOverridden
    void exitApp() -> exitApp
org.apache.cordova.App$1 -> org.apache.cordova.b:
    org.apache.cordova.App this$0 -> a
    void run() -> run
org.apache.cordova.App$2 -> org.apache.cordova.c:
    org.apache.cordova.App this$0 -> a
    void run() -> run
org.apache.cordova.App$3 -> org.apache.cordova.d:
    org.apache.cordova.App this$0 -> a
    void run() -> run
org.apache.cordova.App$4 -> org.apache.cordova.e:
    org.apache.cordova.App this$0 -> a
    void run() -> run
org.apache.cordova.AudioHandler -> org.apache.cordova.AudioHandler:
    java.lang.String TAG -> TAG
    java.util.HashMap players -> a
    java.util.ArrayList pausedForPhone -> b
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    void onReset() -> onReset
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    void startRecordingAudio(java.lang.String,java.lang.String) -> startRecordingAudio
    void stopRecordingAudio(java.lang.String) -> stopRecordingAudio
    void startPlayingAudio(java.lang.String,java.lang.String) -> startPlayingAudio
    void seekToAudio(java.lang.String,int) -> seekToAudio
    void pausePlayingAudio(java.lang.String) -> pausePlayingAudio
    void stopPlayingAudio(java.lang.String) -> stopPlayingAudio
    float getCurrentPositionAudio(java.lang.String) -> getCurrentPositionAudio
    float getDurationAudio(java.lang.String,java.lang.String) -> getDurationAudio
    void setAudioOutputDevice(int) -> setAudioOutputDevice
    int getAudioOutputDevice() -> getAudioOutputDevice
    void setVolume(java.lang.String,float) -> setVolume
org.apache.cordova.AudioPlayer -> org.apache.cordova.AudioPlayer:
    int MEDIA_STATE -> a
    int MEDIA_DURATION -> b
    int MEDIA_POSITION -> c
    int MEDIA_ERROR -> d
    int MEDIA_ERR_NONE_ACTIVE -> e
    int MEDIA_ERR_ABORTED -> f
    int MEDIA_ERR_NETWORK -> g
    int MEDIA_ERR_DECODE -> h
    int MEDIA_ERR_NONE_SUPPORTED -> i
    org.apache.cordova.AudioHandler handler -> j
    java.lang.String id -> k
    org.apache.cordova.AudioPlayer$MODE mode -> l
    org.apache.cordova.AudioPlayer$STATE state -> m
    java.lang.String audioFile -> n
    float duration -> o
    android.media.MediaRecorder recorder -> p
    java.lang.String tempFile -> q
    android.media.MediaPlayer player -> r
    boolean prepareOnly -> s
    int seekOnPrepared -> t
    int[] $SWITCH_TABLE$org$apache$cordova$AudioPlayer$MODE -> u
    int[] $SWITCH_TABLE$org$apache$cordova$AudioPlayer$STATE -> v
    void destroy() -> destroy
    void startRecording(java.lang.String) -> startRecording
    void moveFile(java.lang.String) -> moveFile
    void stopRecording() -> stopRecording
    void startPlaying(java.lang.String) -> startPlaying
    void seekToPlaying(int) -> seekToPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    long getCurrentPosition() -> getCurrentPosition
    boolean isStreaming(java.lang.String) -> isStreaming
    float getDuration(java.lang.String) -> getDuration
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    float getDurationInSeconds() -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void setState(org.apache.cordova.AudioPlayer$STATE) -> a
    int getState() -> getState
    void setVolume(float) -> setVolume
    boolean readyPlayer(java.lang.String) -> a
    void loadAudioFile(java.lang.String) -> b
    int[] $SWITCH_TABLE$org$apache$cordova$AudioPlayer$MODE() -> b
    int[] $SWITCH_TABLE$org$apache$cordova$AudioPlayer$STATE() -> c
org.apache.cordova.AudioPlayer$MODE -> org.apache.cordova.AudioPlayer$MODE:
    org.apache.cordova.AudioPlayer$MODE NONE -> NONE
    org.apache.cordova.AudioPlayer$MODE PLAY -> PLAY
    org.apache.cordova.AudioPlayer$MODE RECORD -> RECORD
    org.apache.cordova.AudioPlayer$MODE[] ENUM$VALUES -> a
    org.apache.cordova.AudioPlayer$MODE[] values() -> values
    org.apache.cordova.AudioPlayer$MODE valueOf(java.lang.String) -> valueOf
org.apache.cordova.AudioPlayer$STATE -> org.apache.cordova.AudioPlayer$STATE:
    org.apache.cordova.AudioPlayer$STATE MEDIA_NONE -> MEDIA_NONE
    org.apache.cordova.AudioPlayer$STATE MEDIA_STARTING -> MEDIA_STARTING
    org.apache.cordova.AudioPlayer$STATE MEDIA_RUNNING -> MEDIA_RUNNING
    org.apache.cordova.AudioPlayer$STATE MEDIA_PAUSED -> MEDIA_PAUSED
    org.apache.cordova.AudioPlayer$STATE MEDIA_STOPPED -> MEDIA_STOPPED
    org.apache.cordova.AudioPlayer$STATE MEDIA_LOADING -> MEDIA_LOADING
    org.apache.cordova.AudioPlayer$STATE[] ENUM$VALUES -> a
    org.apache.cordova.AudioPlayer$STATE[] values() -> values
    org.apache.cordova.AudioPlayer$STATE valueOf(java.lang.String) -> valueOf
org.apache.cordova.AuthenticationToken -> org.apache.cordova.AuthenticationToken:
    java.lang.String userName -> a
    java.lang.String password -> b
    java.lang.String getUserName() -> getUserName
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
org.apache.cordova.BatteryListener -> org.apache.cordova.BatteryListener:
    android.content.BroadcastReceiver receiver -> a
    org.apache.cordova.api.CallbackContext batteryCallbackContext -> b
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    void onReset() -> onReset
    void removeBatteryListener() -> a
    org.json.JSONObject getBatteryInfo(android.content.Intent) -> a
    void sendUpdate(org.json.JSONObject,boolean) -> a
    void access$0(org.apache.cordova.BatteryListener,android.content.Intent) -> a
org.apache.cordova.BatteryListener$1 -> org.apache.cordova.f:
    org.apache.cordova.BatteryListener this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.apache.cordova.CameraLauncher -> org.apache.cordova.CameraLauncher:
    int mQuality -> a
    int targetWidth -> b
    int targetHeight -> c
    android.net.Uri imageUri -> d
    int encodingType -> e
    int mediaType -> g
    boolean saveToPhotoAlbum -> h
    boolean correctOrientation -> i
    org.apache.cordova.api.CallbackContext callbackContext -> callbackContext
    int numPics -> j
    android.media.MediaScannerConnection conn -> k
    android.net.Uri scanMe -> l
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    java.lang.String getTempDirectoryPath() -> a
    void takePicture(int,int) -> takePicture
    void getImage(int,int) -> getImage
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.graphics.Bitmap getRotatedBitmap(int,android.graphics.Bitmap,org.apache.cordova.ExifHelper) -> a
    void writeUncompressedImage(android.net.Uri) -> a
    android.net.Uri getUriFromMediaStore() -> b
    android.graphics.Bitmap getScaledBitmap(java.lang.String) -> a
    int[] calculateAspectRatio(int,int) -> calculateAspectRatio
    int calculateSampleSize(int,int,int,int) -> calculateSampleSize
    android.database.Cursor queryImgDB(android.net.Uri) -> b
    void checkForDuplicateImage(int) -> a
    android.net.Uri whichContentStore() -> c
    void processPicture(android.graphics.Bitmap) -> processPicture
    void failPicture(java.lang.String) -> failPicture
    void onMediaScannerConnected() -> onMediaScannerConnected
    void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
org.apache.cordova.Capture -> org.apache.cordova.Capture:
    org.apache.cordova.api.CallbackContext callbackContext -> a
    long limit -> b
    int duration -> c
    org.json.JSONArray results -> d
    int numPics -> e
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    org.json.JSONObject getAudioVideoData(java.lang.String,org.json.JSONObject,boolean) -> a
    void captureAudio() -> a
    void captureImage() -> b
    void captureVideo(int) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    org.json.JSONObject createMediaFile(android.net.Uri) -> a
    org.json.JSONObject createErrorObject(int,java.lang.String) -> a
    void fail(org.json.JSONObject) -> fail
    android.database.Cursor queryImgDB(android.net.Uri) -> b
    android.net.Uri whichContentStore() -> c
org.apache.cordova.CompassListener -> org.apache.cordova.CompassListener:
    int STOPPED -> STOPPED
    int STARTING -> STARTING
    int RUNNING -> RUNNING
    int ERROR_FAILED_TO_START -> ERROR_FAILED_TO_START
    long TIMEOUT -> TIMEOUT
    int status -> a
    float heading -> b
    long timeStamp -> c
    long lastAccessTime -> d
    android.hardware.SensorManager sensorManager -> g
    android.hardware.Sensor mSensor -> e
    org.apache.cordova.api.CallbackContext callbackContext -> h
    void initialize(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    void onReset() -> onReset
    int start() -> start
    void stop() -> stop
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    int getStatus() -> getStatus
    float getHeading() -> getHeading
    void setTimeout(long) -> setTimeout
    long getTimeout() -> getTimeout
    void access$0(org.apache.cordova.CompassListener) -> a
org.apache.cordova.CompassListener$1 -> org.apache.cordova.g:
    org.apache.cordova.CompassListener this$0 -> a
    void run() -> run
org.apache.cordova.Config -> org.apache.cordova.Config:
    java.lang.String TAG -> TAG
    java.util.ArrayList whiteList -> a
    java.util.HashMap whiteListCache -> b
    java.lang.String startUrl -> c
    org.apache.cordova.Config self -> d
    void init(android.app.Activity) -> init
    void init() -> init
    void addWhiteListEntry(java.lang.String,boolean) -> addWhiteListEntry
    void _addWhiteListEntry(java.lang.String,boolean) -> a
    boolean isUrlWhiteListed(java.lang.String) -> isUrlWhiteListed
    java.lang.String getStartUrl() -> getStartUrl
org.apache.cordova.ContactAccessor -> org.apache.cordova.ContactAccessor:
    java.lang.String LOG_TAG -> LOG_TAG
    org.apache.cordova.api.CordovaInterface mApp -> mApp
    android.webkit.WebView mView -> mView
    boolean isRequired(java.lang.String,java.util.HashMap) -> isRequired
    java.util.HashMap buildPopulationSet(org.json.JSONArray) -> buildPopulationSet
    java.lang.String getJsonString(org.json.JSONObject,java.lang.String) -> getJsonString
    java.lang.String save(org.json.JSONObject) -> save
    org.json.JSONArray search(org.json.JSONArray,org.json.JSONObject) -> search
    org.json.JSONObject getContactById(java.lang.String) -> getContactById
    boolean remove(java.lang.String) -> remove
org.apache.cordova.ContactAccessor$WhereOptions -> org.apache.cordova.h:
    java.lang.String where -> b
    java.lang.String[] whereArgs -> c
    org.apache.cordova.ContactAccessor this$0 -> a
    void setWhere(java.lang.String) -> setWhere
    java.lang.String getWhere() -> getWhere
    void setWhereArgs(java.lang.String[]) -> setWhereArgs
    java.lang.String[] getWhereArgs() -> getWhereArgs
org.apache.cordova.ContactAccessorSdk5 -> org.apache.cordova.ContactAccessorSdk5:
    java.util.Map dbMap -> a
    org.json.JSONArray search(org.json.JSONArray,org.json.JSONObject) -> search
    org.json.JSONObject getContactById(java.lang.String) -> getContactById
    org.json.JSONArray populateContactArray(int,java.util.HashMap,android.database.Cursor) -> a
    org.apache.cordova.ContactAccessor$WhereOptions buildIdClause(java.util.Set,java.lang.String) -> a
    org.json.JSONObject populateContact(org.json.JSONObject,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray) -> a
    org.apache.cordova.ContactAccessor$WhereOptions buildWhereClause(org.json.JSONArray,java.lang.String) -> a
    boolean isWildCardSearch(org.json.JSONArray) -> a
    org.json.JSONObject organizationQuery(android.database.Cursor) -> a
    org.json.JSONObject addressQuery(android.database.Cursor) -> b
    org.json.JSONObject nameQuery(android.database.Cursor) -> c
    org.json.JSONObject phoneQuery(android.database.Cursor) -> d
    org.json.JSONObject emailQuery(android.database.Cursor) -> e
    org.json.JSONObject imQuery(android.database.Cursor) -> f
    org.json.JSONObject websiteQuery(android.database.Cursor) -> g
    org.json.JSONObject photoQuery(android.database.Cursor,java.lang.String) -> a
    java.lang.String save(org.json.JSONObject) -> save
    java.lang.String modifyContact(java.lang.String,org.json.JSONObject,java.lang.String,java.lang.String) -> a
    byte[] getPhotoBytes(java.lang.String) -> a
    java.lang.String createNewContact(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    boolean remove(java.lang.String) -> remove
    int getPhoneType(java.lang.String) -> b
    int getContactType(java.lang.String) -> c
    java.lang.String getContactType(int) -> a
    int getOrgType(java.lang.String) -> d
    int getAddressType(java.lang.String) -> e
    int getImType(java.lang.String) -> f
org.apache.cordova.ContactManager -> org.apache.cordova.ContactManager:
    org.apache.cordova.ContactAccessor contactAccessor -> a
    int UNKNOWN_ERROR -> UNKNOWN_ERROR
    int INVALID_ARGUMENT_ERROR -> INVALID_ARGUMENT_ERROR
    int TIMEOUT_ERROR -> TIMEOUT_ERROR
    int PENDING_OPERATION_ERROR -> PENDING_OPERATION_ERROR
    int IO_ERROR -> IO_ERROR
    int NOT_SUPPORTED_ERROR -> NOT_SUPPORTED_ERROR
    int PERMISSION_DENIED_ERROR -> PERMISSION_DENIED_ERROR
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    org.apache.cordova.ContactAccessor access$0(org.apache.cordova.ContactManager) -> a
org.apache.cordova.ContactManager$1 -> org.apache.cordova.i:
    org.apache.cordova.ContactManager this$0 -> a
    org.json.JSONArray val$filter -> b
    org.json.JSONObject val$options -> c
    org.apache.cordova.api.CallbackContext val$callbackContext -> d
    void run() -> run
org.apache.cordova.ContactManager$2 -> org.apache.cordova.j:
    org.apache.cordova.ContactManager this$0 -> a
    org.json.JSONObject val$contact -> b
    org.apache.cordova.api.CallbackContext val$callbackContext -> c
    void run() -> run
org.apache.cordova.ContactManager$3 -> org.apache.cordova.k:
    org.apache.cordova.ContactManager this$0 -> a
    java.lang.String val$contactId -> b
    org.apache.cordova.api.CallbackContext val$callbackContext -> c
    void run() -> run
org.apache.cordova.CordovaActivity -> org.apache.cordova.CordovaActivity:
    java.lang.String TAG -> TAG
    org.apache.cordova.CordovaWebView appView -> appView
    org.apache.cordova.CordovaWebViewClient webViewClient -> webViewClient
    android.widget.LinearLayout root -> root
    boolean cancelLoadUrl -> cancelLoadUrl
    android.app.ProgressDialog spinnerDialog -> spinnerDialog
    java.util.concurrent.ExecutorService threadPool -> a
    int ACTIVITY_STARTING -> b
    int ACTIVITY_RUNNING -> c
    int ACTIVITY_EXITING -> d
    int activityState -> e
    org.apache.cordova.api.CordovaPlugin activityResultCallback -> activityResultCallback
    boolean activityResultKeepRunning -> activityResultKeepRunning
    int backgroundColor -> f
    int splashscreen -> splashscreen
    int splashscreenTime -> splashscreenTime
    int loadUrlTimeoutValue -> loadUrlTimeoutValue
    boolean keepRunning -> keepRunning
    java.lang.String initCallbackClass -> g
    android.app.Dialog splashDialog -> splashDialog
    void setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String) -> setAuthenticationToken
    org.apache.cordova.AuthenticationToken removeAuthenticationToken(java.lang.String,java.lang.String) -> removeAuthenticationToken
    org.apache.cordova.AuthenticationToken getAuthenticationToken(java.lang.String,java.lang.String) -> getAuthenticationToken
    void clearAuthenticationTokens() -> clearAuthenticationTokens
    void onCreate(android.os.Bundle) -> onCreate
    android.app.Activity getActivity() -> getActivity
    void init() -> init
    void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient) -> init
    void loadUrl(java.lang.String) -> loadUrl
    void loadUrl(java.lang.String,int) -> loadUrl
    void cancelLoadUrl() -> cancelLoadUrl
    void clearCache() -> clearCache
    void clearHistory() -> clearHistory
    boolean backHistory() -> backHistory
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean getBooleanProperty(java.lang.String,boolean) -> getBooleanProperty
    int getIntegerProperty(java.lang.String,int) -> getIntegerProperty
    java.lang.String getStringProperty(java.lang.String,java.lang.String) -> getStringProperty
    double getDoubleProperty(java.lang.String,double) -> getDoubleProperty
    void setBooleanProperty(java.lang.String,boolean) -> setBooleanProperty
    void setIntegerProperty(java.lang.String,int) -> setIntegerProperty
    void setStringProperty(java.lang.String,java.lang.String) -> setStringProperty
    void setDoubleProperty(java.lang.String,double) -> setDoubleProperty
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void postMessage(java.lang.String,java.lang.Object) -> postMessage
    void addService(java.lang.String,java.lang.String) -> addService
    void sendJavascript(java.lang.String) -> sendJavascript
    void spinnerStart(java.lang.String,java.lang.String) -> spinnerStart
    void spinnerStop() -> spinnerStop
    void endActivity() -> endActivity
    void startActivityForResult(org.apache.cordova.api.CordovaPlugin,android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setActivityResultCallback(org.apache.cordova.api.CordovaPlugin) -> setActivityResultCallback
    void onReceivedError(int,java.lang.String,java.lang.String) -> onReceivedError
    void displayError(java.lang.String,java.lang.String,java.lang.String,boolean) -> displayError
    boolean isUrlWhiteListed(java.lang.String) -> isUrlWhiteListed
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.content.Context getContext() -> getContext
    void showWebPage(java.lang.String,boolean,boolean,java.util.HashMap) -> showWebPage
    void removeSplashScreen() -> removeSplashScreen
    void showSplashScreen(int) -> showSplashScreen
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
org.apache.cordova.CordovaActivity$1 -> org.apache.cordova.l:
    org.apache.cordova.CordovaActivity this$0 -> a
    org.apache.cordova.CordovaActivity val$me -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.CordovaActivity$2 -> org.apache.cordova.m:
    org.apache.cordova.CordovaActivity this$0 -> a
    org.apache.cordova.CordovaActivity val$me -> b
    java.lang.String val$errorUrl -> c
    void run() -> run
org.apache.cordova.CordovaActivity$3 -> org.apache.cordova.n:
    org.apache.cordova.CordovaActivity this$0 -> a
    boolean val$exit -> b
    org.apache.cordova.CordovaActivity val$me -> c
    java.lang.String val$description -> d
    java.lang.String val$failingUrl -> e
    void run() -> run
org.apache.cordova.CordovaActivity$4 -> org.apache.cordova.o:
    org.apache.cordova.CordovaActivity this$0 -> a
    org.apache.cordova.CordovaActivity val$me -> b
    java.lang.String val$message -> c
    java.lang.String val$title -> d
    java.lang.String val$button -> e
    boolean val$exit -> f
    void run() -> run
org.apache.cordova.CordovaActivity$4$1 -> org.apache.cordova.p:
    org.apache.cordova.CordovaActivity$4 this$1 -> a
    boolean val$exit -> b
    org.apache.cordova.CordovaActivity val$me -> c
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaActivity$5 -> org.apache.cordova.q:
    org.apache.cordova.CordovaActivity this$0 -> a
    org.apache.cordova.CordovaActivity val$that -> b
    int val$time -> c
    void run() -> run
org.apache.cordova.CordovaActivity$5$1 -> org.apache.cordova.s:
    org.apache.cordova.CordovaActivity$5 this$1 -> a
    void run() -> run
org.apache.cordova.CordovaArgs -> org.apache.cordova.CordovaArgs:
    org.json.JSONArray baseArgs -> a
    java.lang.Object get(int) -> get
    boolean getBoolean(int) -> getBoolean
    double getDouble(int) -> getDouble
    int getInt(int) -> getInt
    org.json.JSONArray getJSONArray(int) -> getJSONArray
    org.json.JSONObject getJSONObject(int) -> getJSONObject
    long getLong(int) -> getLong
    java.lang.String getString(int) -> getString
    java.lang.Object opt(int) -> opt
    boolean optBoolean(int) -> optBoolean
    double optDouble(int) -> optDouble
    int optInt(int) -> optInt
    org.json.JSONArray optJSONArray(int) -> optJSONArray
    org.json.JSONObject optJSONObject(int) -> optJSONObject
    long optLong(int) -> optLong
    java.lang.String optString(int) -> optString
    boolean isNull(int) -> isNull
    byte[] getArrayBuffer(int) -> getArrayBuffer
org.apache.cordova.CordovaChromeClient -> org.apache.cordova.CordovaChromeClient:
    int FILECHOOSER_RESULTCODE -> FILECHOOSER_RESULTCODE
    java.lang.String TAG -> a
    long MAX_QUOTA -> b
    org.apache.cordova.api.CordovaInterface cordova -> c
    org.apache.cordova.CordovaWebView appView -> d
    android.view.View mVideoProgressView -> e
    android.webkit.ValueCallback mUploadMessage -> mUploadMessage
    void setWebView(org.apache.cordova.CordovaWebView) -> setWebView
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onConsoleMessage(java.lang.String,int,java.lang.String) -> onConsoleMessage
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
    android.view.View getVideoLoadingProgressView() -> getVideoLoadingProgressView
    void openFileChooser(android.webkit.ValueCallback) -> openFileChooser
    void openFileChooser(android.webkit.ValueCallback,java.lang.String) -> openFileChooser
    void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String) -> openFileChooser
    android.webkit.ValueCallback getValueCallback() -> getValueCallback
org.apache.cordova.CordovaChromeClient$1 -> org.apache.cordova.t:
    org.apache.cordova.CordovaChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaChromeClient$2 -> org.apache.cordova.u:
    org.apache.cordova.CordovaChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.CordovaChromeClient$3 -> org.apache.cordova.v:
    org.apache.cordova.CordovaChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
org.apache.cordova.CordovaChromeClient$4 -> org.apache.cordova.w:
    org.apache.cordova.CordovaChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaChromeClient$5 -> org.apache.cordova.x:
    org.apache.cordova.CordovaChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaChromeClient$6 -> org.apache.cordova.y:
    org.apache.cordova.CordovaChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.CordovaChromeClient$7 -> org.apache.cordova.z:
    org.apache.cordova.CordovaChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
org.apache.cordova.CordovaChromeClient$8 -> org.apache.cordova.aa:
    org.apache.cordova.CordovaChromeClient this$0 -> a
    android.widget.EditText val$input -> b
    android.webkit.JsPromptResult val$res -> c
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaChromeClient$9 -> org.apache.cordova.ab:
    org.apache.cordova.CordovaChromeClient this$0 -> a
    android.webkit.JsPromptResult val$res -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaLocationListener -> org.apache.cordova.CordovaLocationListener:
    int PERMISSION_DENIED -> PERMISSION_DENIED
    int POSITION_UNAVAILABLE -> POSITION_UNAVAILABLE
    int TIMEOUT -> TIMEOUT
    android.location.LocationManager locationManager -> locationManager
    org.apache.cordova.GeoBroker owner -> a
    boolean running -> running
    java.util.HashMap watches -> watches
    java.util.List callbacks -> b
    java.util.Timer timer -> c
    java.lang.String TAG -> d
    void fail(int,java.lang.String) -> fail
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    int size() -> size
    void addWatch(java.lang.String,org.apache.cordova.api.CallbackContext) -> addWatch
    void addCallback(org.apache.cordova.api.CallbackContext,int) -> addCallback
    void clearWatch(java.lang.String) -> clearWatch
    void destroy() -> destroy
    void start() -> start
    void stop() -> a
    void cancelTimer() -> b
    java.util.List access$0(org.apache.cordova.CordovaLocationListener) -> a
    void access$1(org.apache.cordova.CordovaLocationListener) -> b
org.apache.cordova.CordovaLocationListener$LocationTimeoutTask -> org.apache.cordova.ac:
    org.apache.cordova.api.CallbackContext callbackContext -> b
    org.apache.cordova.CordovaLocationListener listener -> c
    org.apache.cordova.CordovaLocationListener this$0 -> a
    void run() -> run
org.apache.cordova.CordovaResourceApi -> org.apache.cordova.CordovaResourceApi:
    int URI_TYPE_FILE -> URI_TYPE_FILE
    int URI_TYPE_ASSET -> URI_TYPE_ASSET
    int URI_TYPE_CONTENT -> URI_TYPE_CONTENT
    int URI_TYPE_RESOURCE -> URI_TYPE_RESOURCE
    int URI_TYPE_DATA -> URI_TYPE_DATA
    int URI_TYPE_HTTP -> URI_TYPE_HTTP
    int URI_TYPE_HTTPS -> URI_TYPE_HTTPS
    int URI_TYPE_UNKNOWN -> URI_TYPE_UNKNOWN
    java.lang.String[] LOCAL_FILE_PROJECTION -> b
    com.squareup.okhttp.OkHttpClient httpClient -> c
    java.lang.Thread jsThread -> a
    android.content.res.AssetManager assetManager -> d
    android.content.ContentResolver contentResolver -> e
    org.apache.cordova.api.PluginManager pluginManager -> f
    boolean threadCheckingEnabled -> g
    void setThreadCheckingEnabled(boolean) -> setThreadCheckingEnabled
    boolean isThreadCheckingEnabled() -> isThreadCheckingEnabled
    int getUriType(android.net.Uri) -> getUriType
    android.net.Uri remapUri(android.net.Uri) -> remapUri
    java.lang.String remapPath(java.lang.String) -> remapPath
    java.io.File mapUriToFile(android.net.Uri) -> mapUriToFile
    org.apache.cordova.CordovaResourceApi$OpenForReadResult openForRead(android.net.Uri) -> openForRead
    org.apache.cordova.CordovaResourceApi$OpenForReadResult openForRead(android.net.Uri,boolean) -> openForRead
    java.io.OutputStream openOutputStream(android.net.Uri) -> openOutputStream
    java.io.OutputStream openOutputStream(android.net.Uri,boolean) -> openOutputStream
    java.net.HttpURLConnection createHttpConnection(android.net.Uri) -> createHttpConnection
    void copyResource(org.apache.cordova.CordovaResourceApi$OpenForReadResult,java.io.OutputStream) -> copyResource
    void copyResource(android.net.Uri,java.io.OutputStream) -> copyResource
    void assertBackgroundThread() -> a
    org.apache.cordova.CordovaResourceApi$OpenForReadResult readDataUri(android.net.Uri) -> a
    void assertNonRelative(android.net.Uri) -> b
org.apache.cordova.CordovaResourceApi$OpenForReadResult -> org.apache.cordova.CordovaResourceApi$OpenForReadResult:
    android.net.Uri uri -> uri
    java.io.InputStream inputStream -> inputStream
    java.lang.String mimeType -> mimeType
    long length -> length
    android.content.res.AssetFileDescriptor assetFd -> assetFd
org.apache.cordova.CordovaWebView -> org.apache.cordova.CordovaWebView:
    java.lang.String TAG -> TAG
    java.util.ArrayList keyDownCodes -> f
    java.util.ArrayList keyUpCodes -> g
    org.apache.cordova.api.PluginManager pluginManager -> pluginManager
    boolean paused -> h
    android.content.BroadcastReceiver receiver -> i
    org.apache.cordova.api.CordovaInterface cordova -> j
    org.apache.cordova.CordovaWebViewClient viewClient -> a
    org.apache.cordova.CordovaChromeClient chromeClient -> k
    java.lang.String url -> l
    int loadUrlTimeout -> b
    boolean bound -> m
    boolean handleButton -> n
    long lastMenuEventTime -> o
    org.apache.cordova.NativeToJsMessageQueue jsMessageQueue -> c
    org.apache.cordova.ExposedJsApi exposedJsApi -> d
    android.view.View mCustomView -> p
    android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback -> q
    org.apache.cordova.CordovaWebView$ActivityResult mResult -> r
    org.apache.cordova.CordovaResourceApi resourceApi -> s
    android.widget.FrameLayout$LayoutParams COVER_SCREEN_GRAVITY_CENTER -> e
    void initWebViewClient$7532c0af() -> a
    void setup() -> b
    boolean shouldRequestFocusOnInit() -> shouldRequestFocusOnInit
    void updateUserAgentString() -> c
    void setWebViewClient(org.apache.cordova.CordovaWebViewClient) -> setWebViewClient
    void setWebChromeClient(org.apache.cordova.CordovaChromeClient) -> setWebChromeClient
    org.apache.cordova.CordovaChromeClient getWebChromeClient() -> getWebChromeClient
    void loadUrl(java.lang.String) -> loadUrl
    void loadUrl(java.lang.String,int) -> loadUrl
    void loadUrlIntoView(java.lang.String) -> loadUrlIntoView
    void loadUrlNow(java.lang.String) -> a
    void loadUrlIntoView(java.lang.String,int) -> loadUrlIntoView
    void sendJavascript(java.lang.String) -> sendJavascript
    void sendPluginResult(org.apache.cordova.api.PluginResult,java.lang.String) -> sendPluginResult
    void postMessage(java.lang.String,java.lang.Object) -> postMessage
    boolean backHistory() -> backHistory
    void showWebPage(java.lang.String,boolean,boolean,java.util.HashMap) -> showWebPage
    void loadConfiguration() -> d
    java.lang.String getProperty(java.lang.String,java.lang.String) -> getProperty
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void bindButton(boolean) -> bindButton
    void bindButton(java.lang.String,boolean) -> bindButton
    void bindButton(int,boolean,boolean) -> bindButton
    boolean isBackButtonBound() -> isBackButtonBound
    void handlePause(boolean) -> handlePause
    void handleResume(boolean,boolean) -> handleResume
    void handleDestroy() -> handleDestroy
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean isPaused() -> isPaused
    boolean hadKeyEvent() -> hadKeyEvent
    void printBackForwardList() -> printBackForwardList
    boolean startOfHistory() -> startOfHistory
    void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> showCustomView
    void hideCustomView() -> hideCustomView
    boolean isCustomViewShowing() -> isCustomViewShowing
    android.webkit.WebBackForwardList restoreState(android.os.Bundle) -> restoreState
    void storeResult(int,int,android.content.Intent) -> storeResult
    org.apache.cordova.CordovaResourceApi getResourceApi() -> getResourceApi
    void access$0(org.apache.cordova.CordovaWebView) -> a
    org.apache.cordova.api.CordovaInterface access$1(org.apache.cordova.CordovaWebView) -> b
org.apache.cordova.CordovaWebView$1 -> org.apache.cordova.ad:
    org.apache.cordova.CordovaWebView this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.apache.cordova.CordovaWebView$2 -> org.apache.cordova.ae:
    org.apache.cordova.CordovaWebView this$0 -> a
    org.apache.cordova.CordovaWebView val$me -> b
    java.lang.String val$url -> c
    void run() -> run
org.apache.cordova.CordovaWebView$3 -> org.apache.cordova.af:
    org.apache.cordova.CordovaWebView this$0 -> a
    int val$loadUrlTimeoutValue -> b
    org.apache.cordova.CordovaWebView val$me -> c
    int val$currentLoadUrlTimeout -> d
    java.lang.Runnable val$loadError -> e
    void run() -> run
org.apache.cordova.CordovaWebView$4 -> org.apache.cordova.ag:
    org.apache.cordova.CordovaWebView this$0 -> a
    java.lang.Runnable val$timeoutCheck -> b
    org.apache.cordova.CordovaWebView val$me -> c
    java.lang.String val$url -> d
    void run() -> run
org.apache.cordova.CordovaWebView$ActivityResult -> org.apache.cordova.ah:
    int request -> a
    int result -> b
    android.content.Intent incoming -> c
    org.apache.cordova.CordovaWebView this$0 -> d
org.apache.cordova.CordovaWebViewClient -> org.apache.cordova.CordovaWebViewClient:
    org.apache.cordova.api.CordovaInterface cordova -> a
    org.apache.cordova.CordovaWebView appView -> b
    boolean doClearHistory -> c
    java.util.Hashtable authenticationTokens -> d
    void setWebView(org.apache.cordova.CordovaWebView) -> setWebView
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String) -> setAuthenticationToken
    org.apache.cordova.AuthenticationToken removeAuthenticationToken(java.lang.String,java.lang.String) -> removeAuthenticationToken
    org.apache.cordova.AuthenticationToken getAuthenticationToken(java.lang.String,java.lang.String) -> getAuthenticationToken
    void clearAuthenticationTokens() -> clearAuthenticationTokens
org.apache.cordova.CordovaWebViewClient$1 -> org.apache.cordova.ai:
    org.apache.cordova.CordovaWebViewClient this$0 -> a
    void run() -> run
org.apache.cordova.CordovaWebViewClient$1$1 -> org.apache.cordova.aj:
    org.apache.cordova.CordovaWebViewClient$1 this$1 -> a
    void run() -> run
org.apache.cordova.Device -> org.apache.cordova.Device:
    java.lang.String TAG -> TAG
    java.lang.String cordovaVersion -> cordovaVersion
    java.lang.String platform -> platform
    java.lang.String uuid -> uuid
    android.content.BroadcastReceiver telephonyReceiver -> a
    void initialize(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    java.lang.String getPlatform() -> getPlatform
    java.lang.String getUuid() -> getUuid
    java.lang.String getCordovaVersion() -> getCordovaVersion
    java.lang.String getModel() -> getModel
    java.lang.String getProductName() -> getProductName
    java.lang.String getOSVersion() -> getOSVersion
    java.lang.String getSDKVersion() -> getSDKVersion
    java.lang.String getTimeZoneID() -> getTimeZoneID
org.apache.cordova.Device$1 -> org.apache.cordova.ak:
    org.apache.cordova.Device this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.apache.cordova.DirectoryManager -> org.apache.cordova.DirectoryManager:
    boolean testFileExists(java.lang.String) -> testFileExists
    long getFreeDiskSpace(boolean) -> getFreeDiskSpace
    long freeSpaceCalculation(java.lang.String) -> a
    boolean testSaveLocationExists() -> testSaveLocationExists
    java.lang.String getTempDirectoryPath(android.content.Context) -> getTempDirectoryPath
org.apache.cordova.DroidGap -> org.apache.cordova.DroidGap:
org.apache.cordova.Echo -> org.apache.cordova.Echo:
    boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.api.CallbackContext) -> execute
org.apache.cordova.Echo$1 -> org.apache.cordova.al:
    org.apache.cordova.Echo this$0 -> a
    org.apache.cordova.api.CallbackContext val$callbackContext -> b
    java.lang.String val$result -> c
    void run() -> run
org.apache.cordova.ExifHelper -> org.apache.cordova.ExifHelper:
    java.lang.String aperture -> a
    java.lang.String datetime -> b
    java.lang.String exposureTime -> c
    java.lang.String flash -> d
    java.lang.String focalLength -> e
    java.lang.String gpsAltitude -> f
    java.lang.String gpsAltitudeRef -> g
    java.lang.String gpsDateStamp -> h
    java.lang.String gpsLatitude -> i
    java.lang.String gpsLatitudeRef -> j
    java.lang.String gpsLongitude -> k
    java.lang.String gpsLongitudeRef -> l
    java.lang.String gpsProcessingMethod -> m
    java.lang.String gpsTimestamp -> n
    java.lang.String iso -> o
    java.lang.String make -> p
    java.lang.String model -> q
    java.lang.String orientation -> r
    java.lang.String whiteBalance -> s
    android.media.ExifInterface inFile -> t
    android.media.ExifInterface outFile -> u
    void createInFile(java.lang.String) -> createInFile
    void createOutFile(java.lang.String) -> createOutFile
    void readExifData() -> readExifData
    void writeExifData() -> writeExifData
    int getOrientation() -> getOrientation
    void resetOrientation() -> resetOrientation
org.apache.cordova.ExposedJsApi -> org.apache.cordova.am:
    org.apache.cordova.api.PluginManager pluginManager -> a
    org.apache.cordova.NativeToJsMessageQueue jsMessageQueue -> b
    java.lang.String exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> exec
    void setNativeToJsBridgeMode(int) -> setNativeToJsBridgeMode
    java.lang.String retrieveJsMessages(boolean) -> retrieveJsMessages
org.apache.cordova.FileHelper -> org.apache.cordova.FileHelper:
    java.lang.String getRealPath(java.lang.String,org.apache.cordova.api.CordovaInterface) -> getRealPath
    java.lang.String getRealPath(android.net.Uri,org.apache.cordova.api.CordovaInterface) -> getRealPath
    java.io.InputStream getInputStreamFromUriString(java.lang.String,org.apache.cordova.api.CordovaInterface) -> getInputStreamFromUriString
    java.lang.String stripFileProtocol(java.lang.String) -> stripFileProtocol
    java.lang.String getMimeTypeForExtension(java.lang.String) -> getMimeTypeForExtension
    java.lang.String getMimeType(java.lang.String,org.apache.cordova.api.CordovaInterface) -> getMimeType
org.apache.cordova.FileProgressResult -> org.apache.cordova.FileProgressResult:
    boolean lengthComputable -> a
    long loaded -> b
    long total -> c
    boolean getLengthComputable() -> getLengthComputable
    void setLengthComputable(boolean) -> setLengthComputable
    long getLoaded() -> getLoaded
    void setLoaded(long) -> setLoaded
    long getTotal() -> getTotal
    void setTotal(long) -> setTotal
    org.json.JSONObject toJSONObject() -> toJSONObject
org.apache.cordova.FileTransfer -> org.apache.cordova.FileTransfer:
    int FILE_NOT_FOUND_ERR -> FILE_NOT_FOUND_ERR
    int INVALID_URL_ERR -> INVALID_URL_ERR
    int CONNECTION_ERR -> CONNECTION_ERR
    int ABORTED_ERR -> ABORTED_ERR
    java.util.HashMap activeRequests -> a
    javax.net.ssl.HostnameVerifier DO_NOT_VERIFY -> b
    javax.net.ssl.TrustManager[] trustAllCerts -> c
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    javax.net.ssl.SSLSocketFactory trustAllHosts(javax.net.ssl.HttpsURLConnection) -> b
    org.json.JSONObject createFileTransferError(int,java.lang.String,java.lang.String,java.net.URLConnection) -> b
    org.json.JSONObject createFileTransferError(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer) -> a
    java.lang.String getArgument(org.json.JSONArray,int,java.lang.String) -> a
    java.util.HashMap access$0() -> a
    javax.net.ssl.SSLSocketFactory access$1(javax.net.ssl.HttpsURLConnection) -> a
    javax.net.ssl.HostnameVerifier access$2() -> b
    void access$3(java.net.URLConnection,org.json.JSONObject) -> a
    void access$4(java.io.Closeable) -> a
    org.apache.cordova.FileTransfer$TrackingInputStream access$5(java.net.URLConnection) -> a
    org.json.JSONObject access$6(int,java.lang.String,java.lang.String,java.net.URLConnection) -> a
org.apache.cordova.FileTransfer$1 -> org.apache.cordova.an:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
org.apache.cordova.FileTransfer$2 -> org.apache.cordova.ao:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
org.apache.cordova.FileTransfer$3 -> org.apache.cordova.ap:
    org.apache.cordova.FileTransfer this$0 -> a
    org.apache.cordova.FileTransfer$RequestContext val$context -> b
    java.lang.String val$objectId -> c
    boolean val$trustEveryone -> d
    boolean val$useHttps -> e
    org.apache.cordova.CordovaResourceApi val$resourceApi -> f
    android.net.Uri val$targetUri -> g
    java.lang.String val$httpMethod -> h
    java.lang.String val$target -> i
    org.json.JSONObject val$headers -> j
    org.json.JSONObject val$params -> k
    java.lang.String val$fileKey -> l
    java.lang.String val$fileName -> m
    java.lang.String val$mimeType -> n
    android.net.Uri val$sourceUri -> o
    boolean val$chunkedMode -> p
    java.lang.String val$source -> q
    void run() -> run
org.apache.cordova.FileTransfer$4 -> org.apache.cordova.aq:
    org.apache.cordova.FileTransfer this$0 -> a
    org.apache.cordova.FileTransfer$RequestContext val$context -> b
    java.lang.String val$objectId -> c
    boolean val$trustEveryone -> d
    boolean val$useHttps -> e
    java.lang.String val$source -> f
    java.lang.String val$target -> g
    org.apache.cordova.CordovaResourceApi val$resourceApi -> h
    android.net.Uri val$targetUri -> i
    android.net.Uri val$sourceUri -> j
    boolean val$isLocalTransfer -> k
    org.json.JSONObject val$headers -> l
    void run() -> run
org.apache.cordova.FileTransfer$5 -> org.apache.cordova.ar:
    org.apache.cordova.FileTransfer this$0 -> a
    org.apache.cordova.FileTransfer$RequestContext val$context -> b
    void run() -> run
org.apache.cordova.FileTransfer$ExposedGZIPInputStream -> org.apache.cordova.as:
    java.util.zip.Inflater getInflater() -> getInflater
org.apache.cordova.FileTransfer$RequestContext -> org.apache.cordova.at:
    java.lang.String source -> a
    java.lang.String target -> b
    java.io.File targetFile -> c
    org.apache.cordova.api.CallbackContext callbackContext -> d
    java.io.InputStream currentInputStream -> e
    java.io.OutputStream currentOutputStream -> f
    boolean aborted -> g
    void sendPluginResult(org.apache.cordova.api.PluginResult) -> a
org.apache.cordova.FileTransfer$SimpleTrackingInputStream -> org.apache.cordova.au:
    long bytesRead -> a
    int updateBytesRead(int) -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long getTotalRawBytesRead() -> getTotalRawBytesRead
org.apache.cordova.FileTransfer$TrackingGZIPInputStream -> org.apache.cordova.av:
    org.apache.cordova.FileTransfer$ExposedGZIPInputStream gzin -> a
    long getTotalRawBytesRead() -> getTotalRawBytesRead
org.apache.cordova.FileTransfer$TrackingInputStream -> org.apache.cordova.aw:
    long getTotalRawBytesRead() -> getTotalRawBytesRead
org.apache.cordova.FileUploadResult -> org.apache.cordova.FileUploadResult:
    long bytesSent -> a
    int responseCode -> b
    java.lang.String response -> c
    java.lang.String objectId -> d
    long getBytesSent() -> getBytesSent
    void setBytesSent(long) -> setBytesSent
    int getResponseCode() -> getResponseCode
    void setResponseCode(int) -> setResponseCode
    java.lang.String getResponse() -> getResponse
    void setResponse(java.lang.String) -> setResponse
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    org.json.JSONObject toJSONObject() -> toJSONObject
org.apache.cordova.FileUtils -> org.apache.cordova.FileUtils:
    int NOT_FOUND_ERR -> NOT_FOUND_ERR
    int SECURITY_ERR -> SECURITY_ERR
    int ABORT_ERR -> ABORT_ERR
    int NOT_READABLE_ERR -> NOT_READABLE_ERR
    int ENCODING_ERR -> ENCODING_ERR
    int NO_MODIFICATION_ALLOWED_ERR -> NO_MODIFICATION_ALLOWED_ERR
    int INVALID_STATE_ERR -> INVALID_STATE_ERR
    int SYNTAX_ERR -> SYNTAX_ERR
    int INVALID_MODIFICATION_ERR -> INVALID_MODIFICATION_ERR
    int QUOTA_EXCEEDED_ERR -> QUOTA_EXCEEDED_ERR
    int TYPE_MISMATCH_ERR -> TYPE_MISMATCH_ERR
    int PATH_EXISTS_ERR -> PATH_EXISTS_ERR
    int TEMPORARY -> TEMPORARY
    int PERSISTENT -> PERSISTENT
    int RESOURCE -> RESOURCE
    int APPLICATION -> APPLICATION
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void notifyDelete(java.lang.String) -> a
    org.json.JSONArray readEntries(java.lang.String) -> b
    org.json.JSONObject transferTo(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    org.json.JSONObject copyFile(java.io.File,java.io.File) -> a
    void copyAction(java.io.File,java.io.File) -> b
    org.json.JSONObject copyDirectory(java.io.File,java.io.File) -> c
    boolean isCopyOnItself(java.lang.String,java.lang.String) -> a
    boolean removeDirRecursively(java.io.File) -> a
    org.json.JSONObject getFile(java.lang.String,java.lang.String,org.json.JSONObject,boolean) -> a
    boolean atRootDirectory(java.lang.String) -> c
    java.io.File createFileObject(java.lang.String) -> d
    org.json.JSONObject getEntry(java.io.File) -> getEntry
    org.json.JSONObject getEntry(java.lang.String) -> e
    void readFileAs(java.lang.String,int,int,org.apache.cordova.api.CallbackContext,java.lang.String,int) -> readFileAs
    long write(java.lang.String,java.lang.String,int,boolean) -> write
    long truncateFile(java.lang.String,long) -> a
    byte[] access$0(org.apache.cordova.FileUtils,java.lang.String,int,int) -> a
org.apache.cordova.FileUtils$1 -> org.apache.cordova.ax:
    org.apache.cordova.FileUtils this$0 -> a
    java.lang.String val$filename -> b
    int val$start -> c
    int val$end -> d
    int val$resultType -> e
    java.lang.String val$encoding -> f
    org.apache.cordova.api.CallbackContext val$callbackContext -> g
    void run() -> run
org.apache.cordova.GPSListener -> org.apache.cordova.GPSListener:
    void start() -> start
org.apache.cordova.GeoBroker -> org.apache.cordova.GeoBroker:
    org.apache.cordova.GPSListener gpsListener -> a
    org.apache.cordova.NetworkListener networkListener -> b
    android.location.LocationManager locationManager -> c
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    void onReset() -> onReset
    org.json.JSONObject returnLocationJSON(android.location.Location) -> returnLocationJSON
    void win(android.location.Location,org.apache.cordova.api.CallbackContext,boolean) -> win
    void fail(int,java.lang.String,org.apache.cordova.api.CallbackContext,boolean) -> fail
    boolean isGlobalListener(org.apache.cordova.CordovaLocationListener) -> isGlobalListener
org.apache.cordova.Globalization -> org.apache.cordova.Globalization:
    java.lang.String GETLOCALENAME -> GETLOCALENAME
    java.lang.String DATETOSTRING -> DATETOSTRING
    java.lang.String STRINGTODATE -> STRINGTODATE
    java.lang.String GETDATEPATTERN -> GETDATEPATTERN
    java.lang.String GETDATENAMES -> GETDATENAMES
    java.lang.String ISDAYLIGHTSAVINGSTIME -> ISDAYLIGHTSAVINGSTIME
    java.lang.String GETFIRSTDAYOFWEEK -> GETFIRSTDAYOFWEEK
    java.lang.String NUMBERTOSTRING -> NUMBERTOSTRING
    java.lang.String STRINGTONUMBER -> STRINGTONUMBER
    java.lang.String GETNUMBERPATTERN -> GETNUMBERPATTERN
    java.lang.String GETCURRENCYPATTERN -> GETCURRENCYPATTERN
    java.lang.String GETPREFERREDLANGUAGE -> GETPREFERREDLANGUAGE
    java.lang.String OPTIONS -> OPTIONS
    java.lang.String FORMATLENGTH -> FORMATLENGTH
    java.lang.String MEDIUM -> MEDIUM
    java.lang.String LONG -> LONG
    java.lang.String FULL -> FULL
    java.lang.String SELECTOR -> SELECTOR
    java.lang.String DATE -> DATE
    java.lang.String TIME -> TIME
    java.lang.String DATESTRING -> DATESTRING
    java.lang.String TYPE -> TYPE
    java.lang.String ITEM -> ITEM
    java.lang.String NARROW -> NARROW
    java.lang.String WIDE -> WIDE
    java.lang.String MONTHS -> MONTHS
    java.lang.String DAYS -> DAYS
    java.lang.String NUMBER -> NUMBER
    java.lang.String NUMBERSTRING -> NUMBERSTRING
    java.lang.String PERCENT -> PERCENT
    java.lang.String CURRENCY -> CURRENCY
    java.lang.String CURRENCYCODE -> CURRENCYCODE
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    org.json.JSONObject getLocaleName() -> a
    org.json.JSONObject getPreferredLanguage() -> b
    org.json.JSONObject getDateToString(org.json.JSONArray) -> a
    org.json.JSONObject getStringtoDate(org.json.JSONArray) -> b
    org.json.JSONObject getDatePattern(org.json.JSONArray) -> c
    org.json.JSONObject getDateNames(org.json.JSONArray) -> d
    org.json.JSONObject getIsDayLightSavingsTime(org.json.JSONArray) -> e
    org.json.JSONObject getFirstDayOfWeek$6f132fd() -> c
    org.json.JSONObject getNumberToString(org.json.JSONArray) -> f
    org.json.JSONObject getStringToNumber(org.json.JSONArray) -> g
    org.json.JSONObject getNumberPattern(org.json.JSONArray) -> h
    org.json.JSONObject getCurrencyPattern(org.json.JSONArray) -> i
    java.text.DecimalFormat getNumberFormatInstance(org.json.JSONArray) -> j
org.apache.cordova.Globalization$1 -> org.apache.cordova.ay:
    org.apache.cordova.Globalization this$0 -> a
    java.util.Map val$namesMap -> b
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.cordova.GlobalizationError -> org.apache.cordova.GlobalizationError:
    java.lang.String UNKNOWN_ERROR -> UNKNOWN_ERROR
    java.lang.String FORMATTING_ERROR -> FORMATTING_ERROR
    java.lang.String PARSING_ERROR -> PARSING_ERROR
    java.lang.String PATTERN_ERROR -> PATTERN_ERROR
    int error -> a
    java.lang.String getErrorString() -> getErrorString
    int getErrorCode() -> getErrorCode
    org.json.JSONObject toJson() -> toJson
org.apache.cordova.HttpHandler -> org.apache.cordova.HttpHandler:
    java.lang.Boolean get(java.lang.String,java.lang.String) -> get
    org.apache.http.HttpEntity getHttpEntity(java.lang.String) -> a
org.apache.cordova.IceCreamCordovaWebViewClient -> org.apache.cordova.IceCreamCordovaWebViewClient:
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
org.apache.cordova.InAppBrowser -> org.apache.cordova.InAppBrowser:
    java.lang.String LOG_TAG -> LOG_TAG
    android.app.Dialog dialog -> a
    android.webkit.WebView inAppWebView -> b
    android.widget.EditText edittext -> c
    org.apache.cordova.api.CallbackContext callbackContext -> d
    boolean showLocationBar -> e
    boolean openWindowHidden -> g
    java.lang.String buttonLabel -> h
    boolean clearAllCache -> i
    boolean clearSessionCache -> j
    boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.api.CallbackContext) -> execute
    void onReset() -> onReset
    void onDestroy() -> onDestroy
    void injectDeferredObject(java.lang.String,java.lang.String) -> a
    java.lang.String openExternal(java.lang.String) -> openExternal
    void closeDialog() -> closeDialog
    java.lang.String showWebPage(java.lang.String,java.util.HashMap) -> showWebPage
    void sendUpdate(org.json.JSONObject,boolean) -> a
    void sendUpdate(org.json.JSONObject,boolean,org.apache.cordova.api.PluginResult$Status) -> a
    void access$0$f1efdcd(org.apache.cordova.InAppBrowser,org.json.JSONObject) -> a
    void access$1$e04efac(org.apache.cordova.InAppBrowser,org.json.JSONObject,org.apache.cordova.api.PluginResult$Status) -> a
    android.app.Dialog access$2(org.apache.cordova.InAppBrowser) -> a
    android.webkit.WebView access$3(org.apache.cordova.InAppBrowser) -> b
    void access$4(org.apache.cordova.InAppBrowser,android.app.Dialog) -> a
    void access$5(org.apache.cordova.InAppBrowser) -> c
    void access$6(org.apache.cordova.InAppBrowser) -> d
    void access$7(org.apache.cordova.InAppBrowser,android.widget.EditText) -> a
    android.widget.EditText access$8(org.apache.cordova.InAppBrowser) -> e
    void access$9(org.apache.cordova.InAppBrowser,java.lang.String) -> a
    java.lang.String access$10(org.apache.cordova.InAppBrowser) -> f
    void access$11(org.apache.cordova.InAppBrowser,android.webkit.WebView) -> a
    boolean access$12(org.apache.cordova.InAppBrowser) -> g
    boolean access$13(org.apache.cordova.InAppBrowser) -> h
    boolean access$14(org.apache.cordova.InAppBrowser) -> i
    boolean access$15(org.apache.cordova.InAppBrowser) -> j
org.apache.cordova.InAppBrowser$1 -> org.apache.cordova.az:
    org.apache.cordova.InAppBrowser this$0 -> a
    java.lang.String val$target -> b
    java.lang.String val$url -> c
    java.util.HashMap val$features -> d
    org.apache.cordova.api.CallbackContext val$callbackContext -> e
    void run() -> run
org.apache.cordova.InAppBrowser$2 -> org.apache.cordova.ba:
    org.apache.cordova.InAppBrowser this$0 -> a
    void run() -> run
org.apache.cordova.InAppBrowser$3 -> org.apache.cordova.bb:
    org.apache.cordova.InAppBrowser this$0 -> a
    java.lang.String val$finalScriptToInject -> b
    void run() -> run
org.apache.cordova.InAppBrowser$4 -> org.apache.cordova.bc:
    org.apache.cordova.InAppBrowser this$0 -> a
    android.webkit.WebView val$childView -> b
    void run() -> run
org.apache.cordova.InAppBrowser$5 -> org.apache.cordova.bd:
    org.apache.cordova.InAppBrowser this$0 -> a
    java.lang.String val$url -> b
    org.apache.cordova.CordovaWebView val$thatWebView -> c
    int dpToPixels(int) -> a
    void run() -> run
    org.apache.cordova.InAppBrowser access$0(org.apache.cordova.InAppBrowser$5) -> a
org.apache.cordova.InAppBrowser$5$1 -> org.apache.cordova.be:
    org.apache.cordova.InAppBrowser$5 this$1 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
org.apache.cordova.InAppBrowser$5$2 -> org.apache.cordova.bf:
    org.apache.cordova.InAppBrowser$5 this$1 -> a
    void onClick(android.view.View) -> onClick
org.apache.cordova.InAppBrowser$5$3 -> org.apache.cordova.bg:
    org.apache.cordova.InAppBrowser$5 this$1 -> a
    void onClick(android.view.View) -> onClick
org.apache.cordova.InAppBrowser$5$4 -> org.apache.cordova.bh:
    org.apache.cordova.InAppBrowser$5 this$1 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
org.apache.cordova.InAppBrowser$5$5 -> org.apache.cordova.bi:
    org.apache.cordova.InAppBrowser$5 this$1 -> a
    void onClick(android.view.View) -> onClick
org.apache.cordova.InAppBrowser$InAppBrowserClient -> org.apache.cordova.InAppBrowser$InAppBrowserClient:
    android.widget.EditText edittext -> a
    org.apache.cordova.CordovaWebView webView -> b
    org.apache.cordova.InAppBrowser this$0 -> c
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
org.apache.cordova.InAppChromeClient -> org.apache.cordova.InAppChromeClient:
    org.apache.cordova.CordovaWebView webView -> a
    java.lang.String LOG_TAG -> b
    long MAX_QUOTA -> c
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
org.apache.cordova.JSONUtils -> org.apache.cordova.JSONUtils:
    java.util.List toStringList(org.json.JSONArray) -> toStringList
org.apache.cordova.LinearLayoutSoftKeyboardDetect -> org.apache.cordova.LinearLayoutSoftKeyboardDetect:
    int oldHeight -> a
    int oldWidth -> b
    int screenWidth -> c
    int screenHeight -> d
    org.apache.cordova.CordovaActivity app -> e
    void onMeasure(int,int) -> onMeasure
org.apache.cordova.NativeToJsMessageQueue -> org.apache.cordova.NativeToJsMessageQueue:
    int MAX_PAYLOAD_SIZE -> a
    int activeListenerIndex -> b
    boolean paused -> c
    java.util.LinkedList queue -> d
    org.apache.cordova.NativeToJsMessageQueue$BridgeMode[] registeredListeners -> e
    org.apache.cordova.api.CordovaInterface cordova -> f
    org.apache.cordova.CordovaWebView webView -> g
    void setBridgeMode(int) -> setBridgeMode
    void reset() -> reset
    java.lang.String popAndEncode(boolean) -> popAndEncode
    java.lang.String popAndEncodeAsJs() -> a
    void addJavaScript(java.lang.String) -> addJavaScript
    void addPluginResult(org.apache.cordova.api.PluginResult,java.lang.String) -> addPluginResult
    void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage) -> a
    void setPaused(boolean) -> setPaused
    boolean getPaused() -> getPaused
    java.lang.String access$0(org.apache.cordova.NativeToJsMessageQueue) -> a
    org.apache.cordova.CordovaWebView access$1(org.apache.cordova.NativeToJsMessageQueue) -> b
    org.apache.cordova.api.CordovaInterface access$2(org.apache.cordova.NativeToJsMessageQueue) -> c
    java.util.LinkedList access$3(org.apache.cordova.NativeToJsMessageQueue) -> d
org.apache.cordova.NativeToJsMessageQueue$BridgeMode -> org.apache.cordova.bj:
    org.apache.cordova.NativeToJsMessageQueue this$0 -> a
    void onNativeToJsMessageAvailable() -> a
    void notifyOfFlush(boolean) -> a
org.apache.cordova.NativeToJsMessageQueue$JsMessage -> org.apache.cordova.bk:
    java.lang.String jsPayloadOrCallbackId -> a
    org.apache.cordova.api.PluginResult pluginResult -> b
    int calculateEncodedLength() -> a
    void encodeAsJsMessage(java.lang.StringBuilder) -> a
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode -> org.apache.cordova.bl:
    java.lang.Runnable runnable -> b
    org.apache.cordova.NativeToJsMessageQueue this$0 -> c
    void onNativeToJsMessageAvailable() -> a
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode$1 -> org.apache.cordova.bm:
    org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode this$1 -> a
    void run() -> run
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode -> org.apache.cordova.bn:
    boolean online -> b
    java.lang.Runnable runnable -> c
    org.apache.cordova.NativeToJsMessageQueue this$0 -> d
    void onNativeToJsMessageAvailable() -> a
    void notifyOfFlush(boolean) -> a
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$1 -> org.apache.cordova.bo:
    org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode this$1 -> a
    void run() -> run
org.apache.cordova.NativeToJsMessageQueue$PrivateApiBridgeMode -> org.apache.cordova.bp:
    java.lang.reflect.Method sendMessageMethod -> b
    java.lang.Object webViewCore -> c
    boolean initFailed -> d
    org.apache.cordova.NativeToJsMessageQueue this$0 -> e
    void onNativeToJsMessageAvailable() -> a
org.apache.cordova.NetworkListener -> org.apache.cordova.NetworkListener:
org.apache.cordova.NetworkManager -> org.apache.cordova.NetworkManager:
    int NOT_REACHABLE -> NOT_REACHABLE
    int REACHABLE_VIA_CARRIER_DATA_NETWORK -> REACHABLE_VIA_CARRIER_DATA_NETWORK
    int REACHABLE_VIA_WIFI_NETWORK -> REACHABLE_VIA_WIFI_NETWORK
    java.lang.String WIFI -> WIFI
    java.lang.String WIMAX -> WIMAX
    java.lang.String MOBILE -> MOBILE
    java.lang.String GSM -> GSM
    java.lang.String GPRS -> GPRS
    java.lang.String EDGE -> EDGE
    java.lang.String CDMA -> CDMA
    java.lang.String UMTS -> UMTS
    java.lang.String HSPA -> HSPA
    java.lang.String HSUPA -> HSUPA
    java.lang.String HSDPA -> HSDPA
    java.lang.String ONEXRTT -> ONEXRTT
    java.lang.String EHRPD -> EHRPD
    java.lang.String LTE -> LTE
    java.lang.String UMB -> UMB
    java.lang.String HSPA_PLUS -> HSPA_PLUS
    java.lang.String TYPE_UNKNOWN -> TYPE_UNKNOWN
    java.lang.String TYPE_ETHERNET -> TYPE_ETHERNET
    java.lang.String TYPE_WIFI -> TYPE_WIFI
    java.lang.String TYPE_2G -> TYPE_2G
    java.lang.String TYPE_3G -> TYPE_3G
    java.lang.String TYPE_4G -> TYPE_4G
    java.lang.String TYPE_NONE -> TYPE_NONE
    org.apache.cordova.api.CallbackContext connectionCallbackContext -> c
    boolean registered -> d
    android.net.ConnectivityManager sockMan -> a
    android.content.BroadcastReceiver receiver -> b
    java.lang.String lastStatus -> e
    void initialize(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    java.lang.String getConnectionInfo(android.net.NetworkInfo) -> a
    void access$0(org.apache.cordova.NetworkManager,android.net.NetworkInfo) -> a
org.apache.cordova.NetworkManager$1 -> org.apache.cordova.bq:
    org.apache.cordova.NetworkManager this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.apache.cordova.Notification -> org.apache.cordova.Notification:
    int confirmResult -> confirmResult
    android.app.ProgressDialog spinnerDialog -> spinnerDialog
    android.app.ProgressDialog progressDialog -> progressDialog
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void beep(long) -> beep
    void vibrate(long) -> vibrate
    void alert(java.lang.String,java.lang.String,java.lang.String,org.apache.cordova.api.CallbackContext) -> alert
    void confirm(java.lang.String,java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> confirm
    void prompt(java.lang.String,java.lang.String,org.json.JSONArray,java.lang.String,org.apache.cordova.api.CallbackContext) -> prompt
    void activityStart(java.lang.String,java.lang.String) -> activityStart
    void activityStop() -> activityStop
    void progressStart(java.lang.String,java.lang.String) -> progressStart
    void progressValue(int) -> progressValue
    void progressStop() -> progressStop
org.apache.cordova.Notification$1 -> org.apache.cordova.br:
    org.apache.cordova.Notification this$0 -> a
    org.apache.cordova.api.CordovaInterface val$cordova -> b
    java.lang.String val$message -> c
    java.lang.String val$title -> d
    java.lang.String val$buttonLabel -> e
    org.apache.cordova.api.CallbackContext val$callbackContext -> f
    void run() -> run
org.apache.cordova.Notification$1$1 -> org.apache.cordova.bs:
    org.apache.cordova.Notification$1 this$1 -> a
    org.apache.cordova.api.CallbackContext val$callbackContext -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.Notification$1$2 -> org.apache.cordova.bt:
    org.apache.cordova.Notification$1 this$1 -> a
    org.apache.cordova.api.CallbackContext val$callbackContext -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.Notification$2 -> org.apache.cordova.bu:
    org.apache.cordova.Notification this$0 -> a
    org.apache.cordova.api.CordovaInterface val$cordova -> b
    java.lang.String val$message -> c
    java.lang.String val$title -> d
    org.json.JSONArray val$buttonLabels -> e
    org.apache.cordova.api.CallbackContext val$callbackContext -> f
    void run() -> run
org.apache.cordova.Notification$2$1 -> org.apache.cordova.bv:
    org.apache.cordova.Notification$2 this$1 -> a
    org.apache.cordova.api.CallbackContext val$callbackContext -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.Notification$2$2 -> org.apache.cordova.bw:
    org.apache.cordova.Notification$2 this$1 -> a
    org.apache.cordova.api.CallbackContext val$callbackContext -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.Notification$2$3 -> org.apache.cordova.bx:
    org.apache.cordova.Notification$2 this$1 -> a
    org.apache.cordova.api.CallbackContext val$callbackContext -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.Notification$2$4 -> org.apache.cordova.by:
    org.apache.cordova.Notification$2 this$1 -> a
    org.apache.cordova.api.CallbackContext val$callbackContext -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.Notification$3 -> org.apache.cordova.bz:
    org.apache.cordova.Notification this$0 -> a
    org.apache.cordova.api.CordovaInterface val$cordova -> b
    java.lang.String val$message -> c
    java.lang.String val$title -> d
    android.widget.EditText val$promptInput -> e
    org.json.JSONArray val$buttonLabels -> f
    java.lang.String val$defaultText -> g
    org.apache.cordova.api.CallbackContext val$callbackContext -> h
    void run() -> run
org.apache.cordova.Notification$3$1 -> org.apache.cordova.ca:
    org.apache.cordova.Notification$3 this$1 -> a
    org.json.JSONObject val$result -> b
    android.widget.EditText val$promptInput -> c
    java.lang.String val$defaultText -> d
    org.apache.cordova.api.CallbackContext val$callbackContext -> e
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.Notification$3$2 -> org.apache.cordova.cb:
    org.apache.cordova.Notification$3 this$1 -> a
    org.json.JSONObject val$result -> b
    android.widget.EditText val$promptInput -> c
    java.lang.String val$defaultText -> d
    org.apache.cordova.api.CallbackContext val$callbackContext -> e
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.Notification$3$3 -> org.apache.cordova.cc:
    org.apache.cordova.Notification$3 this$1 -> a
    org.json.JSONObject val$result -> b
    android.widget.EditText val$promptInput -> c
    java.lang.String val$defaultText -> d
    org.apache.cordova.api.CallbackContext val$callbackContext -> e
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.Notification$3$4 -> org.apache.cordova.cd:
    org.apache.cordova.Notification$3 this$1 -> a
    org.json.JSONObject val$result -> b
    android.widget.EditText val$promptInput -> c
    java.lang.String val$defaultText -> d
    org.apache.cordova.api.CallbackContext val$callbackContext -> e
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.Notification$4 -> org.apache.cordova.ce:
    org.apache.cordova.Notification this$0 -> a
    org.apache.cordova.api.CordovaInterface val$cordova -> b
    java.lang.String val$title -> c
    java.lang.String val$message -> d
    void run() -> run
    org.apache.cordova.Notification access$0(org.apache.cordova.Notification$4) -> a
org.apache.cordova.Notification$4$1 -> org.apache.cordova.cf:
    org.apache.cordova.Notification$4 this$1 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.Notification$5 -> org.apache.cordova.cg:
    org.apache.cordova.Notification this$0 -> a
    org.apache.cordova.Notification val$notification -> b
    org.apache.cordova.api.CordovaInterface val$cordova -> c
    java.lang.String val$title -> d
    java.lang.String val$message -> e
    void run() -> run
org.apache.cordova.Notification$5$1 -> org.apache.cordova.ch:
    org.apache.cordova.Notification$5 this$1 -> a
    org.apache.cordova.Notification val$notification -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.R -> org.apache.cordova.R:
org.apache.cordova.R$drawable -> org.apache.cordova.R$drawable:
    int icon -> icon
    int splash -> splash
org.apache.cordova.R$id -> org.apache.cordova.R$id:
    int appView -> appView
org.apache.cordova.R$layout -> org.apache.cordova.R$layout:
    int main -> main
org.apache.cordova.R$string -> org.apache.cordova.R$string:
    int app_name -> app_name
    int go -> go
org.apache.cordova.R$xml -> org.apache.cordova.R$xml:
    int config -> config
org.apache.cordova.SplashScreen -> org.apache.cordova.SplashScreen:
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
org.apache.cordova.Storage -> org.apache.cordova.Storage:
    android.database.sqlite.SQLiteDatabase myDb -> a
    java.lang.String path -> b
    java.lang.String dbName -> c
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    void onReset() -> onReset
    void openDatabase(java.lang.String,java.lang.String,java.lang.String,long) -> openDatabase
    void executeSql(java.lang.String,java.lang.String[],java.lang.String) -> executeSql
    void processResults(android.database.Cursor,java.lang.String) -> processResults
org.apache.cordova.api.CallbackContext -> org.apache.cordova.api.CallbackContext:
    java.lang.String callbackId -> a
    org.apache.cordova.CordovaWebView webView -> b
    boolean finished -> c
    int changingThreads -> d
    boolean isFinished() -> isFinished
    boolean isChangingThreads() -> isChangingThreads
    java.lang.String getCallbackId() -> getCallbackId
    void sendPluginResult(org.apache.cordova.api.PluginResult) -> sendPluginResult
    void success(org.json.JSONObject) -> success
    void success(java.lang.String) -> success
    void success(org.json.JSONArray) -> success
    void success(byte[]) -> success
    void success(int) -> success
    void success() -> success
    void error(org.json.JSONObject) -> error
    void error(java.lang.String) -> error
    void error(int) -> error
org.apache.cordova.api.CordovaInterface -> org.apache.cordova.api.CordovaInterface:
    void startActivityForResult(org.apache.cordova.api.CordovaPlugin,android.content.Intent,int) -> startActivityForResult
    void setActivityResultCallback(org.apache.cordova.api.CordovaPlugin) -> setActivityResultCallback
    android.app.Activity getActivity() -> getActivity
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
org.apache.cordova.api.CordovaPlugin -> org.apache.cordova.api.CordovaPlugin:
    java.lang.String id -> id
    org.apache.cordova.CordovaWebView webView -> webView
    org.apache.cordova.api.CordovaInterface cordova -> cordova
    boolean $assertionsDisabled -> f
    void initialize(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    boolean execute(java.lang.String,java.lang.String,org.apache.cordova.api.CallbackContext) -> execute
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.api.CallbackContext) -> execute
    void onPause(boolean) -> onPause
    void onResume(boolean) -> onResume
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onOverrideUrlLoading(java.lang.String) -> onOverrideUrlLoading
    android.net.Uri remapUri(android.net.Uri) -> remapUri
    void onReset() -> onReset
org.apache.cordova.api.LOG -> org.apache.cordova.api.LOG:
    int VERBOSE -> VERBOSE
    int DEBUG -> DEBUG
    int INFO -> INFO
    int WARN -> WARN
    int ERROR -> ERROR
    int LOGLEVEL -> LOGLEVEL
    void setLogLevel(int) -> setLogLevel
    void setLogLevel(java.lang.String) -> setLogLevel
    boolean isLoggable(int) -> isLoggable
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void v(java.lang.String,java.lang.String,java.lang.Object[]) -> v
    void d(java.lang.String,java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.String,java.lang.String,java.lang.Object[]) -> e
org.apache.cordova.api.LegacyContext -> org.apache.cordova.api.LegacyContext:
    org.apache.cordova.api.CordovaInterface cordova -> a
    void cancelLoadUrl() -> cancelLoadUrl
    android.app.Activity getActivity() -> getActivity
    android.content.Context getContext() -> getContext
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    void setActivityResultCallback(org.apache.cordova.api.CordovaPlugin) -> setActivityResultCallback
    void startActivityForResult(org.apache.cordova.api.CordovaPlugin,android.content.Intent,int) -> startActivityForResult
    void startActivity(android.content.Intent) -> startActivity
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    android.content.res.AssetManager getAssets() -> getAssets
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    android.content.Context getApplicationContext() -> getApplicationContext
    android.content.pm.PackageManager getPackageManager() -> getPackageManager
    android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    android.content.res.Resources getResources() -> getResources
    android.content.ComponentName startService(android.content.Intent) -> startService
    boolean bindService(android.content.Intent,android.content.ServiceConnection,int) -> bindService
    void unbindService(android.content.ServiceConnection) -> unbindService
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
org.apache.cordova.api.Plugin -> org.apache.cordova.api.Plugin:
    org.apache.cordova.api.LegacyContext ctx -> ctx
    org.apache.cordova.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void initialize(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    void setContext(org.apache.cordova.api.CordovaInterface) -> setContext
    void setView(org.apache.cordova.CordovaWebView) -> setView
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext) -> execute
    void sendJavascript(java.lang.String) -> sendJavascript
    void sendPluginResult(org.apache.cordova.api.PluginResult,java.lang.String) -> sendPluginResult
    void success(org.apache.cordova.api.PluginResult,java.lang.String) -> success
    void success(org.json.JSONObject,java.lang.String) -> success
    void success(java.lang.String,java.lang.String) -> success
    void error(org.apache.cordova.api.PluginResult,java.lang.String) -> error
    void error(org.json.JSONObject,java.lang.String) -> error
    void error(java.lang.String,java.lang.String) -> error
org.apache.cordova.api.Plugin$1 -> org.apache.cordova.api.a:
    org.apache.cordova.api.Plugin this$0 -> a
    java.lang.String val$action -> b
    org.json.JSONArray val$args -> c
    java.lang.String val$callbackId -> d
    void run() -> run
org.apache.cordova.api.PluginEntry -> org.apache.cordova.api.PluginEntry:
    java.lang.String service -> service
    java.lang.String pluginClass -> pluginClass
    org.apache.cordova.api.CordovaPlugin plugin -> plugin
    boolean onload -> onload
    org.apache.cordova.api.CordovaPlugin createPlugin(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface) -> createPlugin
org.apache.cordova.api.PluginManager -> org.apache.cordova.api.PluginManager:
    java.lang.String TAG -> a
    java.util.HashMap entries -> b
    org.apache.cordova.api.CordovaInterface ctx -> c
    org.apache.cordova.CordovaWebView app -> d
    boolean firstRun -> e
    java.util.HashMap urlMap -> urlMap
    java.util.concurrent.atomic.AtomicInteger numPendingUiExecs -> f
    void init() -> init
    void loadPlugins() -> loadPlugins
    void clearPluginObjects() -> clearPluginObjects
    void startupPlugins() -> startupPlugins
    void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> exec
    void execHelper(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> exec
    org.apache.cordova.api.CordovaPlugin getPlugin(java.lang.String) -> getPlugin
    void addService(java.lang.String,java.lang.String) -> addService
    void addService(org.apache.cordova.api.PluginEntry) -> addService
    void onPause(boolean) -> onPause
    void onResume(boolean) -> onResume
    void onDestroy() -> onDestroy
    java.lang.Object postMessage(java.lang.String,java.lang.Object) -> postMessage
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean onOverrideUrlLoading(java.lang.String) -> onOverrideUrlLoading
    void onReset() -> onReset
    android.net.Uri remapUri(android.net.Uri) -> remapUri
    java.util.concurrent.atomic.AtomicInteger access$0(org.apache.cordova.api.PluginManager) -> a
    org.apache.cordova.api.CordovaInterface access$1(org.apache.cordova.api.PluginManager) -> b
    void access$2(org.apache.cordova.api.PluginManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
org.apache.cordova.api.PluginManager$1 -> org.apache.cordova.api.b:
    org.apache.cordova.api.PluginManager this$0 -> a
    java.lang.String val$service -> b
    java.lang.String val$action -> c
    java.lang.String val$callbackId -> d
    java.lang.String val$rawArgs -> e
    void run() -> run
org.apache.cordova.api.PluginManager$PluginManagerService -> org.apache.cordova.api.c:
    org.apache.cordova.api.PluginManager this$0 -> a
    boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.api.CallbackContext) -> execute
    org.apache.cordova.api.PluginManager access$1(org.apache.cordova.api.PluginManager$PluginManagerService) -> a
org.apache.cordova.api.PluginManager$PluginManagerService$1 -> org.apache.cordova.api.d:
    org.apache.cordova.api.PluginManager$PluginManagerService this$1 -> a
    void run() -> run
org.apache.cordova.api.PluginResult -> org.apache.cordova.api.PluginResult:
    int status -> a
    int messageType -> b
    boolean keepCallback -> c
    java.lang.String strMessage -> d
    java.lang.String encodedMessage -> e
    int MESSAGE_TYPE_STRING -> MESSAGE_TYPE_STRING
    int MESSAGE_TYPE_JSON -> MESSAGE_TYPE_JSON
    int MESSAGE_TYPE_NUMBER -> MESSAGE_TYPE_NUMBER
    int MESSAGE_TYPE_BOOLEAN -> MESSAGE_TYPE_BOOLEAN
    int MESSAGE_TYPE_NULL -> MESSAGE_TYPE_NULL
    int MESSAGE_TYPE_ARRAYBUFFER -> MESSAGE_TYPE_ARRAYBUFFER
    int MESSAGE_TYPE_BINARYSTRING -> MESSAGE_TYPE_BINARYSTRING
    java.lang.String[] StatusMessages -> StatusMessages
    void setKeepCallback(boolean) -> setKeepCallback
    int getStatus() -> getStatus
    int getMessageType() -> getMessageType
    java.lang.String getMessage() -> getMessage
    java.lang.String getStrMessage() -> getStrMessage
    boolean getKeepCallback() -> getKeepCallback
    java.lang.String getJSONString() -> getJSONString
    java.lang.String toCallbackString(java.lang.String) -> toCallbackString
    java.lang.String toSuccessCallbackString(java.lang.String) -> toSuccessCallbackString
    java.lang.String toErrorCallbackString(java.lang.String) -> toErrorCallbackString
org.apache.cordova.api.PluginResult$Status -> org.apache.cordova.api.PluginResult$Status:
    org.apache.cordova.api.PluginResult$Status NO_RESULT -> NO_RESULT
    org.apache.cordova.api.PluginResult$Status OK -> OK
    org.apache.cordova.api.PluginResult$Status CLASS_NOT_FOUND_EXCEPTION -> CLASS_NOT_FOUND_EXCEPTION
    org.apache.cordova.api.PluginResult$Status ILLEGAL_ACCESS_EXCEPTION -> ILLEGAL_ACCESS_EXCEPTION
    org.apache.cordova.api.PluginResult$Status INSTANTIATION_EXCEPTION -> INSTANTIATION_EXCEPTION
    org.apache.cordova.api.PluginResult$Status MALFORMED_URL_EXCEPTION -> MALFORMED_URL_EXCEPTION
    org.apache.cordova.api.PluginResult$Status IO_EXCEPTION -> IO_EXCEPTION
    org.apache.cordova.api.PluginResult$Status INVALID_ACTION -> INVALID_ACTION
    org.apache.cordova.api.PluginResult$Status JSON_EXCEPTION -> JSON_EXCEPTION
    org.apache.cordova.api.PluginResult$Status ERROR -> ERROR
    org.apache.cordova.api.PluginResult$Status[] ENUM$VALUES -> a
    org.apache.cordova.api.PluginResult$Status[] values() -> values
    org.apache.cordova.api.PluginResult$Status valueOf(java.lang.String) -> valueOf
org.apache.cordova.file.EncodingException -> org.apache.cordova.file.EncodingException:
org.apache.cordova.file.FileExistsException -> org.apache.cordova.file.FileExistsException:
org.apache.cordova.file.InvalidModificationException -> org.apache.cordova.file.InvalidModificationException:
org.apache.cordova.file.NoModificationAllowedException -> org.apache.cordova.file.NoModificationAllowedException:
org.apache.cordova.file.TypeMismatchException -> org.apache.cordova.file.TypeMismatchException:
